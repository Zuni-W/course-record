!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	GmSSL/include/gmssl/sha3.h	/^	uint64_t A[5][5];$/;"	m	struct:__anon74	access:public
A	GmSSL/include/gmssl/sha3.h	/^	uint64_t A[5][5];$/;"	m	struct:__anon75	access:public
A	GmSSL/include/gmssl/sha3.h	/^	uint64_t A[5][5];$/;"	m	struct:__anon76	access:public
A	GmSSL/include/gmssl/sha3.h	/^	uint64_t A[5][5];$/;"	m	struct:__anon77	access:public
A	GmSSL/tests/aestest.c	/^	char *A;$/;"	m	struct:__anon11	file:	access:public
A	GmSSL/tests/gcmtest.c	/^	char *A;$/;"	m	struct:__anon7	file:	access:public
ADD31	GmSSL/src/zuc.c	100;"	d	file:
ADMIN_TYPE	GmSSL/tools/sdfutil/sgd.h	391;"	d
AES128_KEY_BITS	GmSSL/include/gmssl/aes.h	61;"	d
AES128_KEY_SIZE	GmSSL/include/gmssl/aes.h	65;"	d
AES128_ROUNDS	GmSSL/include/gmssl/aes.h	71;"	d
AES192_KEY_BITS	GmSSL/include/gmssl/aes.h	62;"	d
AES192_KEY_SIZE	GmSSL/include/gmssl/aes.h	66;"	d
AES192_ROUNDS	GmSSL/include/gmssl/aes.h	72;"	d
AES256_KEY_BITS	GmSSL/include/gmssl/aes.h	63;"	d
AES256_KEY_SIZE	GmSSL/include/gmssl/aes.h	67;"	d
AES256_ROUNDS	GmSSL/include/gmssl/aes.h	73;"	d
AES_BLOCK_SIZE	GmSSL/include/gmssl/aes.h	69;"	d
AES_GCM_IV_DEFAULT_BITS	GmSSL/include/gmssl/aes.h	106;"	d
AES_GCM_IV_DEFAULT_SIZE	GmSSL/include/gmssl/aes.h	107;"	d
AES_GCM_IV_MAX_SIZE	GmSSL/include/gmssl/aes.h	105;"	d
AES_GCM_IV_MIN_SIZE	GmSSL/include/gmssl/aes.h	104;"	d
AES_GCM_MAX_AAD_SIZE	GmSSL/include/gmssl/aes.h	110;"	d
AES_GCM_MAX_PLAINTEXT_SIZE	GmSSL/include/gmssl/aes.h	113;"	d
AES_GCM_MIN_AAD_SIZE	GmSSL/include/gmssl/aes.h	109;"	d
AES_GCM_MIN_PLAINTEXT_SIZE	GmSSL/include/gmssl/aes.h	112;"	d
AES_KEY	GmSSL/include/gmssl/aes.h	/^} AES_KEY;$/;"	t	typeref:struct:__anon33
AES_MAX_ROUNDS	GmSSL/include/gmssl/aes.h	74;"	d
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	535;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	538;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	541;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	544;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	547;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	551;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	553;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	559;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	562;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	565;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	570;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	573;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	576;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	581;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	584;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	587;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	590;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	593;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	596;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	599;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	602;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	605;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	608;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	611;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	616;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	619;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	622;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	625;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	628;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	631;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	636;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	639;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	642;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	645;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	648;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	652;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	520;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	523;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	526;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	529;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	532;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	536;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	538;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	540;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	544;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	547;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	550;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	555;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	558;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	561;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	566;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	569;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	572;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	575;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	578;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	581;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	584;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	587;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	590;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	593;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	596;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	601;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	604;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	607;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	610;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	613;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	616;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	621;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	624;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	627;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	630;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	633;"	d	file:
ARCHITECTURE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	637;"	d	file:
ASN1_FALSE	GmSSL/src/asn1.c	406;"	d	file:
ASN1_FMT_FULL	GmSSL/include/gmssl/asn1.h	75;"	d
ASN1_GENERALIZED_TIME_LEN	GmSSL/include/gmssl/asn1.h	239;"	d
ASN1_OID_INFO	GmSSL/include/gmssl/asn1.h	/^} ASN1_OID_INFO;$/;"	t	typeref:struct:__anon41
ASN1_OID_MAX_NODES	GmSSL/include/gmssl/asn1.h	191;"	d
ASN1_TAG	GmSSL/include/gmssl/asn1.h	/^enum ASN1_TAG {$/;"	g
ASN1_TAG_APPLICATION	GmSSL/include/gmssl/asn1.h	65;"	d
ASN1_TAG_BIT_STRING	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_BIT_STRING		= 3,$/;"	e	enum:ASN1_TAG
ASN1_TAG_BMPString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_BMPString		= 30, \/\/ 0x24, 2-byte unicode with zeros$/;"	e	enum:ASN1_TAG
ASN1_TAG_BOOLEAN	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_BOOLEAN		= 1,$/;"	e	enum:ASN1_TAG
ASN1_TAG_CHARACTER_STRING	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_CHARACTER_STRING	= 29, \/\/ 0x23$/;"	e	enum:ASN1_TAG
ASN1_TAG_CONSTRUCTED	GmSSL/include/gmssl/asn1.h	69;"	d
ASN1_TAG_CONTENT_SPECIFIC	GmSSL/include/gmssl/asn1.h	66;"	d
ASN1_TAG_EMBEDDED	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_EMBEDDED		= 11, \/\/ 0x0B$/;"	e	enum:ASN1_TAG
ASN1_TAG_ENUMERATED	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_ENUMERATED		= 10, \/\/ 0x0A$/;"	e	enum:ASN1_TAG
ASN1_TAG_EXPLICIT	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_EXPLICIT		= 0xa0,$/;"	e	enum:ASN1_TAG
ASN1_TAG_EXPLICIT	GmSSL/include/gmssl/asn1.h	72;"	d
ASN1_TAG_EXTERNAL	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_EXTERNAL		= 8,$/;"	e	enum:ASN1_TAG
ASN1_TAG_GeneralString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_GeneralString		= 27, \/\/ 0x21$/;"	e	enum:ASN1_TAG
ASN1_TAG_GeneralizedTime	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_GeneralizedTime	= 24, \/\/ 0x18$/;"	e	enum:ASN1_TAG
ASN1_TAG_GraphicString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_GraphicString		= 25, \/\/ 0x19$/;"	e	enum:ASN1_TAG
ASN1_TAG_IA5String	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_IA5String		= 22, \/\/ 0x16, 7-bit ascii$/;"	e	enum:ASN1_TAG
ASN1_TAG_IMPLICIT	GmSSL/include/gmssl/asn1.h	71;"	d
ASN1_TAG_INTEGER	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_INTEGER		= 2,$/;"	e	enum:ASN1_TAG
ASN1_TAG_NULL	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_NULL			= 5,$/;"	e	enum:ASN1_TAG
ASN1_TAG_NumericString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_NumericString		= 18, \/\/ 0x12$/;"	e	enum:ASN1_TAG
ASN1_TAG_OBJECT_IDENTIFIER	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_OBJECT_IDENTIFIER	= 6,$/;"	e	enum:ASN1_TAG
ASN1_TAG_OCTET_STRING	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_OCTET_STRING		= 4,$/;"	e	enum:ASN1_TAG
ASN1_TAG_ObjectDescriptor	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_ObjectDescriptor	= 7,$/;"	e	enum:ASN1_TAG
ASN1_TAG_PRIMITIVE	GmSSL/include/gmssl/asn1.h	68;"	d
ASN1_TAG_PRIVATE	GmSSL/include/gmssl/asn1.h	67;"	d
ASN1_TAG_PrintableString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_PrintableString	= 19, \/\/ 0x13, printable subset of ascii$/;"	e	enum:ASN1_TAG
ASN1_TAG_REAL	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_REAL			= 9,$/;"	e	enum:ASN1_TAG
ASN1_TAG_RELATIVE_OID	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_RELATIVE_OID		= 13, \/\/ 0x0D$/;"	e	enum:ASN1_TAG
ASN1_TAG_SEQUENCE	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_SEQUENCE		= 0x30,$/;"	e	enum:ASN1_TAG
ASN1_TAG_SET	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_SET			= 0x31,$/;"	e	enum:ASN1_TAG
ASN1_TAG_TeletexString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_TeletexString		= 20, \/\/ 0x14, T61String$/;"	e	enum:ASN1_TAG
ASN1_TAG_UNIVERSAL	GmSSL/include/gmssl/asn1.h	64;"	d
ASN1_TAG_UTCTime	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_UTCTime		= 23, \/\/ 0x17$/;"	e	enum:ASN1_TAG
ASN1_TAG_UTF8String	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_UTF8String		= 12, \/\/ 0x0C$/;"	e	enum:ASN1_TAG
ASN1_TAG_UniversalString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_UniversalString	= 28, \/\/ 0x22$/;"	e	enum:ASN1_TAG
ASN1_TAG_VideotexString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_VideotexString		= 21, \/\/ 0x15$/;"	e	enum:ASN1_TAG
ASN1_TAG_VisibleString	GmSSL/include/gmssl/asn1.h	/^	ASN1_TAG_VisibleString		= 26, \/\/ 0x20$/;"	e	enum:ASN1_TAG
ASN1_TRUE	GmSSL/src/asn1.c	405;"	d	file:
ASN1_UTC_TIME_LEN	GmSSL/include/gmssl/asn1.h	238;"	d
AdditionalInput	GmSSL/tests/hash_drbgtest.c	62;"	d	file:
AdditionalInput1	GmSSL/tests/hash_drbgtest.c	66;"	d	file:
AsymAlgAbility	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int AsymAlgAbility[2];	\/* AsymAlgAbility[0] = algors$/;"	m	struct:DeviceInfo_st	access:public
B64_BASE64	GmSSL/src/base64.c	51;"	d	file:
B64_CR	GmSSL/src/base64.c	46;"	d	file:
B64_EOF	GmSSL/src/base64.c	47;"	d	file:
B64_EOLN	GmSSL/src/base64.c	45;"	d	file:
B64_ERROR	GmSSL/src/base64.c	49;"	d	file:
B64_NOT_BASE64	GmSSL/src/base64.c	50;"	d	file:
B64_WS	GmSSL/src/base64.c	48;"	d	file:
BASE64_CTX	GmSSL/include/gmssl/base64.h	/^} BASE64_CTX;$/;"	t	typeref:struct:__anon40
BASE64_DECODE_LENGTH	GmSSL/include/gmssl/base64.h	77;"	d
BASE64_ENCODE_LENGTH	GmSSL/include/gmssl/base64.h	76;"	d
BIN_PER_LINE	GmSSL/src/base64.c	30;"	d	file:
BLOCK_CIPHER	GmSSL/include/gmssl/block_cipher.h	/^struct BLOCK_CIPHER {$/;"	s
BLOCK_CIPHER	GmSSL/include/gmssl/block_cipher.h	/^typedef struct BLOCK_CIPHER BLOCK_CIPHER;$/;"	t	typeref:struct:BLOCK_CIPHER
BLOCK_CIPHER::block_size	GmSSL/include/gmssl/block_cipher.h	/^	size_t block_size;$/;"	m	struct:BLOCK_CIPHER	access:public
BLOCK_CIPHER::decrypt	GmSSL/include/gmssl/block_cipher.h	/^	block_cipher_decrypt_func decrypt;$/;"	m	struct:BLOCK_CIPHER	access:public
BLOCK_CIPHER::encrypt	GmSSL/include/gmssl/block_cipher.h	/^	block_cipher_encrypt_func encrypt;$/;"	m	struct:BLOCK_CIPHER	access:public
BLOCK_CIPHER::key_size	GmSSL/include/gmssl/block_cipher.h	/^	size_t key_size;$/;"	m	struct:BLOCK_CIPHER	access:public
BLOCK_CIPHER::oid	GmSSL/include/gmssl/block_cipher.h	/^	int oid;$/;"	m	struct:BLOCK_CIPHER	access:public
BLOCK_CIPHER::set_decrypt_key	GmSSL/include/gmssl/block_cipher.h	/^	block_cipher_set_decrypt_key_func set_decrypt_key;$/;"	m	struct:BLOCK_CIPHER	access:public
BLOCK_CIPHER::set_encrypt_key	GmSSL/include/gmssl/block_cipher.h	/^	block_cipher_set_encrypt_key_func set_encrypt_key;$/;"	m	struct:BLOCK_CIPHER	access:public
BLOCK_CIPHER_BLOCK_SIZE	GmSSL/include/gmssl/block_cipher.h	67;"	d
BLOCK_CIPHER_KEY	GmSSL/include/gmssl/block_cipher.h	/^struct BLOCK_CIPHER_KEY {$/;"	s
BLOCK_CIPHER_KEY	GmSSL/include/gmssl/block_cipher.h	/^typedef struct BLOCK_CIPHER_KEY BLOCK_CIPHER_KEY;$/;"	t	typeref:struct:BLOCK_CIPHER_KEY
BLOCK_CIPHER_KEY::__anon72::aes_key	GmSSL/include/gmssl/block_cipher.h	/^		AES_KEY aes_key;$/;"	m	union:BLOCK_CIPHER_KEY::__anon72	access:public
BLOCK_CIPHER_KEY::__anon72::sm4_key	GmSSL/include/gmssl/block_cipher.h	/^		SM4_KEY sm4_key;$/;"	m	union:BLOCK_CIPHER_KEY::__anon72	access:public
BLOCK_CIPHER_KEY::cipher	GmSSL/include/gmssl/block_cipher.h	/^	const BLOCK_CIPHER *cipher;$/;"	m	struct:BLOCK_CIPHER_KEY	access:public
BLOCK_CIPHER_KEY::u	GmSSL/include/gmssl/block_cipher.h	/^	} u;$/;"	m	struct:BLOCK_CIPHER_KEY	typeref:union:BLOCK_CIPHER_KEY::__anon72	access:public
BLOCK_CIPHER_MAX_KEY_SIZE	GmSSL/include/gmssl/block_cipher.h	69;"	d
BLOCK_CIPHER_MIN_KEY_SIZE	GmSSL/include/gmssl/block_cipher.h	68;"	d
BLOCK_CIPHER_aes128	GmSSL/include/gmssl/block_cipher.h	/^const BLOCK_CIPHER *BLOCK_CIPHER_aes128(void);$/;"	p	signature:(void)
BLOCK_CIPHER_aes128	GmSSL/src/block_cipher.c	/^const BLOCK_CIPHER *BLOCK_CIPHER_aes128(void) {$/;"	f	signature:(void)
BLOCK_CIPHER_sm4	GmSSL/include/gmssl/block_cipher.h	/^const BLOCK_CIPHER *BLOCK_CIPHER_sm4(void);$/;"	p	signature:(void)
BLOCK_CIPHER_sm4	GmSSL/src/block_cipher.c	/^const BLOCK_CIPHER *BLOCK_CIPHER_sm4(void) {$/;"	f	signature:(void)
BOOL	GmSSL/tools/sdfutil/sgd.h	/^typedef long			BOOL;$/;"	t
BYTE	GmSSL/tools/sdfutil/sgd.h	/^typedef UINT8			BYTE;$/;"	t
BitReconstruction2	GmSSL/src/zuc.c	145;"	d	file:
BitReconstruction3	GmSSL/src/zuc.c	149;"	d	file:
BitReconstruction4	GmSSL/src/zuc.c	153;"	d	file:
BufferSize	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int BufferSize;$/;"	m	struct:DeviceInfo_st	access:public
C	GmSSL/include/gmssl/hash_drbg.h	/^	uint8_t C[HASH_DRBG_MAX_SEED_SIZE];$/;"	m	struct:__anon73	access:public
C	GmSSL/tests/aestest.c	/^	char *C;$/;"	m	struct:__anon11	file:	access:public
C	GmSSL/tests/gcmtest.c	/^	char *C;$/;"	m	struct:__anon7	file:	access:public
C	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char C[1];$/;"	m	struct:ECCCipher_st	access:public
C	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned char C[136];$/;"	m	struct:__anon4	access:public
C0	GmSSL/tests/hash_drbgtest.c	64;"	d	file:
C1	GmSSL/tests/hash_drbgtest.c	69;"	d	file:
CHACHA20_COUNTER_BITS	GmSSL/include/gmssl/chacha20.h	63;"	d
CHACHA20_COUNTER_SIZE	GmSSL/include/gmssl/chacha20.h	67;"	d
CHACHA20_COUNTER_WORDS	GmSSL/include/gmssl/chacha20.h	71;"	d
CHACHA20_IS_BIG_ENDIAN	GmSSL/include/gmssl/chacha20.h	54;"	d
CHACHA20_KEY_BITS	GmSSL/include/gmssl/chacha20.h	61;"	d
CHACHA20_KEY_SIZE	GmSSL/include/gmssl/chacha20.h	65;"	d
CHACHA20_KEY_WORDS	GmSSL/include/gmssl/chacha20.h	69;"	d
CHACHA20_NONCE_BITS	GmSSL/include/gmssl/chacha20.h	62;"	d
CHACHA20_NONCE_SIZE	GmSSL/include/gmssl/chacha20.h	66;"	d
CHACHA20_NONCE_WORDS	GmSSL/include/gmssl/chacha20.h	70;"	d
CHACHA20_STATE	GmSSL/include/gmssl/chacha20.h	/^} CHACHA20_STATE;$/;"	t	typeref:struct:__anon38
CHAR	GmSSL/tools/sdfutil/sgd.h	/^typedef UINT8			CHAR;$/;"	t
CHAR_PER_LINE	GmSSL/src/base64.c	32;"	d	file:
CHUNKS_PER_LINE	GmSSL/src/base64.c	31;"	d	file:
CK	GmSSL/sm4_setkey.c	/^static uint32_t CK[32] = {$/;"	v	file:
CK	GmSSL/src/sm4_setkey.c	/^static uint32_t CK[32] = {$/;"	v	file:
CK	oSM4.c	/^uint32_t CK[32] =$/;"	v
CKH	sm4_bs.c	/^unsigned long long CKH[2][16][4]=$/;"	v
CKL	sm4_bs.c	/^unsigned long long CKL[2][16][4]=$/;"	v
CMAKE_BINARY_DIR	GmSSL/build/Makefile	/^CMAKE_BINARY_DIR = \/home\/zuni-w\/Desktop\/csapp\/mylab3\/GmSSL\/build$/;"	m
CMAKE_COMMAND	GmSSL/build/Makefile	/^CMAKE_COMMAND = \/usr\/share\/cmake-3.21\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	GmSSL/build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/zuni-w\/Desktop\/csapp\/mylab3\/GmSSL$/;"	m
CMS_CERTS_AND_KEY	GmSSL/include/gmssl/cms.h	/^} CMS_CERTS_AND_KEY;$/;"	t	typeref:struct:__anon71
CMS_version_v1	GmSSL/include/gmssl/cms.h	/^	CMS_version_v1 = 1,$/;"	e	enum:__anon70
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	123;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	175;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	271;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	353;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	362;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	393;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	109;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	123;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	182;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	197;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	240;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	305;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	378;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	381;"	d	file:
COMPILER_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
COMPILER_VERSION	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	242;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	302;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	365;"	d	file:
COMPILER_VERSION_INTERNAL	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
COMPILER_VERSION_INTERNAL_STR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_VERSION_INTERNAL_STR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	199;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	259;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	277;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	315;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	356;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	383;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	150;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	192;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	299;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	323;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	335;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	35;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	362;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	87;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	151;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	184;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	228;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	294;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	306;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	357;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	365;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	384;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	234;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	245;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	260;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	272;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	326;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	363;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	368;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	201;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	216;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	295;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	342;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	345;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	366;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	371;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	380;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	134;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	289;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	311;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	329;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	356;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	369;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	47;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_TWEAK	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_TWEAK	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
COMPILER_VERSION_TWEAK	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
COMPILER_VERSION_TWEAK	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_TWEAK	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_TWEAK	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
COMPILER_VERSION_TWEAK	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	347;"	d	file:
COMPILER_VERSION_TWEAK	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
CXX_STD	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	725;"	d	file:
CXX_STD	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	727;"	d	file:
CXX_STD	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	730;"	d	file:
CXX_STD	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	733;"	d	file:
CXX_STD	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	735;"	d	file:
C_DIALECT	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	739;"	d	file:
C_DIALECT	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	741;"	d	file:
C_DIALECT	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	744;"	d	file:
C_DIALECT	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	746;"	d	file:
C_DIALECT	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	748;"	d	file:
C_DIALECT	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	750;"	d	file:
C_DIALECT	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	752;"	d	file:
CalculateMAC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_CalculateMAC_FuncPtr CalculateMAC;$/;"	m	struct:sdf_method_st	access:public
Ch	GmSSL/src/sha256.c	54;"	d	file:
Ch	GmSSL/src/sha512.c	128;"	d	file:
Ck	baseSM4.c	/^u32 Ck[32]={$/;"	v
CloseDevice	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_CloseDevice_FuncPtr CloseDevice;$/;"	m	struct:sdf_method_st	access:public
CloseSession	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_CloseSession_FuncPtr CloseSession;$/;"	m	struct:sdf_method_st	access:public
CreateObject	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_CreateObject_FuncPtr CreateObject;$/;"	m	struct:sdf_method_st	access:public
DEBUG	GmSSL/include/gmssl/error.h	70;"	d
DEBUG	oSM4.c	9;"	d	file:
DEC	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	656;"	d	file:
DEC	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	641;"	d	file:
DEC_ROUND	GmSSL/sm4_setkey.c	80;"	d	file:
DEC_ROUND	GmSSL/src/sm4_setkey.c	80;"	d	file:
DES_BLOCK_BITS	GmSSL/include/gmssl/des.h	65;"	d
DES_BLOCK_SIZE	GmSSL/include/gmssl/des.h	67;"	d
DES_EDE_KEY	GmSSL/include/gmssl/des.h	/^} DES_EDE_KEY;$/;"	t	typeref:struct:__anon37
DES_EDE_KEY_SIZE	GmSSL/include/gmssl/des.h	73;"	d
DES_KEY	GmSSL/include/gmssl/des.h	/^} DES_KEY;$/;"	t	typeref:struct:__anon36
DES_KEY_BITS	GmSSL/include/gmssl/des.h	64;"	d
DES_KEY_SIZE	GmSSL/include/gmssl/des.h	66;"	d
DES_RK_BITS	GmSSL/include/gmssl/des.h	69;"	d
DES_RK_SIZE	GmSSL/include/gmssl/des.h	70;"	d
DES_ROUNDS	GmSSL/include/gmssl/des.h	71;"	d
DEVAPI	GmSSL/tools/sdfutil/sgd.h	385;"	d
DEVAPI	GmSSL/tools/sdfutil/sgd.h	387;"	d
DEVHANDLE	GmSSL/tools/sdfutil/sgd.h	/^typedef HANDLE DEVHANDLE;$/;"	t
DEVICEINFO	GmSSL/tools/sdfutil/sdf.h	/^} DEVICEINFO;$/;"	t	typeref:struct:DeviceInfo_st
DGST1	GmSSL/tests/sha224test.c	77;"	d	file:
DGST1	GmSSL/tests/sha256test.c	76;"	d	file:
DGST1	GmSSL/tests/sha384test.c	81;"	d	file:
DGST1	GmSSL/tests/sha512test.c	82;"	d	file:
DGST2	GmSSL/tests/sha224test.c	78;"	d	file:
DGST2	GmSSL/tests/sha256test.c	77;"	d	file:
DGST2	GmSSL/tests/sha384test.c	82;"	d	file:
DGST2	GmSSL/tests/sha512test.c	83;"	d	file:
DGST3	GmSSL/tests/sha224test.c	79;"	d	file:
DGST3	GmSSL/tests/sha256test.c	78;"	d	file:
DGST3	GmSSL/tests/sha384test.c	83;"	d	file:
DGST3	GmSSL/tests/sha512test.c	84;"	d	file:
DGST4	GmSSL/tests/sha224test.c	80;"	d	file:
DGST4	GmSSL/tests/sha256test.c	79;"	d	file:
DGST4	GmSSL/tests/sha384test.c	84;"	d	file:
DGST4	GmSSL/tests/sha512test.c	85;"	d	file:
DGST5	GmSSL/tests/sha224test.c	81;"	d	file:
DGST5	GmSSL/tests/sha256test.c	80;"	d	file:
DGST5	GmSSL/tests/sha384test.c	85;"	d	file:
DGST5	GmSSL/tests/sha512test.c	86;"	d	file:
DGST6	GmSSL/tests/sha224test.c	82;"	d	file:
DGST6	GmSSL/tests/sha256test.c	81;"	d	file:
DGST6	GmSSL/tests/sha384test.c	86;"	d	file:
DGST6	GmSSL/tests/sha512test.c	87;"	d	file:
DGST7	GmSSL/tests/sha224test.c	83;"	d	file:
DGST7	GmSSL/tests/sha256test.c	82;"	d	file:
DGST7	GmSSL/tests/sha384test.c	87;"	d	file:
DGST7	GmSSL/tests/sha512test.c	88;"	d	file:
DIGEST	GmSSL/include/gmssl/digest.h	/^struct DIGEST {$/;"	s
DIGEST	GmSSL/include/gmssl/digest.h	/^typedef struct DIGEST DIGEST;$/;"	t	typeref:struct:DIGEST
DIGEST::block_size	GmSSL/include/gmssl/digest.h	/^	size_t block_size;$/;"	m	struct:DIGEST	access:public
DIGEST::ctx_size	GmSSL/include/gmssl/digest.h	/^	size_t ctx_size;$/;"	m	struct:DIGEST	access:public
DIGEST::digest_size	GmSSL/include/gmssl/digest.h	/^	size_t digest_size;$/;"	m	struct:DIGEST	access:public
DIGEST::finish	GmSSL/include/gmssl/digest.h	/^	int (*finish)(DIGEST_CTX *ctx, uint8_t *dgst);$/;"	m	struct:DIGEST	access:public
DIGEST::init	GmSSL/include/gmssl/digest.h	/^	int (*init)(DIGEST_CTX *ctx);$/;"	m	struct:DIGEST	access:public
DIGEST::oid	GmSSL/include/gmssl/digest.h	/^	int oid;$/;"	m	struct:DIGEST	access:public
DIGEST::update	GmSSL/include/gmssl/digest.h	/^	int (*update)(DIGEST_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	m	struct:DIGEST	access:public
DIGEST_CTX	GmSSL/include/gmssl/digest.h	/^struct DIGEST_CTX {$/;"	s
DIGEST_CTX	GmSSL/include/gmssl/digest.h	/^typedef struct DIGEST_CTX DIGEST_CTX;$/;"	t	typeref:struct:DIGEST_CTX
DIGEST_CTX::__anon51::md5_ctx	GmSSL/include/gmssl/digest.h	/^		MD5_CTX md5_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
DIGEST_CTX::__anon51::sha1_ctx	GmSSL/include/gmssl/digest.h	/^		SHA1_CTX sha1_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
DIGEST_CTX::__anon51::sha224_ctx	GmSSL/include/gmssl/digest.h	/^		SHA224_CTX sha224_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
DIGEST_CTX::__anon51::sha256_ctx	GmSSL/include/gmssl/digest.h	/^		SHA256_CTX sha256_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
DIGEST_CTX::__anon51::sha384_ctx	GmSSL/include/gmssl/digest.h	/^		SHA384_CTX sha384_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
DIGEST_CTX::__anon51::sha512_ctx	GmSSL/include/gmssl/digest.h	/^		SHA512_CTX sha512_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
DIGEST_CTX::__anon51::sm3_ctx	GmSSL/include/gmssl/digest.h	/^		SM3_CTX sm3_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
DIGEST_CTX::digest	GmSSL/include/gmssl/digest.h	/^	const DIGEST *digest;$/;"	m	struct:DIGEST_CTX	access:public
DIGEST_CTX::u	GmSSL/include/gmssl/digest.h	/^	} u;$/;"	m	struct:DIGEST_CTX	typeref:union:DIGEST_CTX::__anon51	access:public
DIGEST_MAX_BLOCK_SIZE	GmSSL/include/gmssl/digest.h	72;"	d
DIGEST_MAX_SIZE	GmSSL/include/gmssl/digest.h	71;"	d
DIGEST_TABLE	GmSSL/src/digest.c	/^} DIGEST_TABLE;$/;"	t	typeref:struct:__anon81	file:
DIGEST_md5	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_md5(void);$/;"	p	signature:(void)
DIGEST_md5	GmSSL/src/digest.c	/^const DIGEST *DIGEST_md5(void)$/;"	f	signature:(void)
DIGEST_sha1	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_sha1(void);$/;"	p	signature:(void)
DIGEST_sha1	GmSSL/src/digest.c	/^const DIGEST *DIGEST_sha1(void)$/;"	f	signature:(void)
DIGEST_sha224	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_sha224(void);$/;"	p	signature:(void)
DIGEST_sha224	GmSSL/src/digest.c	/^const DIGEST *DIGEST_sha224(void)$/;"	f	signature:(void)
DIGEST_sha256	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_sha256(void);$/;"	p	signature:(void)
DIGEST_sha256	GmSSL/src/digest.c	/^const DIGEST *DIGEST_sha256(void)$/;"	f	signature:(void)
DIGEST_sha384	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_sha384(void);$/;"	p	signature:(void)
DIGEST_sha384	GmSSL/src/digest.c	/^const DIGEST *DIGEST_sha384(void)$/;"	f	signature:(void)
DIGEST_sha512	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_sha512(void);$/;"	p	signature:(void)
DIGEST_sha512	GmSSL/src/digest.c	/^const DIGEST *DIGEST_sha512(void)$/;"	f	signature:(void)
DIGEST_sha512_224	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_sha512_224(void);$/;"	p	signature:(void)
DIGEST_sha512_224	GmSSL/src/digest.c	/^const DIGEST *DIGEST_sha512_224(void)$/;"	f	signature:(void)
DIGEST_sha512_256	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_sha512_256(void);$/;"	p	signature:(void)
DIGEST_sha512_256	GmSSL/src/digest.c	/^const DIGEST *DIGEST_sha512_256(void)$/;"	f	signature:(void)
DIGEST_sm3	GmSSL/include/gmssl/digest.h	/^const DIGEST *DIGEST_sm3(void);$/;"	p	signature:(void)
DIGEST_sm3	GmSSL/src/digest.c	/^const DIGEST *DIGEST_sm3(void)$/;"	f	signature:(void)
DR	GmSSL/src/chacha20.c	96;"	d	file:
DWORD	GmSSL/tools/sdfutil/sgd.h	/^typedef UINT32			DWORD;$/;"	t
Decrypt	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_Decrypt_FuncPtr Decrypt;$/;"	m	struct:sdf_method_st	access:public
DeleteObject	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_DeleteObject_FuncPtr DeleteObject;$/;"	m	struct:sdf_method_st	access:public
DestroyKey	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_DestroyKey_FuncPtr DestroyKey;$/;"	m	struct:sdf_method_st	access:public
DeviceInfo_st	GmSSL/tools/sdfutil/sdf.h	/^typedef struct DeviceInfo_st {$/;"	s
DeviceInfo_st::AsymAlgAbility	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int AsymAlgAbility[2];	\/* AsymAlgAbility[0] = algors$/;"	m	struct:DeviceInfo_st	access:public
DeviceInfo_st::BufferSize	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int BufferSize;$/;"	m	struct:DeviceInfo_st	access:public
DeviceInfo_st::DeviceName	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char DeviceName[16];$/;"	m	struct:DeviceInfo_st	access:public
DeviceInfo_st::DeviceSerial	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char DeviceSerial[16];	\/* 8-char date +$/;"	m	struct:DeviceInfo_st	access:public
DeviceInfo_st::DeviceVersion	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int DeviceVersion;$/;"	m	struct:DeviceInfo_st	access:public
DeviceInfo_st::HashAlgAbility	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int HashAlgAbility;$/;"	m	struct:DeviceInfo_st	access:public
DeviceInfo_st::IssuerName	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char IssuerName[40];$/;"	m	struct:DeviceInfo_st	access:public
DeviceInfo_st::StandardVersion	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int StandardVersion;$/;"	m	struct:DeviceInfo_st	access:public
DeviceInfo_st::SymAlgAbility	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int SymAlgAbility;$/;"	m	struct:DeviceInfo_st	access:public
DeviceName	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char DeviceName[16];$/;"	m	struct:DeviceInfo_st	access:public
DeviceSerial	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char DeviceSerial[16];	\/* 8-char date +$/;"	m	struct:DeviceInfo_st	access:public
DeviceVersion	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int DeviceVersion;$/;"	m	struct:DeviceInfo_st	access:public
E	GmSSL/src/des.c	/^static unsigned char E[48] = {$/;"	v	file:
ECCCipehrBlob	GmSSL/tools/sdfutil/sdf.h	/^	ECCCipher ECCCipehrBlob;$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
ECCCipher	GmSSL/tools/sdfutil/sdf.h	/^} ECCCipher;$/;"	t	typeref:struct:ECCCipher_st
ECCCipher_st	GmSSL/tools/sdfutil/sdf.h	/^typedef struct ECCCipher_st {$/;"	s
ECCCipher_st::C	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char C[1];$/;"	m	struct:ECCCipher_st	access:public
ECCCipher_st::L	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int L;$/;"	m	struct:ECCCipher_st	access:public
ECCCipher_st::M	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char M[32];$/;"	m	struct:ECCCipher_st	access:public
ECCCipher_st::x	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char x[ECCref_MAX_LEN];$/;"	m	struct:ECCCipher_st	access:public
ECCCipher_st::y	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char y[ECCref_MAX_LEN];$/;"	m	struct:ECCCipher_st	access:public
ECCSignature	GmSSL/tools/sdfutil/sdf.h	/^} ECCSignature;$/;"	t	typeref:struct:ECCSignature_st
ECCSignature_st	GmSSL/tools/sdfutil/sdf.h	/^typedef struct ECCSignature_st {$/;"	s
ECCSignature_st::r	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char r[ECCref_MAX_LEN];$/;"	m	struct:ECCSignature_st	access:public
ECCSignature_st::s	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char s[ECCref_MAX_LEN];$/;"	m	struct:ECCSignature_st	access:public
ECC_MAX_MODULUS_BITS_LEN	GmSSL/tools/sdfutil/sgd.h	402;"	d
ECC_MAX_XCOORDINATE_BITS_LEN	GmSSL/tools/sdfutil/sgd.h	400;"	d
ECC_MAX_YCOORDINATE_BITS_LEN	GmSSL/tools/sdfutil/sgd.h	401;"	d
ECCrefPrivateKey	GmSSL/tools/sdfutil/sdf.h	/^} ECCrefPrivateKey;$/;"	t	typeref:struct:ECCrefPrivateKey_st
ECCrefPrivateKey_st	GmSSL/tools/sdfutil/sdf.h	/^typedef struct ECCrefPrivateKey_st {$/;"	s
ECCrefPrivateKey_st::K	GmSSL/tools/sdfutil/sdf.h	/^    unsigned char K[ECCref_MAX_LEN];$/;"	m	struct:ECCrefPrivateKey_st	access:public
ECCrefPrivateKey_st::bits	GmSSL/tools/sdfutil/sdf.h	/^    unsigned int  bits;$/;"	m	struct:ECCrefPrivateKey_st	access:public
ECCrefPublicKey	GmSSL/tools/sdfutil/sdf.h	/^} ECCrefPublicKey;$/;"	t	typeref:struct:ECCrefPublicKey_st
ECCrefPublicKey_st	GmSSL/tools/sdfutil/sdf.h	/^typedef struct ECCrefPublicKey_st {$/;"	s
ECCrefPublicKey_st::bits	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int bits;$/;"	m	struct:ECCrefPublicKey_st	access:public
ECCrefPublicKey_st::x	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char x[ECCref_MAX_LEN];$/;"	m	struct:ECCrefPublicKey_st	access:public
ECCrefPublicKey_st::y	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char y[ECCref_MAX_LEN];$/;"	m	struct:ECCrefPublicKey_st	access:public
ECCref_MAX_BITS	GmSSL/tools/sdfutil/sgd.h	423;"	d
ECCref_MAX_BITS	GmSSL/tools/sdfutil/sgd.h	425;"	d
ECCref_MAX_LEN	GmSSL/tools/sdfutil/sgd.h	427;"	d
EC_private_key_version	GmSSL/include/gmssl/ec.h	/^	EC_private_key_version = 1,$/;"	e	enum:__anon69
ENC_ROUND	GmSSL/sm4_setkey.c	74;"	d	file:
ENC_ROUND	GmSSL/src/sm4_setkey.c	74;"	d	file:
ENC_ROUND_BS0	sm4_bs.c	/^void ENC_ROUND_BS0(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)
ENC_ROUND_BS1	sm4_bs.c	/^void ENC_ROUND_BS1(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)
ENC_ROUND_BS2	sm4_bs.c	/^void ENC_ROUND_BS2(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)
ENC_ROUND_BS3	sm4_bs.c	/^void ENC_ROUND_BS3(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)
ENC_ROUND_BS4	sm4_bs.c	/^void ENC_ROUND_BS4(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4],unsigned long long i,unsigned long long ii)
EQUALS	GmSSL/build/Makefile	/^EQUALS = =$/;"	m
ERR_R_SDF_LIB	GmSSL/tools/sdfutil/sdf_lib.c	69;"	d	file:
Encrypt	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_Encrypt_FuncPtr Encrypt;$/;"	m	struct:sdf_method_st	access:public
EntropyInput	GmSSL/tests/hash_drbgtest.c	59;"	d	file:
EntropyInputPR1	GmSSL/tests/hash_drbgtest.c	67;"	d	file:
EnvelopedKeyBlob	GmSSL/tools/sdfutil/sdf.h	/^} EnvelopedKeyBlob, *PEnvelopedKeyBlob;$/;"	t	typeref:struct:SDF_ENVELOPEDKEYBLOB
ExchangeDigitEnvelopeBaseOnECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExchangeDigitEnvelopeBaseOnECC_FuncPtr ExchangeDigitEnvelopeBaseOnECC;$/;"	m	struct:sdf_method_st	access:public
ExchangeDigitEnvelopeBaseOnRSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExchangeDigitEnvelopeBaseOnRSA_FuncPtr ExchangeDigitEnvelopeBaseOnRSA;$/;"	m	struct:sdf_method_st	access:public
ExportEncPublicKey_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExportEncPublicKey_ECC_FuncPtr ExportEncPublicKey_ECC;$/;"	m	struct:sdf_method_st	access:public
ExportEncPublicKey_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExportEncPublicKey_RSA_FuncPtr ExportEncPublicKey_RSA;$/;"	m	struct:sdf_method_st	access:public
ExportSignPublicKey_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExportSignPublicKey_ECC_FuncPtr ExportSignPublicKey_ECC;$/;"	m	struct:sdf_method_st	access:public
ExportSignPublicKey_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExportSignPublicKey_RSA_FuncPtr ExportSignPublicKey_RSA;$/;"	m	struct:sdf_method_st	access:public
ExternalDecrypt_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExternalDecrypt_ECC_FuncPtr ExternalDecrypt_ECC;$/;"	m	struct:sdf_method_st	access:public
ExternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExternalEncrypt_ECC_FuncPtr ExternalEncrypt_ECC;$/;"	m	struct:sdf_method_st	access:public
ExternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExternalPublicKeyOperation_RSA_FuncPtr ExternalPublicKeyOperation_RSA;$/;"	m	struct:sdf_method_st	access:public
ExternalVerify_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExternalVerify_ECC_FuncPtr ExternalVerify_ECC;$/;"	m	struct:sdf_method_st	access:public
F	GmSSL/src/md5.c	55;"	d	file:
F	GmSSL/src/zuc.c	183;"	d	file:
F0	GmSSL/src/sha1.c	54;"	d	file:
F1	GmSSL/src/sha1.c	55;"	d	file:
F2	GmSSL/src/sha1.c	56;"	d	file:
F3	GmSSL/src/sha1.c	57;"	d	file:
FALSE	GmSSL/tools/sdfutil/sgd.h	377;"	d
FF00	GmSSL/src/sm3.c	67;"	d	file:
FF16	GmSSL/src/sm3.c	68;"	d	file:
FK	GmSSL/sm4_setkey.c	/^static uint32_t FK[4] = {$/;"	v	file:
FK	GmSSL/src/sm4_setkey.c	/^static uint32_t FK[4] = {$/;"	v	file:
FK	oSM4.c	/^uint32_t FK[4] = { 0xa3b1bac6,0x56aa3350,0x677d9197,0xb27022dc };$/;"	v
FK_BS00h	sm4_bs.h	10;"	d
FK_BS00l	sm4_bs.h	11;"	d
FK_BS01h	sm4_bs.h	12;"	d
FK_BS01l	sm4_bs.h	13;"	d
FK_BS02h	sm4_bs.h	14;"	d
FK_BS02l	sm4_bs.h	15;"	d
FK_BS03h	sm4_bs.h	16;"	d
FK_BS03l	sm4_bs.h	17;"	d
FK_BS10h	sm4_bs.h	19;"	d
FK_BS10l	sm4_bs.h	20;"	d
FK_BS11h	sm4_bs.h	21;"	d
FK_BS11l	sm4_bs.h	22;"	d
FK_BS12h	sm4_bs.h	23;"	d
FK_BS12l	sm4_bs.h	24;"	d
FK_BS13h	sm4_bs.h	25;"	d
FK_BS13l	sm4_bs.h	26;"	d
FK_BS20h	sm4_bs.h	28;"	d
FK_BS20l	sm4_bs.h	29;"	d
FK_BS21h	sm4_bs.h	30;"	d
FK_BS21l	sm4_bs.h	31;"	d
FK_BS22h	sm4_bs.h	32;"	d
FK_BS22l	sm4_bs.h	33;"	d
FK_BS23h	sm4_bs.h	34;"	d
FK_BS23l	sm4_bs.h	35;"	d
FK_BS30h	sm4_bs.h	37;"	d
FK_BS30l	sm4_bs.h	38;"	d
FK_BS31h	sm4_bs.h	39;"	d
FK_BS31l	sm4_bs.h	40;"	d
FK_BS32h	sm4_bs.h	41;"	d
FK_BS32l	sm4_bs.h	42;"	d
FK_BS33h	sm4_bs.h	43;"	d
FK_BS33l	sm4_bs.h	44;"	d
FLAGS	GmSSL/tools/sdfutil/sgd.h	/^typedef UINT32			FLAGS;$/;"	t
FMT_CARRAY	GmSSL/include/gmssl/error.h	86;"	d
FULL_UNROLL	GmSSL/src/sm3.c	279;"	d	file:
F_	GmSSL/src/zuc.c	169;"	d	file:
Fk	baseSM4.c	/^u32 Fk[4]={0xa3b1bac6,0x56aa3350,0x677d9197,0xb27022dc};$/;"	v
G	GmSSL/src/md5.c	56;"	d	file:
GB	sm4_bs.c	9;"	d	file:
GCM_IS_LITTLE_ENDIAN	GmSSL/include/gmssl/gcm.h	79;"	d
GCM_IV_DEFAULT_BITS	GmSSL/include/gmssl/gcm.h	66;"	d
GCM_IV_DEFAULT_SIZE	GmSSL/include/gmssl/gcm.h	67;"	d
GCM_IV_MAX_SIZE	GmSSL/include/gmssl/gcm.h	65;"	d
GCM_IV_MIN_SIZE	GmSSL/include/gmssl/gcm.h	64;"	d
GCM_MAX_AAD_SIZE	GmSSL/include/gmssl/gcm.h	70;"	d
GCM_MAX_PLAINTEXT_SIZE	GmSSL/include/gmssl/gcm.h	73;"	d
GCM_MIN_AAD_SIZE	GmSSL/include/gmssl/gcm.h	69;"	d
GCM_MIN_PLAINTEXT_SIZE	GmSSL/include/gmssl/gcm.h	72;"	d
GETU16	GmSSL/include/gmssl/endian.h	55;"	d
GETU16_LE	GmSSL/include/gmssl/endian.h	99;"	d
GETU32	GmSSL/include/gmssl/endian.h	59;"	d
GETU32_LE	GmSSL/include/gmssl/endian.h	100;"	d
GETU64	GmSSL/include/gmssl/endian.h	65;"	d
GETU64_LE	GmSSL/include/gmssl/endian.h	101;"	d
GF16X2	sm4_bs.c	8;"	d	file:
GF16_2_inver_bs	sm4_bs.c	/^void GF16_2_inver_bs(unsigned long long a1,unsigned long long a0,unsigned long long *thp,unsigned long long *tlp)\/\/2+2 invers$/;"	f	signature:(unsigned long long a1,unsigned long long a0,unsigned long long *thp,unsigned long long *tlp)
GF4X2	sm4_bs.c	7;"	d	file:
GF4X2_inver	sm4_bs.c	/^unsigned long long GF4X2_inver(unsigned long long in1)\/\/4+4bit invers\/\/4 bit silce$/;"	f	signature:(unsigned long long in1)
GF4_2_X	sm4_bs.c	/^unsigned long long GF4_2_X(unsigned long long az,unsigned long long bz)\/\/(4+4)*(4+4),\/\/4 bit silce$/;"	f	signature:(unsigned long long az,unsigned long long bz)
GF4_inver	sm4_bs.c	4;"	d	file:
GG00	GmSSL/src/sm3.c	69;"	d	file:
GG16	GmSSL/src/sm3.c	70;"	d	file:
GHASH_SIZE	GmSSL/include/gmssl/gcm.h	76;"	d
GMSSL_AES_H	GmSSL/include/gmssl/aes.h	51;"	d
GMSSL_ASN1_H	GmSSL/include/gmssl/asn1.h	53;"	d
GMSSL_BASE64_H	GmSSL/include/gmssl/base64.h	51;"	d
GMSSL_BLOCK_CIPHER_H	GmSSL/include/gmssl/block_cipher.h	52;"	d
GMSSL_CHACHA20_H	GmSSL/include/gmssl/chacha20.h	52;"	d
GMSSL_CMS_H	GmSSL/include/gmssl/cms.h	57;"	d
GMSSL_DES_H	GmSSL/include/gmssl/des.h	52;"	d
GMSSL_DIGEST_H	GmSSL/include/gmssl/digest.h	51;"	d
GMSSL_EC_H	GmSSL/include/gmssl/ec.h	50;"	d
GMSSL_ENDIAN_H	GmSSL/include/gmssl/endian.h	50;"	d
GMSSL_ERROR_H	GmSSL/include/gmssl/error.h	51;"	d
GMSSL_FMT_BIN	GmSSL/include/gmssl/error.h	63;"	d
GMSSL_FMT_DER	GmSSL/include/gmssl/error.h	65;"	d
GMSSL_FMT_HEX	GmSSL/include/gmssl/error.h	64;"	d
GMSSL_FMT_PEM	GmSSL/include/gmssl/error.h	66;"	d
GMSSL_GCM_H	GmSSL/include/gmssl/gcm.h	50;"	d
GMSSL_GF128_H	GmSSL/include/gmssl/gf128.h	55;"	d
GMSSL_HASH_DRBG_H	GmSSL/include/gmssl/hash_drbg.h	53;"	d
GMSSL_HEX_H	GmSSL/include/gmssl/hex.h	51;"	d
GMSSL_HKDF_H	GmSSL/include/gmssl/hkdf.h	51;"	d
GMSSL_HMAC_H	GmSSL/include/gmssl/hmac.h	50;"	d
GMSSL_MD5_H	GmSSL/include/gmssl/md5.h	51;"	d
GMSSL_MEM_H	GmSSL/include/gmssl/mem.h	50;"	d
GMSSL_OID_H	GmSSL/include/gmssl/oid.h	51;"	d
GMSSL_PBKDF2_H	GmSSL/include/gmssl/pbkdf2.h	50;"	d
GMSSL_PEM_H	GmSSL/include/gmssl/pem.h	50;"	d
GMSSL_PKCS8_H	GmSSL/include/gmssl/pkcs8.h	52;"	d
GMSSL_RAND_H	GmSSL/include/gmssl/rand.h	50;"	d
GMSSL_RC4_H	GmSSL/include/gmssl/rc4.h	51;"	d
GMSSL_RSA_H	GmSSL/include/gmssl/rsa.h	51;"	d
GMSSL_SDF_H	GmSSL/include/gmssl/sdf.h	50;"	d
GMSSL_SHA1_H	GmSSL/include/gmssl/sha1.h	50;"	d
GMSSL_SHA2_H	GmSSL/include/gmssl/sha2.h	51;"	d
GMSSL_SHA3_H	GmSSL/include/gmssl/sha3.h	51;"	d
GMSSL_SKF_H	GmSSL/include/gmssl/skf.h	50;"	d
GMSSL_SM2_H	GmSSL/include/gmssl/sm2.h	51;"	d
GMSSL_SM3_H	GmSSL/include/gmssl/sm3.h	50;"	d
GMSSL_SM4_H	GmSSL/include/gmssl/sm4.h	50;"	d
GMSSL_SM4_H	GmSSL/sm4.h	50;"	d
GMSSL_SM4_H	GmSSL/src/sm4.h	50;"	d
GMSSL_SM4_LCL_H	GmSSL/sm4_lcl.h	51;"	d
GMSSL_SM4_LCL_H	GmSSL/src/sm4_lcl.h	51;"	d
GMSSL_SM9_H	GmSSL/include/gmssl/sm9.h	52;"	d
GMSSL_TLS_H	GmSSL/include/gmssl/tls.h	51;"	d
GMSSL_VERSION_H	GmSSL/include/gmssl/version.h	51;"	d
GMSSL_VERSION_NUM	GmSSL/include/gmssl/version.h	57;"	d
GMSSL_VERSION_STR	GmSSL/include/gmssl/version.h	58;"	d
GMSSL_X509_ALG_H	GmSSL/include/gmssl/x509_alg.h	50;"	d
GMSSL_X509_CRL_H	GmSSL/include/gmssl/x509_crl.h	51;"	d
GMSSL_X509_EXT_H	GmSSL/include/gmssl/x509_ext.h	50;"	d
GMSSL_X509_H	GmSSL/include/gmssl/x509.h	50;"	d
GMSSL_X509_OID_H	GmSSL/include/gmssl/x509_oid.h	50;"	d
GMSSL_X509_REQ_H	GmSSL/include/gmssl/x509_req.h	50;"	d
GMSSL_X509_STR_H	GmSSL/include/gmssl/x509_str.h	50;"	d
GMSSL_ZUC_H	GmSSL/include/gmssl/zuc.h	50;"	d
GMSSL_cipher_ecdhe_sm2_with_sm4_ccm_sm3	GmSSL/include/gmssl/tls.h	/^	GMSSL_cipher_ecdhe_sm2_with_sm4_ccm_sm3	= 0xe108,$/;"	e	enum:__anon15
GMSSL_cipher_ecdhe_sm2_with_sm4_gcm_sm3	GmSSL/include/gmssl/tls.h	/^	GMSSL_cipher_ecdhe_sm2_with_sm4_gcm_sm3	= 0xe107,$/;"	e	enum:__anon15
GMSSL_cipher_ecdhe_sm2_with_sm4_sm3	GmSSL/include/gmssl/tls.h	/^	GMSSL_cipher_ecdhe_sm2_with_sm4_sm3	= 0xe102,$/;"	e	enum:__anon15
GMSSL_cipher_ecdhe_sm2_with_zuc_sm3	GmSSL/include/gmssl/tls.h	/^	GMSSL_cipher_ecdhe_sm2_with_zuc_sm3	= 0xe10d,$/;"	e	enum:__anon15
GenerateAgreementDataAndKeyWithECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateAgreementDataAndKeyWithECC_FuncPtr GenerateAgreementDataAndKeyWithECC;$/;"	m	struct:sdf_method_st	access:public
GenerateAgreementDataWithECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateAgreementDataWithECC_FuncPtr GenerateAgreementDataWithECC;$/;"	m	struct:sdf_method_st	access:public
GenerateKeyPair_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyPair_ECC_FuncPtr GenerateKeyPair_ECC;$/;"	m	struct:sdf_method_st	access:public
GenerateKeyPair_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyPair_RSA_FuncPtr GenerateKeyPair_RSA;$/;"	m	struct:sdf_method_st	access:public
GenerateKeyWithECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithECC_FuncPtr GenerateKeyWithECC;$/;"	m	struct:sdf_method_st	access:public
GenerateKeyWithEPK_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithEPK_ECC_FuncPtr GenerateKeyWithEPK_ECC;$/;"	m	struct:sdf_method_st	access:public
GenerateKeyWithEPK_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithEPK_RSA_FuncPtr GenerateKeyWithEPK_RSA;$/;"	m	struct:sdf_method_st	access:public
GenerateKeyWithIPK_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithIPK_ECC_FuncPtr GenerateKeyWithIPK_ECC;$/;"	m	struct:sdf_method_st	access:public
GenerateKeyWithIPK_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithIPK_RSA_FuncPtr GenerateKeyWithIPK_RSA;$/;"	m	struct:sdf_method_st	access:public
GenerateKeyWithKEK	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithKEK_FuncPtr GenerateKeyWithKEK;$/;"	m	struct:sdf_method_st	access:public
GenerateRandom	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateRandom_FuncPtr GenerateRandom;$/;"	m	struct:sdf_method_st	access:public
GetDeviceInfo	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GetDeviceInfo_FuncPtr GetDeviceInfo;$/;"	m	struct:sdf_method_st	access:public
GetPrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GetPrivateKeyAccessRight_FuncPtr GetPrivateKeyAccessRight;$/;"	m	struct:sdf_method_st	access:public
H	GmSSL/src/md5.c	57;"	d	file:
H	GmSSL/tests/gcmtest.c	/^	char *H;$/;"	m	struct:__anon7	file:	access:public
HANDLE	GmSSL/tools/sdfutil/sgd.h	/^typedef void *			HANDLE;$/;"	t
HAPPLICATION	GmSSL/tools/sdfutil/sgd.h	/^typedef HANDLE HAPPLICATION;$/;"	t
HASH_DRBG	GmSSL/include/gmssl/hash_drbg.h	/^} HASH_DRBG;$/;"	t	typeref:struct:__anon73
HASH_DRBG_MAX_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	70;"	d
HASH_DRBG_MAX_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	80;"	d
HASH_DRBG_RESEED_INTERVAL	GmSSL/include/gmssl/hash_drbg.h	82;"	d
HASH_DRBG_SHA1_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	63;"	d
HASH_DRBG_SHA1_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	73;"	d
HASH_DRBG_SHA224_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	64;"	d
HASH_DRBG_SHA224_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	74;"	d
HASH_DRBG_SHA256_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	66;"	d
HASH_DRBG_SHA256_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	76;"	d
HASH_DRBG_SHA384_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	68;"	d
HASH_DRBG_SHA384_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	78;"	d
HASH_DRBG_SHA512_224_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	65;"	d
HASH_DRBG_SHA512_224_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	75;"	d
HASH_DRBG_SHA512_256_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	67;"	d
HASH_DRBG_SHA512_256_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	77;"	d
HASH_DRBG_SHA512_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	69;"	d
HASH_DRBG_SHA512_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	79;"	d
HASH_DRBG_SM3_SEED_BITS	GmSSL/include/gmssl/hash_drbg.h	62;"	d
HASH_DRBG_SM3_SEED_SIZE	GmSSL/include/gmssl/hash_drbg.h	72;"	d
HCONTAINER	GmSSL/tools/sdfutil/sgd.h	/^typedef HANDLE HCONTAINER;$/;"	t
HEADER_SDF_H	GmSSL/tools/sdfutil/sdf.h	64;"	d
HEX	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	667;"	d	file:
HEX	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	652;"	d	file:
HMAC_CTX	GmSSL/include/gmssl/hmac.h	/^} HMAC_CTX;$/;"	t	typeref:struct:hmac_ctx_st
HMAC_MAX_SIZE	GmSSL/include/gmssl/hmac.h	60;"	d
HSESSION	GmSSL/tools/sdfutil/sgd.h	/^typedef HANDLE HSESSION;$/;"	t
HashAlgAbility	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int HashAlgAbility;$/;"	m	struct:DeviceInfo_st	access:public
HashFinal	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_HashFinal_FuncPtr HashFinal;$/;"	m	struct:sdf_method_st	access:public
HashInit	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_HashInit_FuncPtr HashInit;$/;"	m	struct:sdf_method_st	access:public
HashUpdate	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_HashUpdate_FuncPtr HashUpdate;$/;"	m	struct:sdf_method_st	access:public
I	GmSSL/src/md5.c	58;"	d	file:
ID_VOID_MAIN	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
INT16	GmSSL/tools/sdfutil/sgd.h	/^typedef signed short		INT16;$/;"	t
INT32	GmSSL/tools/sdfutil/sgd.h	/^typedef signed int		INT32;$/;"	t
INT8	GmSSL/tools/sdfutil/sgd.h	/^typedef signed char		INT8;$/;"	t
IP	GmSSL/src/des.c	/^static unsigned char IP[64] = {$/;"	v	file:
IPAD	GmSSL/src/hmac.c	54;"	d	file:
IPAD	GmSSL/src/sm3_hmac.c	72;"	d	file:
IP_inv	GmSSL/src/des.c	/^static unsigned char IP_inv[64] = {$/;"	v	file:
IV	GmSSL/tests/aestest.c	/^	char *IV;$/;"	m	struct:__anon11	file:	access:public
ImportKeyWithISK_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ImportKeyWithISK_ECC_FuncPtr ImportKeyWithISK_ECC;$/;"	m	struct:sdf_method_st	access:public
ImportKeyWithISK_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ImportKeyWithISK_RSA_FuncPtr ImportKeyWithISK_RSA;$/;"	m	struct:sdf_method_st	access:public
ImportKeyWithKEK	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ImportKeyWithKEK_FuncPtr ImportKeyWithKEK;$/;"	m	struct:sdf_method_st	access:public
InternalDecrypt_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalDecrypt_ECC_FuncPtr InternalDecrypt_ECC;$/;"	m	struct:sdf_method_st	access:public
InternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalEncrypt_ECC_FuncPtr InternalEncrypt_ECC;$/;"	m	struct:sdf_method_st	access:public
InternalPrivateKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalPrivateKeyOperation_RSA_FuncPtr InternalPrivateKeyOperation_RSA;$/;"	m	struct:sdf_method_st	access:public
InternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalPublicKeyOperation_RSA_FuncPtr InternalPublicKeyOperation_RSA;$/;"	m	struct:sdf_method_st	access:public
InternalSign_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalSign_ECC_FuncPtr InternalSign_ECC;$/;"	m	struct:sdf_method_st	access:public
InternalVerify_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalVerify_ECC_FuncPtr InternalVerify_ECC;$/;"	m	struct:sdf_method_st	access:public
IssuerName	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char IssuerName[40];$/;"	m	struct:DeviceInfo_st	access:public
JZ2_4	sm4_bs.c	/^unsigned long long JZ2_4(unsigned long long cin1)\/\/4 bit silce$/;"	f	signature:(unsigned long long cin1)
JZ4_2	sm4_bs.c	/^unsigned long long JZ4_2(unsigned long long cin1)\/\/4 bit silce$/;"	f	signature:(unsigned long long cin1)
K	GmSSL/include/gmssl/des.h	/^	DES_KEY K[3];$/;"	m	struct:__anon37	access:public
K	GmSSL/src/md5.c	/^static const uint32_t K[] = {$/;"	v	file:
K	GmSSL/src/sha256.c	/^static const uint32_t K[64] = {$/;"	v	file:
K	GmSSL/src/sha512.c	/^static const uint64_t K[80] = {$/;"	v	file:
K	GmSSL/src/sm3.c	/^uint32_t K[64] = {$/;"	v
K	GmSSL/tests/aestest.c	/^	char *K;$/;"	m	struct:__anon11	file:	access:public
K	GmSSL/tools/sdfutil/sdf.h	/^    unsigned char K[ECCref_MAX_LEN];$/;"	m	struct:ECCrefPrivateKey_st	access:public
K0	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 K0;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
K0	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 K0[4];$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
K0	GmSSL/src/sha1.c	59;"	d	file:
K0	GmSSL/src/sm3.c	98;"	d	file:
K1	GmSSL/src/sha1.c	60;"	d	file:
K1	GmSSL/src/sm3.c	99;"	d	file:
K10	GmSSL/src/sm3.c	108;"	d	file:
K11	GmSSL/src/sm3.c	109;"	d	file:
K12	GmSSL/src/sm3.c	110;"	d	file:
K13	GmSSL/src/sm3.c	111;"	d	file:
K14	GmSSL/src/sm3.c	112;"	d	file:
K15	GmSSL/src/sm3.c	113;"	d	file:
K16	GmSSL/src/sm3.c	114;"	d	file:
K17	GmSSL/src/sm3.c	115;"	d	file:
K18	GmSSL/src/sm3.c	116;"	d	file:
K19	GmSSL/src/sm3.c	117;"	d	file:
K2	GmSSL/src/sha1.c	61;"	d	file:
K2	GmSSL/src/sm3.c	100;"	d	file:
K20	GmSSL/src/sm3.c	118;"	d	file:
K21	GmSSL/src/sm3.c	119;"	d	file:
K22	GmSSL/src/sm3.c	120;"	d	file:
K23	GmSSL/src/sm3.c	121;"	d	file:
K24	GmSSL/src/sm3.c	122;"	d	file:
K25	GmSSL/src/sm3.c	123;"	d	file:
K26	GmSSL/src/sm3.c	124;"	d	file:
K27	GmSSL/src/sm3.c	125;"	d	file:
K28	GmSSL/src/sm3.c	126;"	d	file:
K29	GmSSL/src/sm3.c	127;"	d	file:
K3	GmSSL/src/sha1.c	62;"	d	file:
K3	GmSSL/src/sm3.c	101;"	d	file:
K30	GmSSL/src/sm3.c	128;"	d	file:
K31	GmSSL/src/sm3.c	129;"	d	file:
K32	GmSSL/src/sm3.c	130;"	d	file:
K33	GmSSL/src/sm3.c	131;"	d	file:
K34	GmSSL/src/sm3.c	132;"	d	file:
K35	GmSSL/src/sm3.c	133;"	d	file:
K36	GmSSL/src/sm3.c	134;"	d	file:
K37	GmSSL/src/sm3.c	135;"	d	file:
K38	GmSSL/src/sm3.c	136;"	d	file:
K39	GmSSL/src/sm3.c	137;"	d	file:
K4	GmSSL/src/sm3.c	102;"	d	file:
K40	GmSSL/src/sm3.c	138;"	d	file:
K41	GmSSL/src/sm3.c	139;"	d	file:
K42	GmSSL/src/sm3.c	140;"	d	file:
K43	GmSSL/src/sm3.c	141;"	d	file:
K44	GmSSL/src/sm3.c	142;"	d	file:
K45	GmSSL/src/sm3.c	143;"	d	file:
K46	GmSSL/src/sm3.c	144;"	d	file:
K47	GmSSL/src/sm3.c	145;"	d	file:
K48	GmSSL/src/sm3.c	146;"	d	file:
K49	GmSSL/src/sm3.c	147;"	d	file:
K5	GmSSL/src/sm3.c	103;"	d	file:
K50	GmSSL/src/sm3.c	148;"	d	file:
K51	GmSSL/src/sm3.c	149;"	d	file:
K52	GmSSL/src/sm3.c	150;"	d	file:
K53	GmSSL/src/sm3.c	151;"	d	file:
K54	GmSSL/src/sm3.c	152;"	d	file:
K55	GmSSL/src/sm3.c	153;"	d	file:
K56	GmSSL/src/sm3.c	154;"	d	file:
K57	GmSSL/src/sm3.c	155;"	d	file:
K58	GmSSL/src/sm3.c	156;"	d	file:
K59	GmSSL/src/sm3.c	157;"	d	file:
K6	GmSSL/src/sm3.c	104;"	d	file:
K60	GmSSL/src/sm3.c	158;"	d	file:
K61	GmSSL/src/sm3.c	159;"	d	file:
K62	GmSSL/src/sm3.c	160;"	d	file:
K63	GmSSL/src/sm3.c	161;"	d	file:
K7	GmSSL/src/sm3.c	105;"	d	file:
K8	GmSSL/src/sm3.c	106;"	d	file:
K9	GmSSL/src/sm3.c	107;"	d	file:
KD	GmSSL/src/zuc.c	/^static const ZUC_UINT15 KD[16] = {$/;"	v	file:
L	GmSSL/tests/hkdftest.c	/^	int L;$/;"	m	struct:__anon8	file:	access:public
L	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int L;$/;"	m	struct:ECCCipher_st	access:public
L	oSM4.c	/^uint32_t L(uint32_t B)$/;"	f	signature:(uint32_t B)
L1	GmSSL/src/zuc.c	104;"	d	file:
L2	GmSSL/src/zuc.c	111;"	d	file:
L32	GmSSL/sm4_enc.c	55;"	d	file:
L32	GmSSL/src/sm4_enc.c	55;"	d	file:
L32_	GmSSL/sm4_setkey.c	69;"	d	file:
L32_	GmSSL/src/sm4_setkey.c	69;"	d	file:
LFSR	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT31 LFSR[16];$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
LFSR	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT31 LFSR[16];$/;"	m	struct:ZUC_MAC_CTX_st	access:public
LFSR	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT31 LFSR[16];$/;"	m	struct:__anon34	access:public
LFSRWithInitialisationMode	GmSSL/src/zuc.c	118;"	d	file:
LFSRWithWorkMode	GmSSL/src/zuc.c	129;"	d	file:
LONG	GmSSL/tools/sdfutil/sgd.h	/^typedef INT32			LONG;$/;"	t
LONG	GmSSL/tools/sdfutil/sgd.h	/^typedef long			LONG;$/;"	t
LPSTR	GmSSL/tools/sdfutil/sgd.h	/^typedef CHAR *			LPSTR;$/;"	t
M	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char M[32];$/;"	m	struct:ECCCipher_st	access:public
M	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned char M[ECCref_MAX_LEN];$/;"	m	struct:__anon4	access:public
MAKEU31	GmSSL/src/zuc.c	158;"	d	file:
MAKEU32	GmSSL/src/zuc.c	163;"	d	file:
MAX_FILE_CONTAINER_NAME_SIZE	GmSSL/tools/sdfutil/sgd.h	407;"	d
MAX_FILE_NAME_SIZE	GmSSL/tools/sdfutil/sgd.h	406;"	d
MAX_IV_LEN	GmSSL/tools/sdfutil/sgd.h	404;"	d
MAX_RSA_EXPONENT_LEN	GmSSL/tools/sdfutil/sgd.h	399;"	d
MAX_RSA_MODULUS_LEN	GmSSL/tools/sdfutil/sgd.h	398;"	d
MD5_BLOCK_SIZE	GmSSL/include/gmssl/md5.h	66;"	d
MD5_CTX	GmSSL/include/gmssl/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon66
MD5_DIGEST_SIZE	GmSSL/include/gmssl/md5.h	65;"	d
MD5_IS_BIG_ENDIAN	GmSSL/include/gmssl/md5.h	63;"	d
MD5_STATE_WORDS	GmSSL/include/gmssl/md5.h	67;"	d
Maj	GmSSL/src/sha256.c	55;"	d	file:
Maj	GmSSL/src/sha512.c	129;"	d	file:
Nonce	GmSSL/tests/hash_drbgtest.c	60;"	d	file:
OID_CMS_CONUNT	GmSSL/src/cms.c	76;"	d	file:
OID_aes	GmSSL/include/gmssl/oid.h	/^	OID_aes,$/;"	e	enum:__anon57
OID_aes128	GmSSL/include/gmssl/oid.h	/^	OID_aes128, \/\/ 没有OID$/;"	e	enum:__anon57
OID_aes128_cbc	GmSSL/include/gmssl/oid.h	/^	OID_aes128_cbc,$/;"	e	enum:__anon57
OID_aes192_cbc	GmSSL/include/gmssl/oid.h	/^	OID_aes192_cbc,$/;"	e	enum:__anon57
OID_aes256_cbc	GmSSL/include/gmssl/oid.h	/^	OID_aes256_cbc,$/;"	e	enum:__anon57
OID_any_policy	GmSSL/include/gmssl/oid.h	/^	OID_any_policy,$/;"	e	enum:__anon57
OID_at_common_name	GmSSL/include/gmssl/oid.h	/^	OID_at_common_name,$/;"	e	enum:__anon57
OID_at_country_name	GmSSL/include/gmssl/oid.h	/^	OID_at_country_name,$/;"	e	enum:__anon57
OID_at_dn_qualifier	GmSSL/include/gmssl/oid.h	/^	OID_at_dn_qualifier,$/;"	e	enum:__anon57
OID_at_generation_qualifier	GmSSL/include/gmssl/oid.h	/^	OID_at_generation_qualifier,$/;"	e	enum:__anon57
OID_at_given_name	GmSSL/include/gmssl/oid.h	/^	OID_at_given_name,$/;"	e	enum:__anon57
OID_at_initials	GmSSL/include/gmssl/oid.h	/^	OID_at_initials,$/;"	e	enum:__anon57
OID_at_locality_name	GmSSL/include/gmssl/oid.h	/^	OID_at_locality_name,$/;"	e	enum:__anon57
OID_at_name	GmSSL/include/gmssl/oid.h	/^	OID_at_name,$/;"	e	enum:__anon57
OID_at_organization_name	GmSSL/include/gmssl/oid.h	/^	OID_at_organization_name,$/;"	e	enum:__anon57
OID_at_organizational_unit_name	GmSSL/include/gmssl/oid.h	/^	OID_at_organizational_unit_name,$/;"	e	enum:__anon57
OID_at_pseudonym	GmSSL/include/gmssl/oid.h	/^	OID_at_pseudonym,$/;"	e	enum:__anon57
OID_at_serial_number	GmSSL/include/gmssl/oid.h	/^	OID_at_serial_number,$/;"	e	enum:__anon57
OID_at_state_or_province_name	GmSSL/include/gmssl/oid.h	/^	OID_at_state_or_province_name,$/;"	e	enum:__anon57
OID_at_surname	GmSSL/include/gmssl/oid.h	/^	OID_at_surname,$/;"	e	enum:__anon57
OID_at_title	GmSSL/include/gmssl/oid.h	/^	OID_at_title,$/;"	e	enum:__anon57
OID_ce_authority_key_identifier	GmSSL/include/gmssl/oid.h	/^	OID_ce_authority_key_identifier,$/;"	e	enum:__anon57
OID_ce_basic_constraints	GmSSL/include/gmssl/oid.h	/^	OID_ce_basic_constraints,$/;"	e	enum:__anon57
OID_ce_certificate_issuer	GmSSL/include/gmssl/oid.h	/^	OID_ce_certificate_issuer,$/;"	e	enum:__anon57
OID_ce_certificate_policies	GmSSL/include/gmssl/oid.h	/^	OID_ce_certificate_policies,$/;"	e	enum:__anon57
OID_ce_crl_distribution_points	GmSSL/include/gmssl/oid.h	/^	OID_ce_crl_distribution_points,$/;"	e	enum:__anon57
OID_ce_crl_number	GmSSL/include/gmssl/oid.h	/^	OID_ce_crl_number,$/;"	e	enum:__anon57
OID_ce_crl_reasons	GmSSL/include/gmssl/oid.h	/^	OID_ce_crl_reasons,$/;"	e	enum:__anon57
OID_ce_delta_crl_indicator	GmSSL/include/gmssl/oid.h	/^	OID_ce_delta_crl_indicator,$/;"	e	enum:__anon57
OID_ce_ext_key_usage	GmSSL/include/gmssl/oid.h	/^	OID_ce_ext_key_usage,$/;"	e	enum:__anon57
OID_ce_freshest_crl	GmSSL/include/gmssl/oid.h	/^	OID_ce_freshest_crl,$/;"	e	enum:__anon57
OID_ce_inhibit_any_policy	GmSSL/include/gmssl/oid.h	/^	OID_ce_inhibit_any_policy,$/;"	e	enum:__anon57
OID_ce_invalidity_date	GmSSL/include/gmssl/oid.h	/^	OID_ce_invalidity_date,$/;"	e	enum:__anon57
OID_ce_issuer_alt_name	GmSSL/include/gmssl/oid.h	/^	OID_ce_issuer_alt_name,$/;"	e	enum:__anon57
OID_ce_issuing_distribution_point	GmSSL/include/gmssl/oid.h	/^	OID_ce_issuing_distribution_point,$/;"	e	enum:__anon57
OID_ce_key_usage	GmSSL/include/gmssl/oid.h	/^	OID_ce_key_usage,$/;"	e	enum:__anon57
OID_ce_name_constraints	GmSSL/include/gmssl/oid.h	/^	OID_ce_name_constraints,$/;"	e	enum:__anon57
OID_ce_policy_constraints	GmSSL/include/gmssl/oid.h	/^	OID_ce_policy_constraints,$/;"	e	enum:__anon57
OID_ce_policy_mappings	GmSSL/include/gmssl/oid.h	/^	OID_ce_policy_mappings,$/;"	e	enum:__anon57
OID_ce_subject_alt_name	GmSSL/include/gmssl/oid.h	/^	OID_ce_subject_alt_name,$/;"	e	enum:__anon57
OID_ce_subject_directory_attributes	GmSSL/include/gmssl/oid.h	/^	OID_ce_subject_directory_attributes,$/;"	e	enum:__anon57
OID_ce_subject_key_identifier	GmSSL/include/gmssl/oid.h	/^	OID_ce_subject_key_identifier,$/;"	e	enum:__anon57
OID_cert_authority_info_access	GmSSL/include/gmssl/oid.h	/^	OID_cert_authority_info_access,$/;"	e	enum:__anon57
OID_cms_data	GmSSL/include/gmssl/oid.h	/^	OID_cms_data,$/;"	e	enum:__anon57
OID_cms_encrypted_data	GmSSL/include/gmssl/oid.h	/^	OID_cms_encrypted_data,$/;"	e	enum:__anon57
OID_cms_enveloped_data	GmSSL/include/gmssl/oid.h	/^	OID_cms_enveloped_data,$/;"	e	enum:__anon57
OID_cms_key_agreement_info	GmSSL/include/gmssl/oid.h	/^	OID_cms_key_agreement_info,$/;"	e	enum:__anon57
OID_cms_signed_and_enveloped_data	GmSSL/include/gmssl/oid.h	/^	OID_cms_signed_and_enveloped_data,$/;"	e	enum:__anon57
OID_cms_signed_data	GmSSL/include/gmssl/oid.h	/^	OID_cms_signed_data,$/;"	e	enum:__anon57
OID_ct_precertificate_scts	GmSSL/include/gmssl/oid.h	/^	OID_ct_precertificate_scts,$/;"	e	enum:__anon57
OID_domain_component	GmSSL/include/gmssl/oid.h	/^	OID_domain_component,$/;"	e	enum:__anon57
OID_ec_public_key	GmSSL/include/gmssl/oid.h	/^	OID_ec_public_key, \/\/ X9.62 ecPublicKey$/;"	e	enum:__anon57
OID_ecdsa_with_sha1	GmSSL/include/gmssl/oid.h	/^	OID_ecdsa_with_sha1,$/;"	e	enum:__anon57
OID_ecdsa_with_sha224	GmSSL/include/gmssl/oid.h	/^	OID_ecdsa_with_sha224,$/;"	e	enum:__anon57
OID_ecdsa_with_sha256	GmSSL/include/gmssl/oid.h	/^	OID_ecdsa_with_sha256,$/;"	e	enum:__anon57
OID_ecdsa_with_sha384	GmSSL/include/gmssl/oid.h	/^	OID_ecdsa_with_sha384,$/;"	e	enum:__anon57
OID_ecdsa_with_sha512	GmSSL/include/gmssl/oid.h	/^	OID_ecdsa_with_sha512,$/;"	e	enum:__anon57
OID_hmac_sha1	GmSSL/include/gmssl/oid.h	/^	OID_hmac_sha1,$/;"	e	enum:__anon57
OID_hmac_sha224	GmSSL/include/gmssl/oid.h	/^	OID_hmac_sha224,$/;"	e	enum:__anon57
OID_hmac_sha256	GmSSL/include/gmssl/oid.h	/^	OID_hmac_sha256,$/;"	e	enum:__anon57
OID_hmac_sha384	GmSSL/include/gmssl/oid.h	/^	OID_hmac_sha384,$/;"	e	enum:__anon57
OID_hmac_sha512	GmSSL/include/gmssl/oid.h	/^	OID_hmac_sha512,$/;"	e	enum:__anon57
OID_hmac_sha512_224	GmSSL/include/gmssl/oid.h	/^	OID_hmac_sha512_224,$/;"	e	enum:__anon57
OID_hmac_sha512_256	GmSSL/include/gmssl/oid.h	/^	OID_hmac_sha512_256,$/;"	e	enum:__anon57
OID_hmac_sm3	GmSSL/include/gmssl/oid.h	/^	OID_hmac_sm3,$/;"	e	enum:__anon57
OID_kp_client_auth	GmSSL/include/gmssl/oid.h	/^	OID_kp_client_auth,$/;"	e	enum:__anon57
OID_kp_code_signing	GmSSL/include/gmssl/oid.h	/^	OID_kp_code_signing,$/;"	e	enum:__anon57
OID_kp_email_protection	GmSSL/include/gmssl/oid.h	/^	OID_kp_email_protection,$/;"	e	enum:__anon57
OID_kp_ocsp_signing	GmSSL/include/gmssl/oid.h	/^	OID_kp_ocsp_signing,$/;"	e	enum:__anon57
OID_kp_server_auth	GmSSL/include/gmssl/oid.h	/^	OID_kp_server_auth,$/;"	e	enum:__anon57
OID_kp_time_stamping	GmSSL/include/gmssl/oid.h	/^	OID_kp_time_stamping,$/;"	e	enum:__anon57
OID_md5	GmSSL/include/gmssl/oid.h	/^	OID_md5,$/;"	e	enum:__anon57
OID_netscape_cert_comment	GmSSL/include/gmssl/oid.h	/^	OID_netscape_cert_comment,$/;"	e	enum:__anon57
OID_pbes2	GmSSL/include/gmssl/oid.h	/^	OID_pbes2,  \/\/ {pkcs-5 13}$/;"	e	enum:__anon57
OID_pbkdf2	GmSSL/include/gmssl/oid.h	/^	OID_pbkdf2, \/\/ {pkcs-5 12}$/;"	e	enum:__anon57
OID_pe_authority_info_access	GmSSL/include/gmssl/oid.h	/^	OID_pe_authority_info_access,$/;"	e	enum:__anon57
OID_prime192v1	GmSSL/include/gmssl/oid.h	/^	OID_prime192v1,$/;"	e	enum:__anon57
OID_prime256v1	GmSSL/include/gmssl/oid.h	/^	OID_prime256v1,$/;"	e	enum:__anon57
OID_qt_cps	GmSSL/include/gmssl/oid.h	/^	OID_qt_cps,$/;"	e	enum:__anon57
OID_qt_unotice	GmSSL/include/gmssl/oid.h	/^	OID_qt_unotice,$/;"	e	enum:__anon57
OID_rsa_encryption	GmSSL/include/gmssl/oid.h	/^	OID_rsa_encryption,$/;"	e	enum:__anon57
OID_rsaes_oaep	GmSSL/include/gmssl/oid.h	/^	OID_rsaes_oaep,$/;"	e	enum:__anon57
OID_rsasign_with_sha1	GmSSL/include/gmssl/oid.h	/^	OID_rsasign_with_sha1,$/;"	e	enum:__anon57
OID_rsasign_with_sha224	GmSSL/include/gmssl/oid.h	/^	OID_rsasign_with_sha224,$/;"	e	enum:__anon57
OID_rsasign_with_sha256	GmSSL/include/gmssl/oid.h	/^	OID_rsasign_with_sha256,$/;"	e	enum:__anon57
OID_rsasign_with_sha384	GmSSL/include/gmssl/oid.h	/^	OID_rsasign_with_sha384,$/;"	e	enum:__anon57
OID_rsasign_with_sha512	GmSSL/include/gmssl/oid.h	/^	OID_rsasign_with_sha512,$/;"	e	enum:__anon57
OID_rsasign_with_sm3	GmSSL/include/gmssl/oid.h	/^	OID_rsasign_with_sm3,$/;"	e	enum:__anon57
OID_secp192k1	GmSSL/include/gmssl/oid.h	/^	OID_secp192k1,$/;"	e	enum:__anon57
OID_secp224k1	GmSSL/include/gmssl/oid.h	/^	OID_secp224k1,$/;"	e	enum:__anon57
OID_secp224r1	GmSSL/include/gmssl/oid.h	/^	OID_secp224r1,$/;"	e	enum:__anon57
OID_secp256k1	GmSSL/include/gmssl/oid.h	/^	OID_secp256k1,$/;"	e	enum:__anon57
OID_secp384r1	GmSSL/include/gmssl/oid.h	/^	OID_secp384r1,$/;"	e	enum:__anon57
OID_secp521r1	GmSSL/include/gmssl/oid.h	/^	OID_secp521r1,$/;"	e	enum:__anon57
OID_sha1	GmSSL/include/gmssl/oid.h	/^	OID_sha1,$/;"	e	enum:__anon57
OID_sha224	GmSSL/include/gmssl/oid.h	/^	OID_sha224,$/;"	e	enum:__anon57
OID_sha256	GmSSL/include/gmssl/oid.h	/^	OID_sha256,$/;"	e	enum:__anon57
OID_sha384	GmSSL/include/gmssl/oid.h	/^	OID_sha384,$/;"	e	enum:__anon57
OID_sha512	GmSSL/include/gmssl/oid.h	/^	OID_sha512,$/;"	e	enum:__anon57
OID_sha512_224	GmSSL/include/gmssl/oid.h	/^	OID_sha512_224,$/;"	e	enum:__anon57
OID_sha512_256	GmSSL/include/gmssl/oid.h	/^	OID_sha512_256,$/;"	e	enum:__anon57
OID_sm1	GmSSL/include/gmssl/oid.h	/^	OID_sm1,$/;"	e	enum:__anon57
OID_sm2	GmSSL/include/gmssl/oid.h	/^	OID_sm2,$/;"	e	enum:__anon57
OID_sm2encrypt	GmSSL/include/gmssl/oid.h	/^	OID_sm2encrypt,$/;"	e	enum:__anon57
OID_sm2keyagreement	GmSSL/include/gmssl/oid.h	/^	OID_sm2keyagreement,$/;"	e	enum:__anon57
OID_sm2sign	GmSSL/include/gmssl/oid.h	/^	OID_sm2sign,$/;"	e	enum:__anon57
OID_sm2sign_with_sm3	GmSSL/include/gmssl/oid.h	/^	OID_sm2sign_with_sm3,$/;"	e	enum:__anon57
OID_sm3	GmSSL/include/gmssl/oid.h	/^	OID_sm3,$/;"	e	enum:__anon57
OID_sm3_keyless	GmSSL/include/gmssl/oid.h	/^	OID_sm3_keyless,$/;"	e	enum:__anon57
OID_sm4	GmSSL/include/gmssl/oid.h	/^	OID_sm4,$/;"	e	enum:__anon57
OID_sm4_cbc	GmSSL/include/gmssl/oid.h	/^	OID_sm4_cbc, \/\/ 1 2 156 10197 1 104 2$/;"	e	enum:__anon57
OID_sm4_ecb	GmSSL/include/gmssl/oid.h	/^	OID_sm4_ecb, \/\/ 1 2 156 10197 1 104 1$/;"	e	enum:__anon57
OID_sm9	GmSSL/include/gmssl/oid.h	/^	OID_sm9,$/;"	e	enum:__anon57
OID_sm9encrypt	GmSSL/include/gmssl/oid.h	/^	OID_sm9encrypt,$/;"	e	enum:__anon57
OID_sm9keyagreement	GmSSL/include/gmssl/oid.h	/^	OID_sm9keyagreement,$/;"	e	enum:__anon57
OID_sm9sign	GmSSL/include/gmssl/oid.h	/^	OID_sm9sign,$/;"	e	enum:__anon57
OID_ssf33	GmSSL/include/gmssl/oid.h	/^	OID_ssf33,$/;"	e	enum:__anon57
OID_undef	GmSSL/include/gmssl/oid.h	/^	OID_undef = 0,$/;"	e	enum:__anon57
OID_zuc	GmSSL/include/gmssl/oid.h	/^	OID_zuc,$/;"	e	enum:__anon57
OPAD	GmSSL/src/hmac.c	55;"	d	file:
OPAD	GmSSL/src/sm3_hmac.c	73;"	d	file:
OPENSSL_hexchar2int	GmSSL/src/hex.c	/^int OPENSSL_hexchar2int(unsigned char c)$/;"	f	signature:(unsigned char c)
OPENSSL_hexstr2buf	GmSSL/src/hex.c	/^unsigned char *OPENSSL_hexstr2buf(const char *str, size_t *len)$/;"	f	signature:(const char *str, size_t *len)
OP_ACCESSKEY	GmSSL/tools/sdfutil/sdfutil.c	63;"	d	file:
OP_DELOBJ	GmSSL/tools/sdfutil/sdfutil.c	66;"	d	file:
OP_EXPORTOBJ	GmSSL/tools/sdfutil/sdfutil.c	65;"	d	file:
OP_IMPORTOBJ	GmSSL/tools/sdfutil/sdfutil.c	64;"	d	file:
OP_NONE	GmSSL/tools/sdfutil/sdfutil.c	57;"	d	file:
OP_PRINTDEVINFO	GmSSL/tools/sdfutil/sdfutil.c	58;"	d	file:
OP_PRINTRSAENC	GmSSL/tools/sdfutil/sdfutil.c	62;"	d	file:
OP_PRINTRSASIGN	GmSSL/tools/sdfutil/sdfutil.c	61;"	d	file:
OP_PRINTSM2ENC	GmSSL/tools/sdfutil/sdfutil.c	60;"	d	file:
OP_PRINTSM2SIGN	GmSSL/tools/sdfutil/sdfutil.c	59;"	d	file:
OpenDevice	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_OpenDevice_FuncPtr OpenDevice;$/;"	m	struct:sdf_method_st	access:public
OpenSession	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_OpenSession_FuncPtr OpenSession;$/;"	m	struct:sdf_method_st	access:public
P	GmSSL/src/des.c	/^static unsigned char P[32] = {$/;"	v	file:
P	GmSSL/tests/aestest.c	/^	char *P;$/;"	m	struct:__anon11	file:	access:public
P0	GmSSL/src/sm3.c	64;"	d	file:
P1	GmSSL/src/sm3.c	65;"	d	file:
PBKDF2_DEFAULT_SALT_SIZE	GmSSL/include/gmssl/pbkdf2.h	67;"	d
PBKDF2_MAX_ITER	GmSSL/include/gmssl/pbkdf2.h	65;"	d
PBKDF2_MAX_SALT_SIZE	GmSSL/include/gmssl/pbkdf2.h	66;"	d
PBKDF2_MIN_ITER	GmSSL/include/gmssl/pbkdf2.h	64;"	d
PC1	GmSSL/src/des.c	/^static unsigned char PC1[56] = {$/;"	v	file:
PC2	GmSSL/src/des.c	/^static unsigned char PC2[48] = {$/;"	v	file:
PEnvelopedKeyBlob	GmSSL/tools/sdfutil/sdf.h	/^} EnvelopedKeyBlob, *PEnvelopedKeyBlob;$/;"	t	typeref:struct:SDF_ENVELOPEDKEYBLOB
PKCS8_private_key_info_version	GmSSL/include/gmssl/sm2.h	/^	PKCS8_private_key_info_version = 0,$/;"	e	enum:__anon47
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	421;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	427;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	430;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	433;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	436;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	442;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	445;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	448;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	451;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	454;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	457;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	460;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	463;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	466;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	469;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	475;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	478;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	481;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	484;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	487;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	490;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	493;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	497;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	500;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	503;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	506;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	509;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	512;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	517;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	520;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	524;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	406;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	418;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	421;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	427;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	433;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	436;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	439;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	442;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	448;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	451;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	454;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	460;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	463;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	466;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	469;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	472;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	475;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	478;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	482;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	485;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	488;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	491;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	494;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	497;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	502;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	505;"	d	file:
PLATFORM_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	509;"	d	file:
PR1	GmSSL/tests/hash_drbgtest.c	71;"	d	file:
PR2	GmSSL/tests/hash_drbgtest.c	72;"	d	file:
PUTU16	GmSSL/include/gmssl/endian.h	77;"	d
PUTU16_LE	GmSSL/include/gmssl/endian.h	103;"	d
PUTU32	GmSSL/include/gmssl/endian.h	81;"	d
PUTU32_LE	GmSSL/include/gmssl/endian.h	104;"	d
PUTU64	GmSSL/include/gmssl/endian.h	87;"	d
PUTU64_LE	GmSSL/include/gmssl/endian.h	105;"	d
PersonalizationString	GmSSL/tests/hash_drbgtest.c	61;"	d	file:
PubKey	GmSSL/tools/sdfutil/sdf.h	/^	ECCrefPublicKey PubKey;$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
QR	GmSSL/src/chacha20.c	81;"	d	file:
R	GmSSL/src/sm3.c	72;"	d	file:
R1	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R1;$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
R1	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R1;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
R1	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R1;$/;"	m	struct:__anon34	access:public
R2	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R2;$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
R2	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R2;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
R2	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R2;$/;"	m	struct:__anon34	access:public
R8	GmSSL/src/sm3.c	83;"	d	file:
RC4_MIN_KEY_BITS	GmSSL/include/gmssl/rc4.h	63;"	d
RC4_STATE	GmSSL/include/gmssl/rc4.h	/^} RC4_STATE;$/;"	t	typeref:struct:__anon65
RC4_STATE_NUM_WORDS	GmSSL/include/gmssl/rc4.h	64;"	d
RM	GmSSL/build/Makefile	/^RM = \/usr\/share\/cmake-3.21\/bin\/cmake -E rm -f$/;"	m
ROL32	GmSSL/include/gmssl/endian.h	109;"	d
ROL64	GmSSL/include/gmssl/endian.h	110;"	d
ROR32	GmSSL/include/gmssl/endian.h	112;"	d
ROR64	GmSSL/include/gmssl/endian.h	113;"	d
ROT31	GmSSL/src/zuc.c	101;"	d	file:
ROT32	GmSSL/src/zuc.c	102;"	d	file:
ROTL	GmSSL/src/sm3.c	63;"	d	file:
ROUND	GmSSL/sm4_enc.c	81;"	d	file:
ROUND	GmSSL/sm4_setkey.c	113;"	d	file:
ROUND	GmSSL/sm4_setkey.c	115;"	d	file:
ROUND	GmSSL/sm4_setkey.c	96;"	d	file:
ROUND	GmSSL/sm4_setkey.c	98;"	d	file:
ROUND	GmSSL/src/sm4_enc.c	81;"	d	file:
ROUND	GmSSL/src/sm4_setkey.c	113;"	d	file:
ROUND	GmSSL/src/sm4_setkey.c	115;"	d	file:
ROUND	GmSSL/src/sm4_setkey.c	96;"	d	file:
ROUND	GmSSL/src/sm4_setkey.c	98;"	d	file:
ROUNDS	GmSSL/sm4_lcl.h	65;"	d
ROUNDS	GmSSL/src/sm4_lcl.h	65;"	d
ROUND_BS0	sm4_bs.c	/^void ROUND_BS0(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])
ROUND_BS1	sm4_bs.c	/^void ROUND_BS1(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])
ROUND_BS2	sm4_bs.c	/^void ROUND_BS2(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])
ROUND_BS3	sm4_bs.c	/^void ROUND_BS3(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])
ROUND_BS4	sm4_bs.c	/^void ROUND_BS4(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])	$/;"	f	signature:(unsigned long long Xh[5][4],unsigned long long Xl[5][4],unsigned long long RKH[4],unsigned long long RKL[4])
ROUND_SBOX	GmSSL/sm4_enc.c	62;"	d	file:
ROUND_SBOX	GmSSL/src/sm4_enc.c	62;"	d	file:
ROUND_TBOX	GmSSL/sm4_enc.c	67;"	d	file:
ROUND_TBOX	GmSSL/src/sm4_enc.c	67;"	d	file:
RSArefPrivateKey	GmSSL/tools/sdfutil/sdf.h	/^} RSArefPrivateKey;$/;"	t	typeref:struct:RSArefPrivateKey_st
RSArefPrivateKey_st	GmSSL/tools/sdfutil/sdf.h	/^typedef struct RSArefPrivateKey_st {$/;"	s
RSArefPrivateKey_st::bits	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int bits;$/;"	m	struct:RSArefPrivateKey_st	access:public
RSArefPrivateKey_st::coef	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char coef[RSAref_MAX_PLEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
RSArefPrivateKey_st::d	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char d[RSAref_MAX_LEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
RSArefPrivateKey_st::e	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char e[RSAref_MAX_LEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
RSArefPrivateKey_st::m	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char m[RSAref_MAX_LEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
RSArefPrivateKey_st::pexp	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char pexp[2][RSAref_MAX_PLEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
RSArefPrivateKey_st::prime	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char prime[2][RSAref_MAX_PLEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
RSArefPublicKey	GmSSL/tools/sdfutil/sdf.h	/^} RSArefPublicKey;$/;"	t	typeref:struct:RSArefPublicKey_st
RSArefPublicKey_st	GmSSL/tools/sdfutil/sdf.h	/^typedef struct RSArefPublicKey_st {$/;"	s
RSArefPublicKey_st::bits	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int bits;$/;"	m	struct:RSArefPublicKey_st	access:public
RSArefPublicKey_st::e	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char e[RSAref_MAX_LEN];$/;"	m	struct:RSArefPublicKey_st	access:public
RSArefPublicKey_st::m	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char m[RSAref_MAX_LEN];$/;"	m	struct:RSArefPublicKey_st	access:public
RSAref_MAX_BITS	GmSSL/tools/sdfutil/sgd.h	417;"	d
RSAref_MAX_LEN	GmSSL/tools/sdfutil/sgd.h	418;"	d
RSAref_MAX_PBITS	GmSSL/tools/sdfutil/sgd.h	419;"	d
RSAref_MAX_PLEN	GmSSL/tools/sdfutil/sgd.h	420;"	d
Rcon	GmSSL/src/aes.c	/^static const uint8_t Rcon[11] = {$/;"	v	file:
ReadObject	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ReadObject_FuncPtr ReadObject;$/;"	m	struct:sdf_method_st	access:public
ReleasePrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ReleasePrivateKeyAccessRight_FuncPtr ReleasePrivateKeyAccessRight;$/;"	m	struct:sdf_method_st	access:public
S	GmSSL/src/aes.c	/^static const uint8_t S[256] = {$/;"	v	file:
S	GmSSL/src/des.c	/^static unsigned char S[16] = {$/;"	v	file:
S	GmSSL/src/md5.c	/^static const int S[] = {$/;"	v	file:
S	oSM4.c	/^uint32_t S(uint8_t a[])$/;"	f	signature:(uint8_t a[])
S0	GmSSL/src/zuc.c	/^static const uint8_t S0[256] = {$/;"	v	file:
S1	GmSSL/src/des.c	/^static unsigned char S1[64] = {$/;"	v	file:
S1	GmSSL/src/zuc.c	/^static const uint8_t S1[256] = {$/;"	v	file:
S2	GmSSL/src/des.c	/^static unsigned char S2[64] = {$/;"	v	file:
S3	GmSSL/src/des.c	/^static unsigned char S3[64] = {$/;"	v	file:
S32	GmSSL/sm4_lcl.h	59;"	d
S32	GmSSL/src/sm4_lcl.h	59;"	d
S4	GmSSL/src/des.c	/^static unsigned char S4[64] = {$/;"	v	file:
S5	GmSSL/src/des.c	/^static unsigned char S5[64] = {$/;"	v	file:
S6	GmSSL/src/des.c	/^static unsigned char S6[64] = {$/;"	v	file:
S7	GmSSL/src/des.c	/^static unsigned char S7[64] = {$/;"	v	file:
S8	GmSSL/src/des.c	/^static unsigned char S8[64] = {$/;"	v	file:
SANSEC_3DES	GmSSL/tools/sdfutil/sdf_sansec.h	93;"	d
SANSEC_3DES_CBC	GmSSL/tools/sdfutil/sdf_sansec.h	95;"	d
SANSEC_3DES_CFB	GmSSL/tools/sdfutil/sdf_sansec.h	96;"	d
SANSEC_3DES_ECB	GmSSL/tools/sdfutil/sdf_sansec.h	94;"	d
SANSEC_3DES_MAC	GmSSL/tools/sdfutil/sdf_sansec.h	98;"	d
SANSEC_3DES_OFB	GmSSL/tools/sdfutil/sdf_sansec.h	97;"	d
SANSEC_AES	GmSSL/tools/sdfutil/sdf_sansec.h	79;"	d
SANSEC_AES_CBC	GmSSL/tools/sdfutil/sdf_sansec.h	81;"	d
SANSEC_AES_CFB	GmSSL/tools/sdfutil/sdf_sansec.h	82;"	d
SANSEC_AES_ECB	GmSSL/tools/sdfutil/sdf_sansec.h	80;"	d
SANSEC_AES_MAC	GmSSL/tools/sdfutil/sdf_sansec.h	84;"	d
SANSEC_AES_OFB	GmSSL/tools/sdfutil/sdf_sansec.h	83;"	d
SANSEC_BASE	GmSSL/tools/sdfutil/sdf_sansec.h	116;"	d
SANSEC_CARD_ALGOR_NOT_SUPPORTED	GmSSL/tools/sdfutil/sdf_sansec.h	144;"	d
SANSEC_CARD_ALG_MODE_NOT_SUPPORTED	GmSSL/tools/sdfutil/sdf_sansec.h	145;"	d
SANSEC_CARD_BASE	GmSSL/tools/sdfutil/sdf_sansec.h	135;"	d
SANSEC_CARD_BUFFER_TOO_SMALL	GmSSL/tools/sdfutil/sdf_sansec.h	157;"	d
SANSEC_CARD_COMMMUCATION_FAILED	GmSSL/tools/sdfutil/sdf_sansec.h	138;"	d
SANSEC_CARD_CRYPTO_NOT_INITED	GmSSL/tools/sdfutil/sdf_sansec.h	160;"	d
SANSEC_CARD_DATA_PADDING_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	158;"	d
SANSEC_CARD_DATA_SIZE	GmSSL/tools/sdfutil/sdf_sansec.h	159;"	d
SANSEC_CARD_DEVICE_STATUS_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	163;"	d
SANSEC_CARD_DEVICE_STATUS_ERROR_05	GmSSL/tools/sdfutil/sdf_sansec.h	169;"	d
SANSEC_CARD_FILE_NOT_EXIST	GmSSL/tools/sdfutil/sdf_sansec.h	153;"	d
SANSEC_CARD_FILE_OFFSET_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	154;"	d
SANSEC_CARD_FILE_SIZE_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	152;"	d
SANSEC_CARD_HARDWARE_FAILURE	GmSSL/tools/sdfutil/sdf_sansec.h	139;"	d
SANSEC_CARD_KEY_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	156;"	d
SANSEC_CARD_KEY_NOT_EXIST	GmSSL/tools/sdfutil/sdf_sansec.h	143;"	d
SANSEC_CARD_KEY_TYPE_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	155;"	d
SANSEC_CARD_LOGIN_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	164;"	d
SANSEC_CARD_LOGIN_ERROR_05	GmSSL/tools/sdfutil/sdf_sansec.h	170;"	d
SANSEC_CARD_MANAGEMENT_DENYED	GmSSL/tools/sdfutil/sdf_sansec.h	161;"	d
SANSEC_CARD_MANAGEMENT_DENYED_05	GmSSL/tools/sdfutil/sdf_sansec.h	167;"	d
SANSEC_CARD_NOT_SUPPORTED	GmSSL/tools/sdfutil/sdf_sansec.h	137;"	d
SANSEC_CARD_OPEN_DEVICE_FAILED	GmSSL/tools/sdfutil/sdf_sansec.h	140;"	d
SANSEC_CARD_OPEN_SESSION_FAILED	GmSSL/tools/sdfutil/sdf_sansec.h	141;"	d
SANSEC_CARD_OPERATION_DENYED	GmSSL/tools/sdfutil/sdf_sansec.h	162;"	d
SANSEC_CARD_OPERATION_DENYED_05	GmSSL/tools/sdfutil/sdf_sansec.h	168;"	d
SANSEC_CARD_PARAMENT_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	166;"	d
SANSEC_CARD_PARAMENT_ERROR_05	GmSSL/tools/sdfutil/sdf_sansec.h	172;"	d
SANSEC_CARD_PRIVATE_KEY_ACCESS_DENYED	GmSSL/tools/sdfutil/sdf_sansec.h	142;"	d
SANSEC_CARD_PRIVATE_KEY_OPERATION_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	147;"	d
SANSEC_CARD_PUBLIC_KEY_OPERATION_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	146;"	d
SANSEC_CARD_READER_BASE	GmSSL/tools/sdfutil/sdf_sansec.h	173;"	d
SANSEC_CARD_READER_CARD_INSERT	GmSSL/tools/sdfutil/sdf_sansec.h	176;"	d
SANSEC_CARD_READER_CARD_INSERT_TYPE	GmSSL/tools/sdfutil/sdf_sansec.h	177;"	d
SANSEC_CARD_READER_NO_CARD	GmSSL/tools/sdfutil/sdf_sansec.h	175;"	d
SANSEC_CARD_READER_PIN_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	174;"	d
SANSEC_CARD_SIGN_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	148;"	d
SANSEC_CARD_STEP_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	151;"	d
SANSEC_CARD_SYMMETRIC_ALGOR_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	150;"	d
SANSEC_CARD_UNKNOW_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	136;"	d
SANSEC_CARD_USERID_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	165;"	d
SANSEC_CARD_USERID_ERROR_05	GmSSL/tools/sdfutil/sdf_sansec.h	171;"	d
SANSEC_CARD_VERIFY_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	149;"	d
SANSEC_CONFIG_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	134;"	d
SANSEC_CONNECT_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	126;"	d
SANSEC_DES	GmSSL/tools/sdfutil/sdf_sansec.h	86;"	d
SANSEC_DES_CBC	GmSSL/tools/sdfutil/sdf_sansec.h	88;"	d
SANSEC_DES_CFB	GmSSL/tools/sdfutil/sdf_sansec.h	89;"	d
SANSEC_DES_ECB	GmSSL/tools/sdfutil/sdf_sansec.h	87;"	d
SANSEC_DES_MAC	GmSSL/tools/sdfutil/sdf_sansec.h	91;"	d
SANSEC_DES_OFB	GmSSL/tools/sdfutil/sdf_sansec.h	90;"	d
SANSEC_ECCCipher	GmSSL/tools/sdfutil/sdf_sansec.h	/^} SANSEC_ECCCipher;$/;"	t	typeref:struct:__anon4
SANSEC_FILE_ALREADY_EXIST	GmSSL/tools/sdfutil/sdf_sansec.h	122;"	d
SANSEC_INVALID_AUTHENCODE	GmSSL/tools/sdfutil/sdf_sansec.h	118;"	d
SANSEC_INVALID_COMMAND	GmSSL/tools/sdfutil/sdf_sansec.h	120;"	d
SANSEC_INVALID_PARAMETERS	GmSSL/tools/sdfutil/sdf_sansec.h	121;"	d
SANSEC_INVALID_USER	GmSSL/tools/sdfutil/sdf_sansec.h	117;"	d
SANSEC_MD5	GmSSL/tools/sdfutil/sdf_sansec.h	106;"	d
SANSEC_NO_AVAILABLE_CSM	GmSSL/tools/sdfutil/sdf_sansec.h	133;"	d
SANSEC_NO_AVAILABLE_HSM	GmSSL/tools/sdfutil/sdf_sansec.h	132;"	d
SANSEC_PROTOCOL_VERSION_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	119;"	d
SANSEC_RSA	GmSSL/tools/sdfutil/sdf_sansec.h	108;"	d
SANSEC_RSA_ENC	GmSSL/tools/sdfutil/sdf_sansec.h	110;"	d
SANSEC_RSA_SIGN	GmSSL/tools/sdfutil/sdf_sansec.h	109;"	d
SANSEC_SEM_TIMEOUT	GmSSL/tools/sdfutil/sdf_sansec.h	131;"	d
SANSEC_SET_SOCKET_OPTION_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	127;"	d
SANSEC_SHA1	GmSSL/tools/sdfutil/sdf_sansec.h	101;"	d
SANSEC_SHA224	GmSSL/tools/sdfutil/sdf_sansec.h	105;"	d
SANSEC_SHA256	GmSSL/tools/sdfutil/sdf_sansec.h	102;"	d
SANSEC_SHA384	GmSSL/tools/sdfutil/sdf_sansec.h	104;"	d
SANSEC_SHA512	GmSSL/tools/sdfutil/sdf_sansec.h	103;"	d
SANSEC_SM1	GmSSL/tools/sdfutil/sdf_sansec.h	58;"	d
SANSEC_SM1_CBC	GmSSL/tools/sdfutil/sdf_sansec.h	60;"	d
SANSEC_SM1_CFB	GmSSL/tools/sdfutil/sdf_sansec.h	61;"	d
SANSEC_SM1_ECB	GmSSL/tools/sdfutil/sdf_sansec.h	59;"	d
SANSEC_SM1_MAC	GmSSL/tools/sdfutil/sdf_sansec.h	63;"	d
SANSEC_SM1_OFB	GmSSL/tools/sdfutil/sdf_sansec.h	62;"	d
SANSEC_SM2	GmSSL/tools/sdfutil/sdf_sansec.h	111;"	d
SANSEC_SM2_1	GmSSL/tools/sdfutil/sdf_sansec.h	112;"	d
SANSEC_SM2_2	GmSSL/tools/sdfutil/sdf_sansec.h	113;"	d
SANSEC_SM2_3	GmSSL/tools/sdfutil/sdf_sansec.h	114;"	d
SANSEC_SM3	GmSSL/tools/sdfutil/sdf_sansec.h	100;"	d
SANSEC_SM4	GmSSL/tools/sdfutil/sdf_sansec.h	65;"	d
SANSEC_SM4_CBC	GmSSL/tools/sdfutil/sdf_sansec.h	67;"	d
SANSEC_SM4_CFB	GmSSL/tools/sdfutil/sdf_sansec.h	68;"	d
SANSEC_SM4_ECB	GmSSL/tools/sdfutil/sdf_sansec.h	66;"	d
SANSEC_SM4_MAC	GmSSL/tools/sdfutil/sdf_sansec.h	70;"	d
SANSEC_SM4_OFB	GmSSL/tools/sdfutil/sdf_sansec.h	69;"	d
SANSEC_SOCKET_RECV_0	GmSSL/tools/sdfutil/sdf_sansec.h	130;"	d
SANSEC_SOCKET_RECV_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	129;"	d
SANSEC_SOCKET_SEND_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	128;"	d
SANSEC_SOCKET_TIMEOUT	GmSSL/tools/sdfutil/sdf_sansec.h	125;"	d
SANSEC_SSF33	GmSSL/tools/sdfutil/sdf_sansec.h	72;"	d
SANSEC_SSF33_CBC	GmSSL/tools/sdfutil/sdf_sansec.h	74;"	d
SANSEC_SSF33_CFB	GmSSL/tools/sdfutil/sdf_sansec.h	75;"	d
SANSEC_SSF33_ECB	GmSSL/tools/sdfutil/sdf_sansec.h	73;"	d
SANSEC_SSF33_MAC	GmSSL/tools/sdfutil/sdf_sansec.h	77;"	d
SANSEC_SSF33_OFB	GmSSL/tools/sdfutil/sdf_sansec.h	76;"	d
SANSEC_SYNC_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	123;"	d
SANSEC_SYNC_LOGIN_ERROR	GmSSL/tools/sdfutil/sdf_sansec.h	124;"	d
SDFUTIL_SDF_EXT_H	GmSSL/tools/sdfutil/sdf_ext.h	50;"	d
SDFUTIL_SDF_METH_H	GmSSL/tools/sdfutil/sdf_int.h	50;"	d
SDFUTIL_SDF_SANSEC_H	GmSSL/tools/sdfutil/sdf_sansec.h	50;"	d
SDFUTIL_SGD_H	GmSSL/tools/sdfutil/sgd.h	54;"	d
SDF_ALGOR_PAIR	GmSSL/tools/sdfutil/sdf_sansec.c	/^} SDF_ALGOR_PAIR;$/;"	t	typeref:struct:__anon3	file:
SDF_CalculateMAC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_CalculateMAC($/;"	p	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucData, unsigned int uiDataLength, unsigned char *pucMAC, unsigned int *puiMACLength)
SDF_CalculateMAC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_CalculateMAC($/;"	f	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucData, unsigned int uiDataLength, unsigned char *pucMAC, unsigned int *puiMACLength)
SDF_CalculateMAC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_CalculateMAC($/;"	f	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucData, unsigned int uiDataLength, unsigned char *pucMAC, unsigned int *puiMACLength)
SDF_CalculateMAC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_CalculateMAC_FuncPtr)($/;"	t
SDF_CloseDevice	GmSSL/tools/sdfutil/sdf.h	/^int SDF_CloseDevice($/;"	p	signature:( void *hDeviceHandle)
SDF_CloseDevice	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_CloseDevice($/;"	f	signature:( void *hDeviceHandle)
SDF_CloseDevice	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_CloseDevice($/;"	f	signature:( void *hDeviceHandle)
SDF_CloseDevice_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_CloseDevice_FuncPtr)($/;"	t
SDF_CloseSession	GmSSL/tools/sdfutil/sdf.h	/^int SDF_CloseSession($/;"	p	signature:( void *hSessionHandle)
SDF_CloseSession	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_CloseSession($/;"	f	signature:( void *hSessionHandle)
SDF_CloseSession	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_CloseSession($/;"	f	signature:( void *hSessionHandle)
SDF_CloseSession_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_CloseSession_FuncPtr)($/;"	t
SDF_CreateFile	GmSSL/tools/sdfutil/sdf.h	/^int SDF_CreateFile($/;"	p	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiFileSize)
SDF_CreateFile	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_CreateFile($/;"	f	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiFileSize)
SDF_CreateFile	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_CreateFile($/;"	f	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiFileSize)
SDF_CreateObject_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_CreateObject_FuncPtr)($/;"	t
SDF_DEVICE	GmSSL/include/gmssl/sdf.h	/^} SDF_DEVICE;$/;"	t	typeref:struct:__anon67
SDF_DEV_BATCH_NUM	GmSSL/tools/sdfutil/sdf_dummy.c	238;"	d	file:
SDF_DEV_DATE	GmSSL/tools/sdfutil/sdf_dummy.c	237;"	d	file:
SDF_DEV_SERIAL	GmSSL/tools/sdfutil/sdf_dummy.c	240;"	d	file:
SDF_DEV_SERIAL_NUM	GmSSL/tools/sdfutil/sdf_dummy.c	239;"	d	file:
SDF_Decrypt	GmSSL/tools/sdfutil/sdf.h	/^int SDF_Decrypt($/;"	p	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucEncData, unsigned int uiEncDataLength, unsigned char *pucData, unsigned int *puiDataLength)
SDF_Decrypt	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_Decrypt($/;"	f	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucEncData, unsigned int uiEncDataLength, unsigned char *pucData, unsigned int *puiDataLength)
SDF_Decrypt	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_Decrypt($/;"	f	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucEncData, unsigned int uiEncDataLength, unsigned char *pucData, unsigned int *puiDataLength)
SDF_Decrypt_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_Decrypt_FuncPtr)($/;"	t
SDF_DeleteFile	GmSSL/tools/sdfutil/sdf.h	/^int SDF_DeleteFile($/;"	p	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen)
SDF_DeleteFile	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_DeleteFile($/;"	f	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen)
SDF_DeleteFile	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_DeleteFile($/;"	f	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen)
SDF_DeleteObject_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_DeleteObject_FuncPtr)($/;"	t
SDF_DestroyKey	GmSSL/tools/sdfutil/sdf.h	/^int SDF_DestroyKey($/;"	p	signature:( void *hSessionHandle, void *hKeyHandle)
SDF_DestroyKey	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_DestroyKey($/;"	f	signature:( void *hSessionHandle, void *hKeyHandle)
SDF_DestroyKey	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_DestroyKey($/;"	f	signature:( void *hSessionHandle, void *hKeyHandle)
SDF_DestroyKey_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_DestroyKey_FuncPtr)($/;"	t
SDF_ENVELOPEDKEYBLOB	GmSSL/tools/sdfutil/sdf.h	/^typedef struct SDF_ENVELOPEDKEYBLOB {$/;"	s
SDF_ENVELOPEDKEYBLOB::ECCCipehrBlob	GmSSL/tools/sdfutil/sdf.h	/^	ECCCipher ECCCipehrBlob;$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
SDF_ENVELOPEDKEYBLOB::PubKey	GmSSL/tools/sdfutil/sdf.h	/^	ECCrefPublicKey PubKey;$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
SDF_ENVELOPEDKEYBLOB::Version	GmSSL/tools/sdfutil/sdf.h	/^	unsigned long Version;$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
SDF_ENVELOPEDKEYBLOB::cbEncryptedPrivKey	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char cbEncryptedPrivKey[64];$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
SDF_ENVELOPEDKEYBLOB::ulSymmAlgID	GmSSL/tools/sdfutil/sdf.h	/^	unsigned long ulSymmAlgID;$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
SDF_Encrypt	GmSSL/tools/sdfutil/sdf.h	/^int SDF_Encrypt($/;"	p	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucData, unsigned int uiDataLength, unsigned char *pucEncData, unsigned int *puiEncDataLength)
SDF_Encrypt	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_Encrypt($/;"	f	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucData, unsigned int uiDataLength, unsigned char *pucEncData, unsigned int *puiEncDataLength)
SDF_Encrypt	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_Encrypt($/;"	f	signature:( void *hSessionHandle, void *hKeyHandle, unsigned int uiAlgID, unsigned char *pucIV, unsigned char *pucData, unsigned int uiDataLength, unsigned char *pucEncData, unsigned int *puiEncDataLength)
SDF_Encrypt_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_Encrypt_FuncPtr)($/;"	t
SDF_ExchangeDigitEnvelopeBaseOnECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExchangeDigitEnvelopeBaseOnECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, ECCCipher *pucEncDataIn, ECCCipher *pucEncDataOut)
SDF_ExchangeDigitEnvelopeBaseOnECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExchangeDigitEnvelopeBaseOnECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, ECCCipher *pucEncDataIn, ECCCipher *pucEncDataOut)
SDF_ExchangeDigitEnvelopeBaseOnECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExchangeDigitEnvelopeBaseOnECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, ECCCipher *pucEncDataIn, ECCCipher *pucEncDataOut)
SDF_ExchangeDigitEnvelopeBaseOnECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExchangeDigitEnvelopeBaseOnECC_FuncPtr)($/;"	t
SDF_ExchangeDigitEnvelopeBaseOnRSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExchangeDigitEnvelopeBaseOnRSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey, unsigned char *pucDEInput, unsigned int uiDELength, unsigned char *pucDEOutput, unsigned int *puiDELength)
SDF_ExchangeDigitEnvelopeBaseOnRSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExchangeDigitEnvelopeBaseOnRSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey, unsigned char *pucDEInput, unsigned int uiDELength, unsigned char *pucDEOutput, unsigned int *puiDELength)
SDF_ExchangeDigitEnvelopeBaseOnRSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExchangeDigitEnvelopeBaseOnRSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey, unsigned char *pucDEInput, unsigned int uiDELength, unsigned char *pucDEOutput, unsigned int *puiDELength)
SDF_ExchangeDigitEnvelopeBaseOnRSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExchangeDigitEnvelopeBaseOnRSA_FuncPtr)($/;"	t
SDF_ExportEncPublicKey_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExportEncPublicKey_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, ECCrefPublicKey *pucPublicKey)
SDF_ExportEncPublicKey_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExportEncPublicKey_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, ECCrefPublicKey *pucPublicKey)
SDF_ExportEncPublicKey_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExportEncPublicKey_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, ECCrefPublicKey *pucPublicKey)
SDF_ExportEncPublicKey_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExportEncPublicKey_ECC_FuncPtr)($/;"	t
SDF_ExportEncPublicKey_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExportEncPublicKey_RSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey)
SDF_ExportEncPublicKey_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExportEncPublicKey_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey)
SDF_ExportEncPublicKey_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExportEncPublicKey_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey)
SDF_ExportEncPublicKey_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExportEncPublicKey_RSA_FuncPtr)($/;"	t
SDF_ExportSignPublicKey_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExportSignPublicKey_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, ECCrefPublicKey *pucPublicKey)
SDF_ExportSignPublicKey_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExportSignPublicKey_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, ECCrefPublicKey *pucPublicKey)
SDF_ExportSignPublicKey_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExportSignPublicKey_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, ECCrefPublicKey *pucPublicKey)
SDF_ExportSignPublicKey_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExportSignPublicKey_ECC_FuncPtr)($/;"	t
SDF_ExportSignPublicKey_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExportSignPublicKey_RSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey)
SDF_ExportSignPublicKey_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExportSignPublicKey_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey)
SDF_ExportSignPublicKey_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExportSignPublicKey_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, RSArefPublicKey *pucPublicKey)
SDF_ExportSignPublicKey_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExportSignPublicKey_RSA_FuncPtr)($/;"	t
SDF_ExternalDecrypt_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExternalDecrypt_ECC_FuncPtr)($/;"	t
SDF_ExternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExternalEncrypt_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucData, unsigned int uiDataLength, ECCCipher *pucEncData)
SDF_ExternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExternalEncrypt_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucData, unsigned int uiDataLength, ECCCipher *pucEncData)
SDF_ExternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExternalEncrypt_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucData, unsigned int uiDataLength, ECCCipher *pucEncData)
SDF_ExternalEncrypt_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExternalEncrypt_ECC_FuncPtr)($/;"	t
SDF_ExternalPrivateKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExternalPrivateKeyOperation_RSA($/;"	f	signature:( void *hSessionHandle, RSArefPrivateKey *pucPrivateKey, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_ExternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExternalPublicKeyOperation_RSA($/;"	p	signature:( void *hSessionHandle, RSArefPublicKey *pucPublicKey, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_ExternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExternalPublicKeyOperation_RSA($/;"	f	signature:( void *hSessionHandle, RSArefPublicKey *pucPublicKey, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_ExternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExternalPublicKeyOperation_RSA($/;"	f	signature:( void *hSessionHandle, RSArefPublicKey *pucPublicKey, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_ExternalPublicKeyOperation_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExternalPublicKeyOperation_RSA_FuncPtr)($/;"	t
SDF_ExternalVerify_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ExternalVerify_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucDataInput, unsigned int uiInputLength, ECCSignature *pucSignature)
SDF_ExternalVerify_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ExternalVerify_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucDataInput, unsigned int uiInputLength, ECCSignature *pucSignature)
SDF_ExternalVerify_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ExternalVerify_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucDataInput, unsigned int uiInputLength, ECCSignature *pucSignature)
SDF_ExternalVerify_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ExternalVerify_ECC_FuncPtr)($/;"	t
SDF_FreeECCCipher	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_FreeECCCipher(ECCCipher *cipher)$/;"	f	signature:(ECCCipher *cipher)
SDF_FreeECCCipher	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_FreeECCCipher(ECCCipher *cipher);$/;"	p	signature:(ECCCipher *cipher)
SDF_GenerateAgreementDataAndKeyWithECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateAgreementDataAndKeyWithECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned int uiKeyBits, unsigned char *pucResponseID, unsigned int uiResponseIDLength, unsigned char *pucSponsorID, unsigned int uiSponsorIDLength, ECCrefPublicKey *pucSponsorPublicKey, ECCrefPublicKey *pucSponsorTmpPublicKey, ECCrefPublicKey *pucResponsePublicKey, ECCrefPublicKey *pucResponseTmpPublicKey, void **phKeyHandle)
SDF_GenerateAgreementDataAndKeyWithECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateAgreementDataAndKeyWithECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned int uiKeyBits, unsigned char *pucResponseID, unsigned int uiResponseIDLength, unsigned char *pucSponsorID, unsigned int uiSponsorIDLength, ECCrefPublicKey *pucSponsorPublicKey, ECCrefPublicKey *pucSponsorTmpPublicKey, ECCrefPublicKey *pucResponsePublicKey, ECCrefPublicKey *pucResponseTmpPublicKey, void **phKeyHandle)
SDF_GenerateAgreementDataAndKeyWithECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateAgreementDataAndKeyWithECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned int uiKeyBits, unsigned char *pucResponseID, unsigned int uiResponseIDLength, unsigned char *pucSponsorID, unsigned int uiSponsorIDLength, ECCrefPublicKey *pucSponsorPublicKey, ECCrefPublicKey *pucSponsorTmpPublicKey, ECCrefPublicKey *pucResponsePublicKey, ECCrefPublicKey *pucResponseTmpPublicKey, void **phKeyHandle)
SDF_GenerateAgreementDataAndKeyWithECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateAgreementDataAndKeyWithECC_FuncPtr)($/;"	t
SDF_GenerateAgreementDataWithECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateAgreementDataWithECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned int uiKeyBits, unsigned char *pucSponsorID, unsigned int uiSponsorIDLength, ECCrefPublicKey *pucSponsorPublicKey, ECCrefPublicKey *pucSponsorTmpPublicKey, void **phAgreementHandle)
SDF_GenerateAgreementDataWithECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateAgreementDataWithECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned int uiKeyBits, unsigned char *pucSponsorID, unsigned int uiSponsorIDLength, ECCrefPublicKey *pucSponsorPublicKey, ECCrefPublicKey *pucSponsorTmpPublicKey, void **phAgreementHandle)
SDF_GenerateAgreementDataWithECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateAgreementDataWithECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned int uiKeyBits, unsigned char *pucSponsorID, unsigned int uiSponsorIDLength, ECCrefPublicKey *pucSponsorPublicKey, ECCrefPublicKey *pucSponsorTmpPublicKey, void **phAgreementHandle)
SDF_GenerateAgreementDataWithECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateAgreementDataWithECC_FuncPtr)($/;"	t
SDF_GenerateKeyPair_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateKeyPair_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiAlgID, unsigned int uiKeyBits, ECCrefPublicKey *pucPublicKey, ECCrefPrivateKey *pucPrivateKey)
SDF_GenerateKeyPair_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateKeyPair_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, unsigned int uiKeyBits, ECCrefPublicKey *pucPublicKey, ECCrefPrivateKey *pucPrivateKey)
SDF_GenerateKeyPair_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateKeyPair_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, unsigned int uiKeyBits, ECCrefPublicKey *pucPublicKey, ECCrefPrivateKey *pucPrivateKey)
SDF_GenerateKeyPair_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateKeyPair_ECC_FuncPtr)($/;"	t
SDF_GenerateKeyPair_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateKeyPair_RSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyBits, RSArefPublicKey *pucPublicKey, RSArefPrivateKey *pucPrivateKey)
SDF_GenerateKeyPair_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateKeyPair_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyBits, RSArefPublicKey *pucPublicKey, RSArefPrivateKey *pucPrivateKey)
SDF_GenerateKeyPair_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateKeyPair_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyBits, RSArefPublicKey *pucPublicKey, RSArefPrivateKey *pucPrivateKey)
SDF_GenerateKeyPair_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateKeyPair_RSA_FuncPtr)($/;"	t
SDF_GenerateKeyWithECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateKeyWithECC($/;"	p	signature:( void *hSessionHandle, unsigned char *pucResponseID, unsigned int uiResponseIDLength, ECCrefPublicKey *pucResponsePublicKey, ECCrefPublicKey *pucResponseTmpPublicKey, void *hAgreementHandle, void **phKeyHandle)
SDF_GenerateKeyWithECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateKeyWithECC($/;"	f	signature:( void *hSessionHandle, unsigned char *pucResponseID, unsigned int uiResponseIDLength, ECCrefPublicKey *pucResponsePublicKey, ECCrefPublicKey *pucResponseTmpPublicKey, void *hAgreementHandle, void **phKeyHandle)
SDF_GenerateKeyWithECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateKeyWithECC($/;"	f	signature:( void *hSessionHandle, unsigned char *pucResponseID, unsigned int uiResponseIDLength, ECCrefPublicKey *pucResponsePublicKey, ECCrefPublicKey *pucResponseTmpPublicKey, void *hAgreementHandle, void **phKeyHandle)
SDF_GenerateKeyWithECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateKeyWithECC_FuncPtr)($/;"	t
SDF_GenerateKeyWithEPK_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateKeyWithEPK_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyBits, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, ECCCipher *pucKey, void **phKeyHandle)
SDF_GenerateKeyWithEPK_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateKeyWithEPK_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyBits, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, ECCCipher *pucKey, void **phKeyHandle)
SDF_GenerateKeyWithEPK_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateKeyWithEPK_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyBits, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, ECCCipher *pucKey, void **phKeyHandle)
SDF_GenerateKeyWithEPK_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateKeyWithEPK_ECC_FuncPtr)($/;"	t
SDF_GenerateKeyWithEPK_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateKeyWithEPK_RSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyBits, RSArefPublicKey *pucPublicKey, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithEPK_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateKeyWithEPK_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyBits, RSArefPublicKey *pucPublicKey, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithEPK_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateKeyWithEPK_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyBits, RSArefPublicKey *pucPublicKey, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithEPK_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateKeyWithEPK_RSA_FuncPtr)($/;"	t
SDF_GenerateKeyWithIPK_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateKeyWithIPK_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned int uiKeyBits, ECCCipher *pucKey, void **phKeyHandle)
SDF_GenerateKeyWithIPK_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateKeyWithIPK_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned int uiKeyBits, ECCCipher *pucKey, void **phKeyHandle)
SDF_GenerateKeyWithIPK_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateKeyWithIPK_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned int uiKeyBits, ECCCipher *pucKey, void **phKeyHandle)
SDF_GenerateKeyWithIPK_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateKeyWithIPK_ECC_FuncPtr)($/;"	t
SDF_GenerateKeyWithIPK_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateKeyWithIPK_RSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned int uiKeyBits, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithIPK_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateKeyWithIPK_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned int uiKeyBits, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithIPK_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateKeyWithIPK_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned int uiKeyBits, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithIPK_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateKeyWithIPK_RSA_FuncPtr)($/;"	t
SDF_GenerateKeyWithKEK	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateKeyWithKEK($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyBits, unsigned int uiAlgID, unsigned int uiKEKIndex, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithKEK	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateKeyWithKEK($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyBits, unsigned int uiAlgID, unsigned int uiKEKIndex, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithKEK	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateKeyWithKEK($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyBits, unsigned int uiAlgID, unsigned int uiKEKIndex, unsigned char *pucKey, unsigned int *puiKeyLength, void **phKeyHandle)
SDF_GenerateKeyWithKEK_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateKeyWithKEK_FuncPtr)($/;"	t
SDF_GenerateRandom	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GenerateRandom($/;"	p	signature:( void *hSessionHandle, unsigned int uiLength, unsigned char *pucRandom)
SDF_GenerateRandom	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GenerateRandom($/;"	f	signature:( void *hSessionHandle, unsigned int uiLength, unsigned char *pucRandom)
SDF_GenerateRandom	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GenerateRandom($/;"	f	signature:( void *hSessionHandle, unsigned int uiLength, unsigned char *pucRandom)
SDF_GenerateRandom_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GenerateRandom_FuncPtr)($/;"	t
SDF_GetDeviceInfo	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GetDeviceInfo($/;"	p	signature:( void *hSessionHandle, DEVICEINFO *pstDeviceInfo)
SDF_GetDeviceInfo	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GetDeviceInfo($/;"	f	signature:( void *hSessionHandle, DEVICEINFO *pstDeviceInfo)
SDF_GetDeviceInfo	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GetDeviceInfo($/;"	f	signature:( void *hSessionHandle, DEVICEINFO *pstDeviceInfo)
SDF_GetDeviceInfo_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GetDeviceInfo_FuncPtr)($/;"	t
SDF_GetErrorReason	GmSSL/tools/sdfutil/sdf_ext.c	/^const char *SDF_GetErrorReason(int err)$/;"	f	signature:(int err)
SDF_GetErrorReason	GmSSL/tools/sdfutil/sdf_ext.h	/^const char *SDF_GetErrorReason(int err);$/;"	p	signature:(int err)
SDF_GetPrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf.h	/^int SDF_GetPrivateKeyAccessRight($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned char *pucPassword, unsigned int uiPwdLength)
SDF_GetPrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_GetPrivateKeyAccessRight($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned char *pucPassword, unsigned int uiPwdLength)
SDF_GetPrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_GetPrivateKeyAccessRight($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned char *pucPassword, unsigned int uiPwdLength)
SDF_GetPrivateKeyAccessRight_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_GetPrivateKeyAccessRight_FuncPtr)($/;"	t
SDF_HashFinal	GmSSL/tools/sdfutil/sdf.h	/^int SDF_HashFinal(void *hSessionHandle,$/;"	p	signature:(void *hSessionHandle, unsigned char *pucHash, unsigned int *puiHashLength)
SDF_HashFinal	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_HashFinal(void *hSessionHandle,$/;"	f	signature:(void *hSessionHandle, unsigned char *pucHash, unsigned int *puiHashLength)
SDF_HashFinal	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_HashFinal($/;"	f	signature:( void *hSessionHandle, unsigned char *pucHash, unsigned int *puiHashLength)
SDF_HashFinal_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_HashFinal_FuncPtr)(void *hSessionHandle,$/;"	t
SDF_HashInit	GmSSL/tools/sdfutil/sdf.h	/^int SDF_HashInit($/;"	p	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucID, unsigned int uiIDLength)
SDF_HashInit	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_HashInit($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucID, unsigned int uiIDLength)
SDF_HashInit	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_HashInit($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, ECCrefPublicKey *pucPublicKey, unsigned char *pucID, unsigned int uiIDLength)
SDF_HashInit_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_HashInit_FuncPtr)($/;"	t
SDF_HashUpdate	GmSSL/tools/sdfutil/sdf.h	/^int SDF_HashUpdate($/;"	p	signature:( void *hSessionHandle, unsigned char *pucData, unsigned int uiDataLength)
SDF_HashUpdate	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_HashUpdate($/;"	f	signature:( void *hSessionHandle, unsigned char *pucData, unsigned int uiDataLength)
SDF_HashUpdate	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_HashUpdate($/;"	f	signature:( void *hSessionHandle, unsigned char *pucData, unsigned int uiDataLength)
SDF_HashUpdate_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_HashUpdate_FuncPtr)($/;"	t
SDF_ImportKey	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_ImportKey($/;"	f	signature:( void *hSessionHandle, unsigned char *pucKey, unsigned int uiKeyLength, void **phKeyHandle)
SDF_ImportKey	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_ImportKey(void *hSessionHandle, unsigned char *pucKey,$/;"	p	signature:(void *hSessionHandle, unsigned char *pucKey, unsigned int uiKeyLength, void **phKeyHandle)
SDF_ImportKeyWithISK_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ImportKeyWithISK_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiISKIndex, ECCCipher *pucKey, void **phKeyHandle)
SDF_ImportKeyWithISK_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ImportKeyWithISK_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, ECCCipher *pucKey, void **phKeyHandle)
SDF_ImportKeyWithISK_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ImportKeyWithISK_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, ECCCipher *pucKey, void **phKeyHandle)
SDF_ImportKeyWithISK_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ImportKeyWithISK_ECC_FuncPtr)($/;"	t
SDF_ImportKeyWithISK_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ImportKeyWithISK_RSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned char *pucKey, unsigned int uiKeyLength, void **phKeyHandle)
SDF_ImportKeyWithISK_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ImportKeyWithISK_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned char *pucKey, unsigned int uiKeyLength, void **phKeyHandle)
SDF_ImportKeyWithISK_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ImportKeyWithISK_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned char *pucKey, unsigned int uiKeyLength, void **phKeyHandle)
SDF_ImportKeyWithISK_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ImportKeyWithISK_RSA_FuncPtr)($/;"	t
SDF_ImportKeyWithKEK	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ImportKeyWithKEK($/;"	p	signature:( void *hSessionHandle, unsigned int uiAlgID, unsigned int uiKEKIndex, unsigned char *pucKey, unsigned int uiKeyLength, void **phKeyHandle)
SDF_ImportKeyWithKEK	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ImportKeyWithKEK($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, unsigned int uiKEKIndex, unsigned char *pucKey, unsigned int uiKeyLength, void **phKeyHandle)
SDF_ImportKeyWithKEK	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ImportKeyWithKEK($/;"	f	signature:( void *hSessionHandle, unsigned int uiAlgID, unsigned int uiKEKIndex, unsigned char *pucKey, unsigned int uiKeyLength, void **phKeyHandle)
SDF_ImportKeyWithKEK_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ImportKeyWithKEK_FuncPtr)($/;"	t
SDF_InternalDecrypt_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_InternalDecrypt_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned int uiAlgID, ECCCipher *pucEncData, unsigned char *pucData, unsigned int *uiDataLength)
SDF_InternalDecrypt_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_InternalDecrypt_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned int uiAlgID, ECCCipher *pucEncData, unsigned char *pucData, unsigned int *uiDataLength)
SDF_InternalDecrypt_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_InternalDecrypt_ECC_FuncPtr)($/;"	t
SDF_InternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_InternalEncrypt_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned int uiAlgID, unsigned char *pucData, unsigned int uiDataLength, ECCCipher *pucEncData)
SDF_InternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_InternalEncrypt_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned int uiAlgID, unsigned char *pucData, unsigned int uiDataLength, ECCCipher *pucEncData)
SDF_InternalEncrypt_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_InternalEncrypt_ECC_FuncPtr)($/;"	t
SDF_InternalPrivateKeyOperation_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_InternalPrivateKeyOperation_RSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_InternalPrivateKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_InternalPrivateKeyOperation_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_InternalPrivateKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_InternalPrivateKeyOperation_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_InternalPrivateKeyOperation_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_InternalPrivateKeyOperation_RSA_FuncPtr)($/;"	t
SDF_InternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf.h	/^int SDF_InternalPublicKeyOperation_RSA($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_InternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_InternalPublicKeyOperation_RSA($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex, unsigned char *pucDataInput, unsigned int uiInputLength, unsigned char *pucDataOutput, unsigned int *puiOutputLength)
SDF_InternalPublicKeyOperation_RSA_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_InternalPublicKeyOperation_RSA_FuncPtr)($/;"	t
SDF_InternalSign_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_InternalSign_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned char *pucData, unsigned int uiDataLength, ECCSignature *pucSignature)
SDF_InternalSign_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_InternalSign_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned char *pucData, unsigned int uiDataLength, ECCSignature *pucSignature)
SDF_InternalSign_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_InternalSign_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiISKIndex, unsigned char *pucData, unsigned int uiDataLength, ECCSignature *pucSignature)
SDF_InternalSign_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_InternalSign_ECC_FuncPtr)($/;"	t
SDF_InternalVerify_ECC	GmSSL/tools/sdfutil/sdf.h	/^int SDF_InternalVerify_ECC($/;"	p	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned char *pucData, unsigned int uiDataLength, ECCSignature *pucSignature)
SDF_InternalVerify_ECC	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_InternalVerify_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned char *pucData, unsigned int uiDataLength, ECCSignature *pucSignature)
SDF_InternalVerify_ECC	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_InternalVerify_ECC($/;"	f	signature:( void *hSessionHandle, unsigned int uiIPKIndex, unsigned char *pucData, unsigned int uiDataLength, ECCSignature *pucSignature)
SDF_InternalVerify_ECC_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_InternalVerify_ECC_FuncPtr)($/;"	t
SDF_KEY	GmSSL/include/gmssl/sdf.h	/^} SDF_KEY;$/;"	t	typeref:struct:__anon68
SDF_LoadLibrary	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_LoadLibrary(char *so_path, char *vendor);$/;"	p	signature:(char *so_path, char *vendor)
SDF_LoadLibrary	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_LoadLibrary(char *so_path, char *vendor)$/;"	f	signature:(char *so_path, char *vendor)
SDF_MAX_FILE_SIZE	GmSSL/tools/sdfutil/sdf_ext.h	68;"	d
SDF_MAX_KEY_INDEX	GmSSL/tools/sdfutil/sdf_ext.h	65;"	d
SDF_MAX_PASSWORD_LENGTH	GmSSL/tools/sdfutil/sdf_ext.h	67;"	d
SDF_METHOD	GmSSL/tools/sdfutil/sdf_int.h	/^} SDF_METHOD;$/;"	t	typeref:struct:sdf_method_st
SDF_METHOD_BIND_FUNCTION	GmSSL/tools/sdfutil/sdf_meth.c	61;"	d	file:
SDF_METHOD_BIND_FUNCTION_EX	GmSSL/tools/sdfutil/sdf_meth.c	58;"	d	file:
SDF_METHOD_free	GmSSL/tools/sdfutil/sdf_int.h	/^void SDF_METHOD_free(SDF_METHOD *meth);$/;"	p	signature:(SDF_METHOD *meth)
SDF_METHOD_free	GmSSL/tools/sdfutil/sdf_meth.c	/^void SDF_METHOD_free(SDF_METHOD *meth)$/;"	f	signature:(SDF_METHOD *meth)
SDF_METHOD_load_library	GmSSL/tools/sdfutil/sdf_int.h	/^SDF_METHOD *SDF_METHOD_load_library(const char *so_path);$/;"	p	signature:(const char *so_path)
SDF_METHOD_load_library	GmSSL/tools/sdfutil/sdf_meth.c	/^SDF_METHOD *SDF_METHOD_load_library(const char *so_path)$/;"	f	signature:(const char *so_path)
SDF_MIN_KEY_INDEX	GmSSL/tools/sdfutil/sdf_ext.h	64;"	d
SDF_MIN_PASSWORD_LENGTH	GmSSL/tools/sdfutil/sdf_ext.h	66;"	d
SDF_NewECCCipher	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_NewECCCipher(ECCCipher **cipher, size_t ulDataLen)$/;"	f	signature:(ECCCipher **cipher, size_t ulDataLen)
SDF_NewECCCipher	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_NewECCCipher(ECCCipher **cipher, size_t ulDataLen);$/;"	p	signature:(ECCCipher **cipher, size_t ulDataLen)
SDF_OpenDevice	GmSSL/tools/sdfutil/sdf.h	/^int SDF_OpenDevice($/;"	p	signature:( void **phDeviceHandle)
SDF_OpenDevice	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_OpenDevice($/;"	f	signature:( void **phDeviceHandle)
SDF_OpenDevice	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_OpenDevice($/;"	f	signature:( void **phDeviceHandle)
SDF_OpenDevice_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_OpenDevice_FuncPtr)($/;"	t
SDF_OpenSession	GmSSL/tools/sdfutil/sdf.h	/^int SDF_OpenSession($/;"	p	signature:( void *hDeviceHandle, void **phSessionHandle)
SDF_OpenSession	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_OpenSession($/;"	f	signature:( void *hDeviceHandle, void **phSessionHandle)
SDF_OpenSession	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_OpenSession($/;"	f	signature:( void *hDeviceHandle, void **phSessionHandle)
SDF_OpenSession_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_OpenSession_FuncPtr)($/;"	t
SDF_PrintDeviceInfo	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_PrintDeviceInfo(FILE *out, DEVICEINFO *pstDeviceInfo)$/;"	f	signature:(FILE *out, DEVICEINFO *pstDeviceInfo)
SDF_PrintDeviceInfo	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_PrintDeviceInfo(FILE *out, DEVICEINFO *devInfo);$/;"	p	signature:(FILE *out, DEVICEINFO *devInfo)
SDF_PrintECCCipher	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_PrintECCCipher(FILE *bio, ECCCipher *blob)$/;"	f	signature:(FILE *bio, ECCCipher *blob)
SDF_PrintECCCipher	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_PrintECCCipher(FILE *out, ECCCipher *cipher);$/;"	p	signature:(FILE *out, ECCCipher *cipher)
SDF_PrintECCPrivateKey	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_PrintECCPrivateKey(FILE *bio, ECCrefPrivateKey *blob)$/;"	f	signature:(FILE *bio, ECCrefPrivateKey *blob)
SDF_PrintECCPrivateKey	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_PrintECCPrivateKey(FILE *out, ECCrefPrivateKey *ref);$/;"	p	signature:(FILE *out, ECCrefPrivateKey *ref)
SDF_PrintECCPublicKey	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_PrintECCPublicKey(FILE *bio, ECCrefPublicKey *blob)$/;"	f	signature:(FILE *bio, ECCrefPublicKey *blob)
SDF_PrintECCPublicKey	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_PrintECCPublicKey(FILE *out, ECCrefPublicKey *ref);$/;"	p	signature:(FILE *out, ECCrefPublicKey *ref)
SDF_PrintECCSignature	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_PrintECCSignature(FILE *bio, ECCSignature *blob)$/;"	f	signature:(FILE *bio, ECCSignature *blob)
SDF_PrintECCSignature	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_PrintECCSignature(FILE *out, ECCSignature *sig);$/;"	p	signature:(FILE *out, ECCSignature *sig)
SDF_PrintRSAPrivateKey	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_PrintRSAPrivateKey(FILE *bio, RSArefPrivateKey *blob)$/;"	f	signature:(FILE *bio, RSArefPrivateKey *blob)
SDF_PrintRSAPrivateKey	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_PrintRSAPrivateKey(FILE *out, RSArefPrivateKey *ref);$/;"	p	signature:(FILE *out, RSArefPrivateKey *ref)
SDF_PrintRSAPublicKey	GmSSL/tools/sdfutil/sdf_ext.c	/^int SDF_PrintRSAPublicKey(FILE *out, RSArefPublicKey *blob)$/;"	f	signature:(FILE *out, RSArefPublicKey *blob)
SDF_PrintRSAPublicKey	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_PrintRSAPublicKey(FILE *out, RSArefPublicKey *ref);$/;"	p	signature:(FILE *out, RSArefPublicKey *ref)
SDF_R_BUFFER_TOO_SMALL	GmSSL/tools/sdfutil/sdf_lib.c	66;"	d	file:
SDF_R_LOAD_LIBRARY_FAILURE	GmSSL/tools/sdfutil/sdf_lib.c	62;"	d	file:
SDF_R_NOT_INITIALIZED	GmSSL/tools/sdfutil/sdf_lib.c	63;"	d	file:
SDF_R_NOT_SUPPORTED_CIPHER_ALGOR	GmSSL/tools/sdfutil/sdf_lib.c	65;"	d	file:
SDF_R_NOT_SUPPORTED_DIGEST_ALGOR	GmSSL/tools/sdfutil/sdf_lib.c	68;"	d	file:
SDF_R_NOT_SUPPORTED_ECC_ALGOR	GmSSL/tools/sdfutil/sdf_lib.c	64;"	d	file:
SDF_R_NOT_SUPPORTED_PKEY_ALGOR	GmSSL/tools/sdfutil/sdf_lib.c	67;"	d	file:
SDF_ReadFile	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ReadFile($/;"	p	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiOffset, unsigned int *puiReadLength, unsigned char *pucBuffer)
SDF_ReadFile	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ReadFile($/;"	f	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiOffset, unsigned int *puiReadLength, unsigned char *pucBuffer)
SDF_ReadFile	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ReadFile($/;"	f	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiOffset, unsigned int *puiReadLength, unsigned char *pucBuffer)
SDF_ReadObject_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ReadObject_FuncPtr)($/;"	t
SDF_ReleasePrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf.h	/^int SDF_ReleasePrivateKeyAccessRight($/;"	p	signature:( void *hSessionHandle, unsigned int uiKeyIndex)
SDF_ReleasePrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_ReleasePrivateKeyAccessRight($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex)
SDF_ReleasePrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_ReleasePrivateKeyAccessRight($/;"	f	signature:( void *hSessionHandle, unsigned int uiKeyIndex)
SDF_ReleasePrivateKeyAccessRight_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_ReleasePrivateKeyAccessRight_FuncPtr)($/;"	t
SDF_TRACE	GmSSL/tools/sdfutil/sdf_dummy.c	203;"	d	file:
SDF_UnloadLibrary	GmSSL/tools/sdfutil/sdf_ext.h	/^int SDF_UnloadLibrary(void);$/;"	p	signature:(void)
SDF_UnloadLibrary	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_UnloadLibrary(void)$/;"	f	signature:(void)
SDF_VENDOR	GmSSL/tools/sdfutil/sdf_int.h	/^} SDF_VENDOR;$/;"	t	typeref:struct:sdf_vendor_st
SDF_WriteFile	GmSSL/tools/sdfutil/sdf.h	/^int SDF_WriteFile($/;"	p	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiOffset, unsigned int uiWriteLength, unsigned char *pucBuffer)
SDF_WriteFile	GmSSL/tools/sdfutil/sdf_dummy.c	/^int SDF_WriteFile($/;"	f	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiOffset, unsigned int uiWriteLength, unsigned char *pucBuffer)
SDF_WriteFile	GmSSL/tools/sdfutil/sdf_lib.c	/^int SDF_WriteFile($/;"	f	signature:( void *hSessionHandle, unsigned char *pucFileName, unsigned int uiNameLen, unsigned int uiOffset, unsigned int uiWriteLength, unsigned char *pucBuffer)
SDF_WriteObject_FuncPtr	GmSSL/tools/sdfutil/sdf_int.h	/^typedef int (*SDF_WriteObject_FuncPtr)($/;"	t
SDFerr	GmSSL/tools/sdfutil/sdf_ext.c	64;"	d	file:
SDFerr	GmSSL/tools/sdfutil/sdf_lib.c	59;"	d	file:
SDFerr	GmSSL/tools/sdfutil/sdf_meth.c	56;"	d	file:
SDFerr	GmSSL/tools/sdfutil/sdf_sansec.c	56;"	d	file:
SDR_ALGMODNOTSUPPORT	GmSSL/tools/sdfutil/sdf.h	477;"	d
SDR_ALGNOTSUPPORT	GmSSL/tools/sdfutil/sdf.h	476;"	d
SDR_BASE	GmSSL/tools/sdfutil/sdf.h	467;"	d
SDR_COMMFAIL	GmSSL/tools/sdfutil/sdf.h	470;"	d
SDR_ENCDATAERR	GmSSL/tools/sdfutil/sdf.h	489;"	d
SDR_FILEEXSITS	GmSSL/tools/sdfutil/sdf.h	493;"	d
SDR_FILENOEXIST	GmSSL/tools/sdfutil/sdf.h	485;"	d
SDR_FILEOFSERR	GmSSL/tools/sdfutil/sdf.h	486;"	d
SDR_FILESIZEERR	GmSSL/tools/sdfutil/sdf.h	484;"	d
SDR_FILEWERR	GmSSL/tools/sdfutil/sdf.h	494;"	d
SDR_HARDFAIL	GmSSL/tools/sdfutil/sdf.h	471;"	d
SDR_INARGERR	GmSSL/tools/sdfutil/sdf.h	496;"	d
SDR_KEYERR	GmSSL/tools/sdfutil/sdf.h	488;"	d
SDR_KEYNOTEXIST	GmSSL/tools/sdfutil/sdf.h	475;"	d
SDR_KEYTYPEERR	GmSSL/tools/sdfutil/sdf.h	487;"	d
SDR_MACERR	GmSSL/tools/sdfutil/sdf.h	492;"	d
SDR_NOBUFFER	GmSSL/tools/sdfutil/sdf.h	495;"	d
SDR_NOTSUPPORT	GmSSL/tools/sdfutil/sdf.h	469;"	d
SDR_OK	GmSSL/tools/sdfutil/sdf.h	466;"	d
SDR_OPENDEVICE	GmSSL/tools/sdfutil/sdf.h	472;"	d
SDR_OPENSESSION	GmSSL/tools/sdfutil/sdf.h	473;"	d
SDR_OUTARGERR	GmSSL/tools/sdfutil/sdf.h	497;"	d
SDR_PARDENY	GmSSL/tools/sdfutil/sdf.h	474;"	d
SDR_PKOPERR	GmSSL/tools/sdfutil/sdf.h	478;"	d
SDR_PRKRERR	GmSSL/tools/sdfutil/sdf.h	491;"	d
SDR_RANDERR	GmSSL/tools/sdfutil/sdf.h	490;"	d
SDR_SIGNERR	GmSSL/tools/sdfutil/sdf.h	480;"	d
SDR_SKOPERR	GmSSL/tools/sdfutil/sdf.h	479;"	d
SDR_STEPERR	GmSSL/tools/sdfutil/sdf.h	483;"	d
SDR_SYMOPERR	GmSSL/tools/sdfutil/sdf.h	482;"	d
SDR_UNKNOWERR	GmSSL/tools/sdfutil/sdf.h	468;"	d
SDR_VERIFYERR	GmSSL/tools/sdfutil/sdf.h	481;"	d
SECURE_ADM_ACCOUNT	GmSSL/tools/sdfutil/sgd.h	410;"	d
SECURE_ANYONE_ACCOUNT	GmSSL/tools/sdfutil/sgd.h	412;"	d
SECURE_NEVER_ACCOUNT	GmSSL/tools/sdfutil/sgd.h	409;"	d
SECURE_USER_ACCOUNT	GmSSL/tools/sdfutil/sgd.h	411;"	d
SGD_ATTRIBUTE_CERT	GmSSL/tools/sdfutil/sgd.h	152;"	d
SGD_BOOL	GmSSL/tools/sdfutil/sgd.h	/^typedef int32_t			SGD_BOOL;$/;"	t
SGD_CBC	GmSSL/tools/sdfutil/sgd.h	62;"	d
SGD_CERT_DER_EXTENSIONS	GmSSL/tools/sdfutil/sgd.h	168;"	d
SGD_CERT_DER_PUBLIC_KEY	GmSSL/tools/sdfutil/sgd.h	167;"	d
SGD_CERT_ISSUER	GmSSL/tools/sdfutil/sgd.h	164;"	d
SGD_CERT_ISSUER_CN	GmSSL/tools/sdfutil/sgd.h	181;"	d
SGD_CERT_ISSUER_O	GmSSL/tools/sdfutil/sgd.h	182;"	d
SGD_CERT_ISSUER_OU	GmSSL/tools/sdfutil/sgd.h	183;"	d
SGD_CERT_NOTAFTER_TIME	GmSSL/tools/sdfutil/sgd.h	189;"	d
SGD_CERT_NOTBEFORE_TIME	GmSSL/tools/sdfutil/sgd.h	188;"	d
SGD_CERT_OF_TSSSERVER	GmSSL/tools/sdfutil/sgd.h	195;"	d
SGD_CERT_SERIAL	GmSSL/tools/sdfutil/sgd.h	163;"	d
SGD_CERT_SUBJECT	GmSSL/tools/sdfutil/sgd.h	166;"	d
SGD_CERT_SUBJECT_CN	GmSSL/tools/sdfutil/sgd.h	184;"	d
SGD_CERT_SUBJECT_EMAIL	GmSSL/tools/sdfutil/sgd.h	187;"	d
SGD_CERT_SUBJECT_O	GmSSL/tools/sdfutil/sgd.h	185;"	d
SGD_CERT_SUBJECT_OU	GmSSL/tools/sdfutil/sgd.h	186;"	d
SGD_CERT_VALID_TIME	GmSSL/tools/sdfutil/sgd.h	165;"	d
SGD_CERT_VERSION	GmSSL/tools/sdfutil/sgd.h	162;"	d
SGD_CFB	GmSSL/tools/sdfutil/sgd.h	63;"	d
SGD_CHAR	GmSSL/tools/sdfutil/sgd.h	/^typedef char			SGD_CHAR;$/;"	t
SGD_CIPHER_DATA	GmSSL/tools/sdfutil/sgd.h	157;"	d
SGD_CN_OF_TSSIGNER	GmSSL/tools/sdfutil/sgd.h	193;"	d
SGD_COMPARTITION_KEY	GmSSL/tools/sdfutil/sgd.h	257;"	d
SGD_CRL_VERIFY	GmSSL/tools/sdfutil/sgd.h	227;"	d
SGD_DEVICE_DESCRIPTION	GmSSL/tools/sdfutil/sgd.h	297;"	d
SGD_DEVICE_HARDWARE_VERSION	GmSSL/tools/sdfutil/sgd.h	285;"	d
SGD_DEVICE_KEYS	GmSSL/tools/sdfutil/sgd.h	252;"	d
SGD_DEVICE_LOCATION	GmSSL/tools/sdfutil/sgd.h	296;"	d
SGD_DEVICE_MANAGER_INFO	GmSSL/tools/sdfutil/sgd.h	298;"	d
SGD_DEVICE_MANUFACTURER	GmSSL/tools/sdfutil/sgd.h	284;"	d
SGD_DEVICE_MAX_DATA_SIZE	GmSSL/tools/sdfutil/sgd.h	299;"	d
SGD_DEVICE_NAME	GmSSL/tools/sdfutil/sgd.h	283;"	d
SGD_DEVICE_RUNTIME	GmSSL/tools/sdfutil/sgd.h	294;"	d
SGD_DEVICE_SERIAL_NUMBER	GmSSL/tools/sdfutil/sgd.h	288;"	d
SGD_DEVICE_SOFTWARE_VERSION	GmSSL/tools/sdfutil/sgd.h	286;"	d
SGD_DEVICE_SORT	GmSSL/tools/sdfutil/sgd.h	281;"	d
SGD_DEVICE_SORT_FA	GmSSL/tools/sdfutil/sgd.h	308;"	d
SGD_DEVICE_SORT_FE	GmSSL/tools/sdfutil/sgd.h	307;"	d
SGD_DEVICE_SORT_FM	GmSSL/tools/sdfutil/sgd.h	309;"	d
SGD_DEVICE_SORT_SJ	GmSSL/tools/sdfutil/sgd.h	302;"	d
SGD_DEVICE_SORT_SK	GmSSL/tools/sdfutil/sgd.h	303;"	d
SGD_DEVICE_SORT_SM	GmSSL/tools/sdfutil/sgd.h	304;"	d
SGD_DEVICE_STANDARD_VERSION	GmSSL/tools/sdfutil/sgd.h	287;"	d
SGD_DEVICE_SUPPORT_FREE_SPACE	GmSSL/tools/sdfutil/sgd.h	293;"	d
SGD_DEVICE_SUPPORT_HASH_ALG	GmSSL/tools/sdfutil/sgd.h	291;"	d
SGD_DEVICE_SUPPORT_PKEY_ALG	GmSSL/tools/sdfutil/sgd.h	290;"	d
SGD_DEVICE_SUPPORT_STORAGE_SPACE	GmSSL/tools/sdfutil/sgd.h	292;"	d
SGD_DEVICE_SUPPORT_SYMM_ALG	GmSSL/tools/sdfutil/sgd.h	289;"	d
SGD_DEVICE_TYPE	GmSSL/tools/sdfutil/sgd.h	282;"	d
SGD_DEVICE_USED_TIMES	GmSSL/tools/sdfutil/sgd.h	295;"	d
SGD_DIGEST_DATA	GmSSL/tools/sdfutil/sgd.h	158;"	d
SGD_ECB	GmSSL/tools/sdfutil/sgd.h	61;"	d
SGD_EEA3	GmSSL/tools/sdfutil/sgd.h	68;"	d
SGD_EIA3	GmSSL/tools/sdfutil/sgd.h	69;"	d
SGD_ENCODING_BASE64	GmSSL/tools/sdfutil/sgd.h	214;"	d
SGD_ENCODING_DER	GmSSL/tools/sdfutil/sgd.h	213;"	d
SGD_ENCODING_PEM	GmSSL/tools/sdfutil/sgd.h	215;"	d
SGD_ENCODING_RAW	GmSSL/tools/sdfutil/sgd.h	212;"	d
SGD_ENCODING_TXT	GmSSL/tools/sdfutil/sgd.h	216;"	d
SGD_ENVELOPE_DATA	GmSSL/tools/sdfutil/sgd.h	154;"	d
SGD_EXT_AUTHORITYKEYIDENTIFIER_INFO	GmSSL/tools/sdfutil/sgd.h	169;"	d
SGD_EXT_BASICCONSTRAINTS_INFO	GmSSL/tools/sdfutil/sgd.h	175;"	d
SGD_EXT_CERTIFICATEPOLICIES_INFO	GmSSL/tools/sdfutil/sgd.h	173;"	d
SGD_EXT_CRLDISTRIBUTIONPOINTS_INFO	GmSSL/tools/sdfutil/sgd.h	178;"	d
SGD_EXT_EXTKEYUSAGE_INFO	GmSSL/tools/sdfutil/sgd.h	177;"	d
SGD_EXT_KEYUSAGE_INFO	GmSSL/tools/sdfutil/sgd.h	171;"	d
SGD_EXT_NETSCAPE_CERT_TYPE_INFO	GmSSL/tools/sdfutil/sgd.h	179;"	d
SGD_EXT_POLICYCONSTRAINTS_INFO	GmSSL/tools/sdfutil/sgd.h	176;"	d
SGD_EXT_POLICYMAPPINGS_INFO	GmSSL/tools/sdfutil/sgd.h	174;"	d
SGD_EXT_PRIVATEKEYUSAGEPERIOD_INFO	GmSSL/tools/sdfutil/sgd.h	172;"	d
SGD_EXT_SELFDEFINED_EXTENSION_INFO	GmSSL/tools/sdfutil/sgd.h	180;"	d
SGD_EXT_SUBJECTKEYIDENTIFIER_INFO	GmSSL/tools/sdfutil/sgd.h	170;"	d
SGD_FALSE	GmSSL/tools/sdfutil/sgd.h	141;"	d
SGD_GERTCHAIN_OF_TSSERVER	GmSSL/tools/sdfutil/sgd.h	196;"	d
SGD_HASH_FROM	GmSSL/tools/sdfutil/sgd.h	114;"	d
SGD_HASH_TO	GmSSL/tools/sdfutil/sgd.h	115;"	d
SGD_IDP_ID	GmSSL/tools/sdfutil/sgd.h	208;"	d
SGD_IDP_USER_ID	GmSSL/tools/sdfutil/sgd.h	209;"	d
SGD_INT16	GmSSL/tools/sdfutil/sgd.h	/^typedef int16_t			SGD_INT16;$/;"	t
SGD_INT32	GmSSL/tools/sdfutil/sgd.h	/^typedef int32_t			SGD_INT32;$/;"	t
SGD_INT64	GmSSL/tools/sdfutil/sgd.h	/^typedef int64_t			SGD_INT64;$/;"	t
SGD_INT8	GmSSL/tools/sdfutil/sgd.h	/^typedef char			SGD_INT8;$/;"	t
SGD_KEY	GmSSL/tools/sdfutil/sgd.h	254;"	d
SGD_KEY_BACKUP	GmSSL/tools/sdfutil/sgd.h	267;"	d
SGD_KEY_COMPONENT	GmSSL/tools/sdfutil/sgd.h	149;"	d
SGD_KEY_COMPOSE	GmSSL/tools/sdfutil/sgd.h	265;"	d
SGD_KEY_DESTORY	GmSSL/tools/sdfutil/sgd.h	269;"	d
SGD_KEY_DISPENSE	GmSSL/tools/sdfutil/sgd.h	261;"	d
SGD_KEY_DIVISION	GmSSL/tools/sdfutil/sgd.h	264;"	d
SGD_KEY_EXPORT	GmSSL/tools/sdfutil/sgd.h	263;"	d
SGD_KEY_GENERATION	GmSSL/tools/sdfutil/sgd.h	260;"	d
SGD_KEY_IMPORT	GmSSL/tools/sdfutil/sgd.h	262;"	d
SGD_KEY_INDEX	GmSSL/tools/sdfutil/sgd.h	143;"	d
SGD_KEY_RENEWAL	GmSSL/tools/sdfutil/sgd.h	266;"	d
SGD_KEY_RESTORE	GmSSL/tools/sdfutil/sgd.h	268;"	d
SGD_MAC	GmSSL/tools/sdfutil/sgd.h	65;"	d
SGD_MAIN_KEY	GmSSL/tools/sdfutil/sgd.h	251;"	d
SGD_MAX_COUNT	GmSSL/tools/sdfutil/sgd.h	431;"	d
SGD_MAX_NAME_SIZE	GmSSL/tools/sdfutil/sgd.h	432;"	d
SGD_OBJ	GmSSL/tools/sdfutil/sgd.h	/^typedef void *			SGD_OBJ;$/;"	t
SGD_OCSP_VEIFY	GmSSL/tools/sdfutil/sgd.h	228;"	d
SGD_OFB	GmSSL/tools/sdfutil/sgd.h	64;"	d
SGD_OPERATION_AUTHORIZATION	GmSSL/tools/sdfutil/sgd.h	245;"	d
SGD_OPERATION_CHG_PWD	GmSSL/tools/sdfutil/sgd.h	244;"	d
SGD_OPERATION_CREATE	GmSSL/tools/sdfutil/sgd.h	241;"	d
SGD_OPERATION_DELETE	GmSSL/tools/sdfutil/sgd.h	242;"	d
SGD_OPERATION_MODIFY	GmSSL/tools/sdfutil/sgd.h	243;"	d
SGD_OPERATION_SIGNIN	GmSSL/tools/sdfutil/sgd.h	239;"	d
SGD_OPERATION_SIGNOUT	GmSSL/tools/sdfutil/sgd.h	240;"	d
SGD_OPERATION_SUCCESS	GmSSL/tools/sdfutil/sgd.h	248;"	d
SGD_ORININAL_DATA	GmSSL/tools/sdfutil/sgd.h	194;"	d
SGD_PASSWORD	GmSSL/tools/sdfutil/sgd.h	150;"	d
SGD_PK_DH	GmSSL/tools/sdfutil/sgd.h	98;"	d
SGD_PK_ENC	GmSSL/tools/sdfutil/sgd.h	99;"	d
SGD_PK_SIGN	GmSSL/tools/sdfutil/sgd.h	97;"	d
SGD_PLAIN_DATA	GmSSL/tools/sdfutil/sgd.h	156;"	d
SGD_PRIKEY_PASSWD	GmSSL/tools/sdfutil/sgd.h	256;"	d
SGD_PRIVATE_KEY_ENCRYPT	GmSSL/tools/sdfutil/sgd.h	148;"	d
SGD_PRIVATE_KEY_SIGN	GmSSL/tools/sdfutil/sgd.h	147;"	d
SGD_PROTOCOL_CNG	GmSSL/tools/sdfutil/sgd.h	223;"	d
SGD_PROTOCOL_CSP	GmSSL/tools/sdfutil/sgd.h	219;"	d
SGD_PROTOCOL_GCS	GmSSL/tools/sdfutil/sgd.h	224;"	d
SGD_PROTOCOL_PKCS11	GmSSL/tools/sdfutil/sgd.h	220;"	d
SGD_PROTOCOL_SDS	GmSSL/tools/sdfutil/sgd.h	221;"	d
SGD_PROTOCOL_UKEY	GmSSL/tools/sdfutil/sgd.h	222;"	d
SGD_PUBLIC_KEY_CERT	GmSSL/tools/sdfutil/sgd.h	151;"	d
SGD_PUBLIC_KEY_ENCRYPT	GmSSL/tools/sdfutil/sgd.h	146;"	d
SGD_PUBLIC_KEY_SIGN	GmSSL/tools/sdfutil/sgd.h	145;"	d
SGD_RANDOM_DATA	GmSSL/tools/sdfutil/sgd.h	155;"	d
SGD_RESPONSE_TYPE	GmSSL/tools/sdfutil/sgd.h	199;"	d
SGD_ROLE_AUDITOR	GmSSL/tools/sdfutil/sgd.h	234;"	d
SGD_ROLE_AUDIT_MANAGER	GmSSL/tools/sdfutil/sgd.h	233;"	d
SGD_ROLE_MANAGER	GmSSL/tools/sdfutil/sgd.h	232;"	d
SGD_ROLE_OPERATOR	GmSSL/tools/sdfutil/sgd.h	235;"	d
SGD_ROLE_SUPER_MANAGER	GmSSL/tools/sdfutil/sgd.h	231;"	d
SGD_ROLE_USER	GmSSL/tools/sdfutil/sgd.h	236;"	d
SGD_RSA	GmSSL/tools/sdfutil/sgd.h	102;"	d
SGD_RSA_ENC	GmSSL/tools/sdfutil/sgd.h	104;"	d
SGD_RSA_SIGN	GmSSL/tools/sdfutil/sgd.h	103;"	d
SGD_RV	GmSSL/tools/sdfutil/sgd.h	/^typedef uint32_t		SGD_RV;$/;"	t
SGD_SECRET_KEY	GmSSL/tools/sdfutil/sgd.h	144;"	d
SGD_SESSION_KEY	GmSSL/tools/sdfutil/sgd.h	255;"	d
SGD_SHA1	GmSSL/tools/sdfutil/sgd.h	112;"	d
SGD_SHA1_RSA	GmSSL/tools/sdfutil/sgd.h	119;"	d
SGD_SHA256	GmSSL/tools/sdfutil/sgd.h	113;"	d
SGD_SHA256_RSA	GmSSL/tools/sdfutil/sgd.h	120;"	d
SGD_SIGNATURE_DATA	GmSSL/tools/sdfutil/sgd.h	153;"	d
SGD_SIG_FROM	GmSSL/tools/sdfutil/sgd.h	122;"	d
SGD_SIG_TO	GmSSL/tools/sdfutil/sgd.h	123;"	d
SGD_SM1	GmSSL/tools/sdfutil/sgd.h	72;"	d
SGD_SM1_CBC	GmSSL/tools/sdfutil/sgd.h	79;"	d
SGD_SM1_CFB	GmSSL/tools/sdfutil/sgd.h	80;"	d
SGD_SM1_ECB	GmSSL/tools/sdfutil/sgd.h	78;"	d
SGD_SM1_MAC	GmSSL/tools/sdfutil/sgd.h	82;"	d
SGD_SM1_OFB	GmSSL/tools/sdfutil/sgd.h	81;"	d
SGD_SM2	GmSSL/tools/sdfutil/sgd.h	105;"	d
SGD_SM2_1	GmSSL/tools/sdfutil/sgd.h	106;"	d
SGD_SM2_2	GmSSL/tools/sdfutil/sgd.h	107;"	d
SGD_SM2_3	GmSSL/tools/sdfutil/sgd.h	108;"	d
SGD_SM3	GmSSL/tools/sdfutil/sgd.h	111;"	d
SGD_SM3_RSA	GmSSL/tools/sdfutil/sgd.h	118;"	d
SGD_SM3_SM2	GmSSL/tools/sdfutil/sgd.h	121;"	d
SGD_SM4	GmSSL/tools/sdfutil/sgd.h	74;"	d
SGD_SM4_CBC	GmSSL/tools/sdfutil/sgd.h	89;"	d
SGD_SM4_CFB	GmSSL/tools/sdfutil/sgd.h	90;"	d
SGD_SM4_ECB	GmSSL/tools/sdfutil/sgd.h	88;"	d
SGD_SM4_MAC	GmSSL/tools/sdfutil/sgd.h	92;"	d
SGD_SM4_OFB	GmSSL/tools/sdfutil/sgd.h	91;"	d
SGD_SOURCE_OF_TIME	GmSSL/tools/sdfutil/sgd.h	197;"	d
SGD_SP_ID	GmSSL/tools/sdfutil/sgd.h	206;"	d
SGD_SP_USER_ID	GmSSL/tools/sdfutil/sgd.h	207;"	d
SGD_SSF33	GmSSL/tools/sdfutil/sgd.h	73;"	d
SGD_SSF33_CBC	GmSSL/tools/sdfutil/sgd.h	84;"	d
SGD_SSF33_CFB	GmSSL/tools/sdfutil/sgd.h	85;"	d
SGD_SSF33_ECB	GmSSL/tools/sdfutil/sgd.h	83;"	d
SGD_SSF33_MAC	GmSSL/tools/sdfutil/sgd.h	87;"	d
SGD_SSF33_OFB	GmSSL/tools/sdfutil/sgd.h	86;"	d
SGD_STATUS_EXCEPTION	GmSSL/tools/sdfutil/sgd.h	314;"	d
SGD_STATUS_INIT	GmSSL/tools/sdfutil/sgd.h	312;"	d
SGD_STATUS_READY	GmSSL/tools/sdfutil/sgd.h	313;"	d
SGD_SUBJECT_COUNTRY_OF_TSSIGNER	GmSSL/tools/sdfutil/sgd.h	200;"	d
SGD_SUBJECT_EMAIL_OF_TSSIGNER	GmSSL/tools/sdfutil/sgd.h	203;"	d
SGD_SUBJECT_ORGNIZATION_OF_TSSIGNER	GmSSL/tools/sdfutil/sgd.h	201;"	d
SGD_SUJECT_CITY_OF_TSSIGNER	GmSSL/tools/sdfutil/sgd.h	202;"	d
SGD_SYSTEM_BACKUP	GmSSL/tools/sdfutil/sgd.h	277;"	d
SGD_SYSTEM_INIT	GmSSL/tools/sdfutil/sgd.h	272;"	d
SGD_SYSTEM_QUERY	GmSSL/tools/sdfutil/sgd.h	276;"	d
SGD_SYSTEM_RESTART	GmSSL/tools/sdfutil/sgd.h	275;"	d
SGD_SYSTEM_RESTORE	GmSSL/tools/sdfutil/sgd.h	278;"	d
SGD_SYSTEM_SHUT	GmSSL/tools/sdfutil/sgd.h	274;"	d
SGD_SYSTEM_START	GmSSL/tools/sdfutil/sgd.h	273;"	d
SGD_TIME_OF_STAMP	GmSSL/tools/sdfutil/sgd.h	192;"	d
SGD_TIME_PRECISION	GmSSL/tools/sdfutil/sgd.h	198;"	d
SGD_TRUE	GmSSL/tools/sdfutil/sgd.h	140;"	d
SGD_UCHAR	GmSSL/tools/sdfutil/sgd.h	/^typedef unsigned char		SGD_UCHAR;$/;"	t
SGD_UINT16	GmSSL/tools/sdfutil/sgd.h	/^typedef uint16_t		SGD_UINT16;$/;"	t
SGD_UINT32	GmSSL/tools/sdfutil/sgd.h	/^typedef uint32_t		SGD_UINT32;$/;"	t
SGD_UINT64	GmSSL/tools/sdfutil/sgd.h	/^typedef uint64_t		SGD_UINT64;$/;"	t
SGD_UINT8	GmSSL/tools/sdfutil/sgd.h	/^typedef uint8_t			SGD_UINT8;$/;"	t
SGD_USER_DATA	GmSSL/tools/sdfutil/sgd.h	159;"	d
SGD_USER_KEYS	GmSSL/tools/sdfutil/sgd.h	253;"	d
SGD_ZUC	GmSSL/tools/sdfutil/sgd.h	75;"	d
SGD_ZUC_EEA3	GmSSL/tools/sdfutil/sgd.h	93;"	d
SGD_ZUC_EIA3	GmSSL/tools/sdfutil/sgd.h	94;"	d
SHA1_BLOCK_SIZE	GmSSL/include/gmssl/sha1.h	63;"	d
SHA1_CTX	GmSSL/include/gmssl/sha1.h	/^} SHA1_CTX;$/;"	t	typeref:struct:__anon39
SHA1_DIGEST_SIZE	GmSSL/include/gmssl/sha1.h	62;"	d
SHA1_IS_BIG_ENDIAN	GmSSL/include/gmssl/sha1.h	60;"	d
SHA1_STATE_WORDS	GmSSL/include/gmssl/sha1.h	64;"	d
SHA224_BLOCK_SIZE	GmSSL/include/gmssl/sha2.h	66;"	d
SHA224_CTX	GmSSL/include/gmssl/sha2.h	/^} SHA224_CTX;$/;"	t	typeref:struct:__anon52
SHA224_DIGEST_SIZE	GmSSL/include/gmssl/sha2.h	65;"	d
SHA224_STATE_WORDS	GmSSL/include/gmssl/sha2.h	67;"	d
SHA256_BLOCK_SIZE	GmSSL/include/gmssl/sha2.h	84;"	d
SHA256_CTX	GmSSL/include/gmssl/sha2.h	/^} SHA256_CTX;$/;"	t	typeref:struct:__anon53
SHA256_DIGEST_SIZE	GmSSL/include/gmssl/sha2.h	83;"	d
SHA256_STATE_WORDS	GmSSL/include/gmssl/sha2.h	85;"	d
SHA2_IS_BIG_ENDIAN	GmSSL/include/gmssl/sha2.h	62;"	d
SHA384_BLOCK_SIZE	GmSSL/include/gmssl/sha2.h	102;"	d
SHA384_CTX	GmSSL/include/gmssl/sha2.h	/^} SHA384_CTX;$/;"	t	typeref:struct:__anon54
SHA384_DIGEST_SIZE	GmSSL/include/gmssl/sha2.h	101;"	d
SHA384_STATE_WORDS	GmSSL/include/gmssl/sha2.h	103;"	d
SHA3_224_BLOCK_SIZE	GmSSL/include/gmssl/sha3.h	76;"	d
SHA3_224_CAPACITY	GmSSL/include/gmssl/sha3.h	71;"	d
SHA3_224_CTX	GmSSL/include/gmssl/sha3.h	/^} SHA3_224_CTX;$/;"	t	typeref:struct:__anon74
SHA3_224_DIGEST_SIZE	GmSSL/include/gmssl/sha3.h	66;"	d
SHA3_256_BLOCK_SIZE	GmSSL/include/gmssl/sha3.h	77;"	d
SHA3_256_CAPACITY	GmSSL/include/gmssl/sha3.h	72;"	d
SHA3_256_CTX	GmSSL/include/gmssl/sha3.h	/^} SHA3_256_CTX;$/;"	t	typeref:struct:__anon75
SHA3_256_DIGEST_SIZE	GmSSL/include/gmssl/sha3.h	67;"	d
SHA3_384_BLOCK_SIZE	GmSSL/include/gmssl/sha3.h	78;"	d
SHA3_384_CAPACITY	GmSSL/include/gmssl/sha3.h	73;"	d
SHA3_384_CTX	GmSSL/include/gmssl/sha3.h	/^} SHA3_384_CTX;$/;"	t	typeref:struct:__anon76
SHA3_384_DIGEST_SIZE	GmSSL/include/gmssl/sha3.h	68;"	d
SHA3_512_BLOCK_SIZE	GmSSL/include/gmssl/sha3.h	79;"	d
SHA3_512_CAPACITY	GmSSL/include/gmssl/sha3.h	74;"	d
SHA3_512_CTX	GmSSL/include/gmssl/sha3.h	/^} SHA3_512_CTX;$/;"	t	typeref:struct:__anon77
SHA3_512_DIGEST_SIZE	GmSSL/include/gmssl/sha3.h	69;"	d
SHA3_KECCAK_P_SIZE	GmSSL/include/gmssl/sha3.h	64;"	d
SHA512_BLOCK_SIZE	GmSSL/include/gmssl/sha2.h	120;"	d
SHA512_CTX	GmSSL/include/gmssl/sha2.h	/^} SHA512_CTX;$/;"	t	typeref:struct:__anon55
SHA512_DIGEST_SIZE	GmSSL/include/gmssl/sha2.h	119;"	d
SHA512_STATE_WORDS	GmSSL/include/gmssl/sha2.h	121;"	d
SHELL	GmSSL/build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHORT	GmSSL/tools/sdfutil/sgd.h	/^typedef INT16			SHORT;$/;"	t
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	291;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	285;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
SIMULATE_ID	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	55;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	314;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
SIMULATE_VERSION_MAJOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	102;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	321;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	102;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	293;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
SIMULATE_VERSION_MINOR	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
SIMULATE_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
SIMULATE_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
SIMULATE_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
SIMULATE_VERSION_PATCH	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
SKF_DEVICE	GmSSL/include/gmssl/skf.h	/^} SKF_DEVICE;$/;"	t	typeref:struct:__anon31
SKF_KEY	GmSSL/include/gmssl/skf.h	/^} SKF_KEY;$/;"	t	typeref:struct:__anon32
SM2_B	GmSSL/src/sm2_alg.c	/^const SM2_BN SM2_B = {$/;"	v
SM2_BN	GmSSL/include/gmssl/sm2.h	/^typedef uint64_t SM2_BN[8];$/;"	t
SM2_CIPHERTEXT	GmSSL/include/gmssl/sm2.h	/^} SM2_CIPHERTEXT;$/;"	t	typeref:struct:__anon50
SM2_DEFAULT_ID	GmSSL/include/gmssl/sm2.h	317;"	d
SM2_DEFAULT_ID_BITS	GmSSL/include/gmssl/sm2.h	319;"	d
SM2_DEFAULT_ID_LENGTH	GmSSL/include/gmssl/sm2.h	318;"	d
SM2_Fn	GmSSL/include/gmssl/sm2.h	/^typedef SM2_BN SM2_Fn;$/;"	t
SM2_Fp	GmSSL/include/gmssl/sm2.h	/^typedef SM2_BN SM2_Fp;$/;"	t
SM2_Fp	GmSSL/src/sm2_alg.c	/^typedef SM2_BN SM2_Fp;$/;"	t	file:
SM2_G	GmSSL/src/sm2_alg.c	/^const SM2_JACOBIAN_POINT *SM2_G = &_SM2_G;$/;"	v
SM2_JACOBIAN_POINT	GmSSL/include/gmssl/sm2.h	/^} SM2_JACOBIAN_POINT;$/;"	t	typeref:struct:__anon44
SM2_KEY	GmSSL/include/gmssl/sm2.h	/^} SM2_KEY;$/;"	t	typeref:struct:__anon46
SM2_MAX_CIPHERTEXT_SIZE	GmSSL/include/gmssl/sm2.h	360;"	d
SM2_MAX_ID_BITS	GmSSL/include/gmssl/sm2.h	320;"	d
SM2_MAX_ID_LENGTH	GmSSL/include/gmssl/sm2.h	321;"	d
SM2_MAX_PLAINTEXT_SIZE	GmSSL/include/gmssl/sm2.h	347;"	d
SM2_MAX_SIGNATURE_SIZE	GmSSL/include/gmssl/sm2.h	309;"	d
SM2_MIN_CIPHERTEXT_SIZE	GmSSL/include/gmssl/sm2.h	359;"	d
SM2_MIN_PLAINTEXT_SIZE	GmSSL/include/gmssl/sm2.h	346;"	d
SM2_MIN_SIGNATURE_SIZE	GmSSL/include/gmssl/sm2.h	308;"	d
SM2_N	GmSSL/src/sm2_alg.c	/^const SM2_BN SM2_N = {$/;"	v
SM2_ONE	GmSSL/src/sm2_alg.c	/^const SM2_BN SM2_ONE = {1,0,0,0,0,0,0,0};$/;"	v
SM2_P	GmSSL/src/sm2_alg.c	/^const SM2_BN SM2_P = {$/;"	v
SM2_POINT	GmSSL/include/gmssl/sm2.h	/^} SM2_POINT;$/;"	t	typeref:struct:__anon45
SM2_POINT_MAX_SIZE	GmSSL/include/gmssl/sm2.h	204;"	d
SM2_PRIVATE_KEY_BUF_SIZE	GmSSL/include/gmssl/sm2.h	240;"	d
SM2_PRIVATE_KEY_DEFAULT_SIZE	GmSSL/include/gmssl/sm2.h	239;"	d
SM2_PRIVATE_KEY_MAX_SIZE	GmSSL/src/sm2_key.c	286;"	d	file:
SM2_SIGNATURE	GmSSL/include/gmssl/sm2.h	/^} SM2_SIGNATURE;$/;"	t	typeref:struct:__anon48
SM2_SIGNATURE_MAX_DER_SIZE	GmSSL/src/sm2_lib.c	232;"	d	file:
SM2_SIGN_CTX	GmSSL/include/gmssl/sm2.h	/^} SM2_SIGN_CTX;$/;"	t	typeref:struct:__anon49
SM2_THREE	GmSSL/src/sm2_alg.c	/^const SM2_BN SM2_THREE = {3,0,0,0,0,0,0,0};$/;"	v
SM2_TWO	GmSSL/src/sm2_alg.c	/^const SM2_BN SM2_TWO = {2,0,0,0,0,0,0,0};$/;"	v
SM2_U_PLUS_ONE	GmSSL/src/sm2_alg.c	/^const SM2_BN SM2_U_PLUS_ONE = {$/;"	v
SM3_BLOCK_SIZE	GmSSL/include/gmssl/sm3.h	63;"	d
SM3_CTX	GmSSL/include/gmssl/sm3.h	/^} SM3_CTX;$/;"	t	typeref:struct:__anon59
SM3_DIGEST_SIZE	GmSSL/include/gmssl/sm3.h	62;"	d
SM3_HMAC_CTX	GmSSL/include/gmssl/sm3.h	/^} SM3_HMAC_CTX;$/;"	t	typeref:struct:__anon60
SM3_HMAC_SIZE	GmSSL/include/gmssl/sm3.h	65;"	d
SM3_IS_BIG_ENDIAN	GmSSL/include/gmssl/sm3.h	60;"	d
SM3_STATE_WORDS	GmSSL/include/gmssl/sm3.h	64;"	d
SM4_BLOCK_SIZE	GmSSL/include/gmssl/sm4.h	61;"	d
SM4_BLOCK_SIZE	GmSSL/sm4.h	61;"	d
SM4_BLOCK_SIZE	GmSSL/src/sm4.h	61;"	d
SM4_CBC_CTX	GmSSL/include/gmssl/sm4.h	/^} SM4_CBC_CTX;$/;"	t	typeref:struct:__anon63
SM4_CBC_CTX	GmSSL/sm4.h	/^} SM4_CBC_CTX;$/;"	t	typeref:struct:__anon79
SM4_CBC_CTX	GmSSL/src/sm4.h	/^} SM4_CBC_CTX;$/;"	t	typeref:struct:__anon83
SM4_CTR_CTX	GmSSL/include/gmssl/sm4.h	/^} SM4_CTR_CTX;$/;"	t	typeref:struct:__anon64
SM4_CTR_CTX	GmSSL/sm4.h	/^} SM4_CTR_CTX;$/;"	t	typeref:struct:__anon80
SM4_CTR_CTX	GmSSL/src/sm4.h	/^} SM4_CTR_CTX;$/;"	t	typeref:struct:__anon84
SM4_GCM_IV_DEFAULT_BITS	GmSSL/include/gmssl/sm4.h	92;"	d
SM4_GCM_IV_DEFAULT_BITS	GmSSL/sm4.h	92;"	d
SM4_GCM_IV_DEFAULT_BITS	GmSSL/src/sm4.h	92;"	d
SM4_GCM_IV_DEFAULT_SIZE	GmSSL/include/gmssl/sm4.h	93;"	d
SM4_GCM_IV_DEFAULT_SIZE	GmSSL/sm4.h	93;"	d
SM4_GCM_IV_DEFAULT_SIZE	GmSSL/src/sm4.h	93;"	d
SM4_GCM_IV_MAX_SIZE	GmSSL/include/gmssl/sm4.h	91;"	d
SM4_GCM_IV_MAX_SIZE	GmSSL/sm4.h	91;"	d
SM4_GCM_IV_MAX_SIZE	GmSSL/src/sm4.h	91;"	d
SM4_GCM_IV_MIN_SIZE	GmSSL/include/gmssl/sm4.h	90;"	d
SM4_GCM_IV_MIN_SIZE	GmSSL/sm4.h	90;"	d
SM4_GCM_IV_MIN_SIZE	GmSSL/src/sm4.h	90;"	d
SM4_GCM_MAX_AAD_SIZE	GmSSL/include/gmssl/sm4.h	96;"	d
SM4_GCM_MAX_AAD_SIZE	GmSSL/sm4.h	96;"	d
SM4_GCM_MAX_AAD_SIZE	GmSSL/src/sm4.h	96;"	d
SM4_GCM_MAX_PLAINTEXT_SIZE	GmSSL/include/gmssl/sm4.h	99;"	d
SM4_GCM_MAX_PLAINTEXT_SIZE	GmSSL/sm4.h	99;"	d
SM4_GCM_MAX_PLAINTEXT_SIZE	GmSSL/src/sm4.h	99;"	d
SM4_GCM_MIN_AAD_SIZE	GmSSL/include/gmssl/sm4.h	95;"	d
SM4_GCM_MIN_AAD_SIZE	GmSSL/sm4.h	95;"	d
SM4_GCM_MIN_AAD_SIZE	GmSSL/src/sm4.h	95;"	d
SM4_GCM_MIN_PLAINTEXT_SIZE	GmSSL/include/gmssl/sm4.h	98;"	d
SM4_GCM_MIN_PLAINTEXT_SIZE	GmSSL/sm4.h	98;"	d
SM4_GCM_MIN_PLAINTEXT_SIZE	GmSSL/src/sm4.h	98;"	d
SM4_KEY	GmSSL/include/gmssl/sm4.h	/^} SM4_KEY;$/;"	t	typeref:struct:__anon62
SM4_KEY	GmSSL/sm4.h	/^} SM4_KEY;$/;"	t	typeref:struct:__anon78
SM4_KEY	GmSSL/src/sm4.h	/^} SM4_KEY;$/;"	t	typeref:struct:__anon82
SM4_KEY_SIZE	GmSSL/include/gmssl/sm4.h	60;"	d
SM4_KEY_SIZE	GmSSL/sm4.h	60;"	d
SM4_KEY_SIZE	GmSSL/src/sm4.h	60;"	d
SM4_MODE_CBC	GmSSL/tools/sm4.c	57;"	d	file:
SM4_MODE_CTR	GmSSL/tools/sm4.c	58;"	d	file:
SM4_NUM_ROUNDS	GmSSL/include/gmssl/sm4.h	62;"	d
SM4_NUM_ROUNDS	GmSSL/sm4.h	62;"	d
SM4_NUM_ROUNDS	GmSSL/src/sm4.h	62;"	d
SM4_S	GmSSL/sm4_common.c	/^const uint8_t SM4_S[256] = {$/;"	v
SM4_S	GmSSL/src/sm4_common.c	/^const uint8_t SM4_S[256] = {$/;"	v
SM4_T	GmSSL/sm4_common.c	/^const uint32_t SM4_T[256] = {$/;"	v
SM4_T	GmSSL/src/sm4_common.c	/^const uint32_t SM4_T[256] = {$/;"	v
SM9_ALPHA1	GmSSL/src/sm9_alg.c	/^static const sm9_fp_t SM9_ALPHA1 = {0x377b698b, 0xa91d8354, 0x0ddd04ed, 0x47c5c86e, 0x9c086749, 0x843c6cfa, 0xe5720bdb, 0x3f23ea58};$/;"	v	file:
SM9_ALPHA2	GmSSL/src/sm9_alg.c	/^static const sm9_fp_t SM9_ALPHA2 = {0x7be65334, 0xd5fc1196, 0x4f8b78f4, 0x78027235, 0x02a3a6f2, 0xf3000000, 0x0,        0x0       };$/;"	v	file:
SM9_ALPHA3	GmSSL/src/sm9_alg.c	/^static const sm9_fp_t SM9_ALPHA3 = {0xda24d011, 0xf5b21fd3, 0x06dc5177, 0x9f9d4118, 0xee0baf15, 0xf55acc93, 0xdc0a3f2c, 0x6c648de5};$/;"	v	file:
SM9_ALPHA4	GmSSL/src/sm9_alg.c	/^static const sm9_fp_t SM9_ALPHA4 = {0x7be65333, 0xd5fc1196, 0x4f8b78f4, 0x78027235, 0x02a3a6f2, 0xf3000000, 0x0,        0x0       };$/;"	v	file:
SM9_ALPHA5	GmSSL/src/sm9_alg.c	/^static const sm9_fp_t SM9_ALPHA5 = {0xa2a96686, 0x4c949c7f, 0xf8ff4c8a, 0x57d778a9, 0x520347cc, 0x711e5f99, 0xf6983351, 0x2d40a38c};$/;"	v	file:
SM9_BETA	GmSSL/src/sm9_alg.c	/^static const sm9_fp2_t SM9_BETA = {{0xda24d011, 0xf5b21fd3, 0x06dc5177, 0x9f9d4118, 0xee0baf15, 0xf55acc93, 0xdc0a3f2c, 0x6c648de5}, {0}};$/;"	v	file:
SM9_FIVE	GmSSL/src/sm9_alg.c	/^static const sm9_bn_t SM9_FIVE  = {5,0,0,0,0,0,0,0};$/;"	v	file:
SM9_FP2_5U	GmSSL/src/sm9_alg.c	/^static const sm9_fp2_t SM9_FP2_5U    = {{0,0,0,0,0,0,0,0},{5,0,0,0,0,0,0,0}};$/;"	v	file:
SM9_FP2_ONE	GmSSL/src/sm9_alg.c	/^static const sm9_fp2_t SM9_FP2_ONE  = {{1,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}};$/;"	v	file:
SM9_FP2_U	GmSSL/src/sm9_alg.c	/^static const sm9_fp2_t SM9_FP2_U    = {{0,0,0,0,0,0,0,0},{1,0,0,0,0,0,0,0}};$/;"	v	file:
SM9_FP2_ZERO	GmSSL/src/sm9_alg.c	/^static const sm9_fp2_t SM9_FP2_ZERO = {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}};$/;"	v	file:
SM9_FP4_ONE	GmSSL/src/sm9_alg.c	/^static const sm9_fp4_t SM9_FP4_ONE = {{{1,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}}, {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}}};$/;"	v	file:
SM9_FP4_U	GmSSL/src/sm9_alg.c	/^static const sm9_fp4_t SM9_FP4_U = {{{0,0,0,0,0,0,0,0},{1,0,0,0,0,0,0,0}}, {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}}};$/;"	v	file:
SM9_FP4_V	GmSSL/src/sm9_alg.c	/^static const sm9_fp4_t SM9_FP4_V = {{{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}}, {{1,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}}};$/;"	v	file:
SM9_FP4_ZERO	GmSSL/src/sm9_alg.c	/^static const sm9_fp4_t SM9_FP4_ZERO = {{{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}}, {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}}};$/;"	v	file:
SM9_MU	GmSSL/src/sm9_alg.c	/^static const sm9_bn_t SM9_MU = {0xd5c22146, 0x71188f90, 0x1e36081c, 0xf2665f6d, 0xdcd1312a, 0x55f73aeb, 0xeb5759a6, 0x167980e0b};$/;"	v	file:
SM9_N	GmSSL/src/sm9_alg.c	/^static const sm9_bn_t SM9_N = {0xd69ecf25, 0xe56ee19c, 0x18ea8bee, 0x49f2934b, 0xf58ec744, 0xd603ab4f, 0x02a3a6f1, 0xb6400000};$/;"	v	file:
SM9_ONE	GmSSL/src/sm9_alg.c	/^static const sm9_bn_t SM9_ONE   = {1,0,0,0,0,0,0,0};$/;"	v	file:
SM9_P	GmSSL/src/sm9_alg.c	/^static const sm9_bn_t SM9_P = {0xe351457d, 0xe56f9b27, 0x1a7aeedb, 0x21f2934b, 0xf58ec745, 0xd603ab4f, 0x02a3a6f1, 0xb6400000};$/;"	v	file:
SM9_P1	GmSSL/src/sm9_alg.c	/^static const sm9_point_t *SM9_P1 = &_SM9_P1;$/;"	v	file:
SM9_P2	GmSSL/src/sm9_alg.c	/^static const sm9_twist_point_t *SM9_P2 = &_SM9_P2;$/;"	v	file:
SM9_P_MINUS_ONE	GmSSL/src/sm9_alg.c	/^static const sm9_bn_t SM9_P_MINUS_ONE = {0xe351457c, 0xe56f9b27, 0x1a7aeedb, 0x21f2934b, 0xf58ec745, 0xd603ab4f, 0x02a3a6f1, 0xb6400000};$/;"	v	file:
SM9_Ppubs	GmSSL/src/sm9_alg.c	/^static const sm9_twist_point_t *SM9_Ppubs = &_SM9_Ppubs;$/;"	v	file:
SM9_TWO	GmSSL/src/sm9_alg.c	/^static const sm9_bn_t SM9_TWO   = {2,0,0,0,0,0,0,0};$/;"	v	file:
SM9_ZERO	GmSSL/src/sm9_alg.c	/^static const sm9_bn_t SM9_ZERO  = {0,0,0,0,0,0,0,0};$/;"	v	file:
SMS4_NUM_ROUNDS_BS	sm4_bs.h	2;"	d
SMS4_encrypt_bs	sm4_bs.c	/^void SMS4_encrypt_bs(sms4_key_t_bs *key,unsigned long long *INh,unsigned long long *INl,unsigned long long *OUTh,unsigned long long *OUTl)$/;"	f	signature:(sms4_key_t_bs *key,unsigned long long *INh,unsigned long long *INl,unsigned long long *OUTh,unsigned long long *OUTl)
SMS4_encrypt_bs	sm4_bs.h	/^void SMS4_encrypt_bs(sms4_key_t_bs *key,unsigned long long *INh,unsigned long long *INl,unsigned long long *OUTh,unsigned long long *OUTl);$/;"	p	signature:(sms4_key_t_bs *key,unsigned long long *INh,unsigned long long *INl,unsigned long long *OUTh,unsigned long long *OUTl)
STRINGIFY	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	417;"	d	file:
STRINGIFY	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	402;"	d	file:
STRINGIFY_HELPER	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
STRINGIFY_HELPER	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
S_BOX_bs	sm4_bs.c	/^void S_BOX_bs(unsigned long long cinh,unsigned long long cinl,unsigned long long *thp,unsigned long long *tlp)$/;"	f	signature:(unsigned long long cinh,unsigned long long cinl,unsigned long long *thp,unsigned long long *tlp)
S_Box	oSM4.c	/^const uint8_t S_Box[256] = {$/;"	v
S_box	oSM4.c	/^uint8_t S_box[16][16] =$/;"	v
S_inv	GmSSL/src/aes.c	/^static const uint8_t S_inv[256] = {$/;"	v	file:
Sbox	baseSM4.c	/^u8 Sbox[256] = {$/;"	v
Sigma0	GmSSL/src/sha256.c	56;"	d	file:
Sigma0	GmSSL/src/sha512.c	130;"	d	file:
Sigma1	GmSSL/src/sha256.c	57;"	d	file:
Sigma1	GmSSL/src/sha512.c	131;"	d	file:
StandardVersion	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int StandardVersion;$/;"	m	struct:DeviceInfo_st	access:public
SymAlgAbility	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int SymAlgAbility;$/;"	m	struct:DeviceInfo_st	access:public
T	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 T;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
T	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 T[4];$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
T	GmSSL/tests/aestest.c	/^	char *T;$/;"	m	struct:__anon11	file:	access:public
T	GmSSL/tests/gcmtest.c	/^	char *T;$/;"	m	struct:__anon7	file:	access:public
T00	GmSSL/src/sm3.c	95;"	d	file:
T16	GmSSL/src/sm3.c	96;"	d	file:
TEST1	GmSSL/tests/sha224test.c	57;"	d	file:
TEST1	GmSSL/tests/sha256test.c	58;"	d	file:
TEST1	GmSSL/tests/sha384test.c	58;"	d	file:
TEST1	GmSSL/tests/sha512test.c	58;"	d	file:
TEST2	GmSSL/tests/sha224test.c	58;"	d	file:
TEST2	GmSSL/tests/sha256test.c	59;"	d	file:
TEST2	GmSSL/tests/sha384test.c	59;"	d	file:
TEST2	GmSSL/tests/sha512test.c	59;"	d	file:
TEST3	GmSSL/tests/sha224test.c	59;"	d	file:
TEST3	GmSSL/tests/sha256test.c	60;"	d	file:
TEST3	GmSSL/tests/sha384test.c	61;"	d	file:
TEST3	GmSSL/tests/sha512test.c	61;"	d	file:
TEST4	GmSSL/tests/sha224test.c	60;"	d	file:
TEST4	GmSSL/tests/sha256test.c	61;"	d	file:
TEST4	GmSSL/tests/sha384test.c	62;"	d	file:
TEST4	GmSSL/tests/sha512test.c	62;"	d	file:
TEST5	GmSSL/tests/sha224test.c	61;"	d	file:
TEST5	GmSSL/tests/sha256test.c	62;"	d	file:
TEST5	GmSSL/tests/sha384test.c	63;"	d	file:
TEST5	GmSSL/tests/sha512test.c	63;"	d	file:
TEST6	GmSSL/tests/sha224test.c	62;"	d	file:
TEST6	GmSSL/tests/sha256test.c	63;"	d	file:
TEST6	GmSSL/tests/sha384test.c	64;"	d	file:
TEST6	GmSSL/tests/sha512test.c	64;"	d	file:
TEST7	GmSSL/tests/sha224test.c	63;"	d	file:
TEST7	GmSSL/tests/sha256test.c	64;"	d	file:
TEST7	GmSSL/tests/sha384test.c	65;"	d	file:
TEST7	GmSSL/tests/sha512test.c	65;"	d	file:
TLCP_VERSION_MAJOR	GmSSL/include/gmssl/tls.h	90;"	d
TLCP_VERSION_MINOR	GmSSL/include/gmssl/tls.h	91;"	d
TLCP_cipher_ecc_sm4_cbc_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_ecc_sm4_cbc_sm3		= 0xe013,$/;"	e	enum:__anon15
TLCP_cipher_ecc_sm4_gcm_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_ecc_sm4_gcm_sm3		= 0xe053,$/;"	e	enum:__anon15
TLCP_cipher_ecdhe_sm4_cbc_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_ecdhe_sm4_cbc_sm3		= 0xe011, \/\/ TLCP, TLS 1.2$/;"	e	enum:__anon15
TLCP_cipher_ecdhe_sm4_gcm_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_ecdhe_sm4_gcm_sm3		= 0xe051,$/;"	e	enum:__anon15
TLCP_cipher_ibc_sm4_cbc_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_ibc_sm4_cbc_sm3		= 0xe017,$/;"	e	enum:__anon15
TLCP_cipher_ibc_sm4_gcm_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_ibc_sm4_gcm_sm3		= 0xe057,$/;"	e	enum:__anon15
TLCP_cipher_ibsdh_sm4_cbc_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_ibsdh_sm4_cbc_sm3		= 0xe015,$/;"	e	enum:__anon15
TLCP_cipher_ibsdh_sm4_gcm_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_ibsdh_sm4_gcm_sm3		= 0xe055,$/;"	e	enum:__anon15
TLCP_cipher_rsa_sm4_cbc_sha256	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_rsa_sm4_cbc_sha256		= 0xe01c,$/;"	e	enum:__anon15
TLCP_cipher_rsa_sm4_cbc_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_rsa_sm4_cbc_sm3		= 0xe019,$/;"	e	enum:__anon15
TLCP_cipher_rsa_sm4_gcm_sha256	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_rsa_sm4_gcm_sha256		= 0xe05a,$/;"	e	enum:__anon15
TLCP_cipher_rsa_sm4_gcm_sm3	GmSSL/include/gmssl/tls.h	/^	TLCP_cipher_rsa_sm4_gcm_sm3		= 0xe059,$/;"	e	enum:__anon15
TLS_ALERT_DESCRIPTION	GmSSL/include/gmssl/tls.h	/^} TLS_ALERT_DESCRIPTION;$/;"	t	typeref:enum:__anon27
TLS_ALERT_LEVEL	GmSSL/include/gmssl/tls.h	/^} TLS_ALERT_LEVEL;$/;"	t	typeref:enum:__anon26
TLS_CERTIFICATE_TYPE	GmSSL/include/gmssl/tls.h	/^} TLS_CERTIFICATE_TYPE;$/;"	t	typeref:enum:__anon19
TLS_CHANGE_CIPHER_SPEC_TYPE	GmSSL/include/gmssl/tls.h	/^} TLS_CHANGE_CIPHER_SPEC_TYPE;$/;"	t	typeref:enum:__anon25
TLS_CIPHER_SUITE	GmSSL/include/gmssl/tls.h	/^} TLS_CIPHER_SUITE;$/;"	t	typeref:enum:__anon15
TLS_COMPRESSION_METHOD	GmSSL/include/gmssl/tls.h	/^} TLS_COMPRESSION_METHOD;$/;"	t	typeref:enum:__anon18
TLS_CONNECT	GmSSL/include/gmssl/tls.h	/^} TLS_CONNECT;$/;"	t	typeref:struct:__anon30
TLS_CTX	GmSSL/include/gmssl/tls.h	/^} TLS_CTX;$/;"	t	typeref:struct:__anon28
TLS_CURVE_TYPE	GmSSL/include/gmssl/tls.h	/^} TLS_CURVE_TYPE;$/;"	t	typeref:enum:__anon22
TLS_EC_POINT_FORMAT	GmSSL/include/gmssl/tls.h	/^} TLS_EC_POINT_FORMAT;$/;"	t	typeref:enum:__anon21
TLS_EXTENSION_TYPE	GmSSL/include/gmssl/tls.h	/^} TLS_EXTENSION_TYPE;$/;"	t	typeref:enum:__anon20
TLS_HANDSHAKE_TYPE	GmSSL/include/gmssl/tls.h	/^} TLS_HANDSHAKE_TYPE;$/;"	t	typeref:enum:__anon17
TLS_MAX_CA_NAMES_SIZE	GmSSL/include/gmssl/tls.h	488;"	d
TLS_MAX_CERTIFICATES_SIZE	GmSSL/include/gmssl/tls.h	364;"	d
TLS_MAX_CERTIFICATE_TYPES	GmSSL/include/gmssl/tls.h	487;"	d
TLS_MAX_CERT_SIZE	GmSSL/include/gmssl/tls.h	363;"	d
TLS_MAX_EXTENSIONS_SIZE	GmSSL/include/gmssl/tls.h	362;"	d
TLS_MAX_HANDSHAKES_SIZE	GmSSL/include/gmssl/tls.h	367;"	d
TLS_MAX_RECORD_SIZE	GmSSL/include/gmssl/tls.h	358;"	d
TLS_MAX_SERVER_CERTS_SIZE	GmSSL/include/gmssl/tls.h	365;"	d
TLS_MAX_SIGNATURE_SIZE	GmSSL/include/gmssl/tls.h	360;"	d
TLS_NAMED_CURVE	GmSSL/include/gmssl/tls.h	/^} TLS_NAMED_CURVE;$/;"	t	typeref:enum:__anon23
TLS_RECORD_MAX_DATA_SIZE	GmSSL/include/gmssl/tls.h	355;"	d
TLS_RECORD_MAX_PLAINDATA_SIZE	GmSSL/include/gmssl/tls.h	354;"	d
TLS_RECORD_MAX_SIZE	GmSSL/include/gmssl/tls.h	356;"	d
TLS_RECORD_TYPE	GmSSL/include/gmssl/tls.h	/^} TLS_RECORD_TYPE;$/;"	t	typeref:enum:__anon16
TLS_SESSION	GmSSL/include/gmssl/tls.h	/^} TLS_SESSION;$/;"	t	typeref:struct:__anon29
TLS_SIGNATURE_SCHEME	GmSSL/include/gmssl/tls.h	/^} TLS_SIGNATURE_SCHEME;$/;"	t	typeref:enum:__anon24
TLS_VERSION	GmSSL/include/gmssl/tls.h	/^} TLS_VERSION;$/;"	t	typeref:enum:__anon14
TLS_alert_access_denied	GmSSL/include/gmssl/tls.h	/^	TLS_alert_access_denied		= 49,$/;"	e	enum:__anon27
TLS_alert_bad_certificate	GmSSL/include/gmssl/tls.h	/^	TLS_alert_bad_certificate	= 42,$/;"	e	enum:__anon27
TLS_alert_bad_ibcparam	GmSSL/include/gmssl/tls.h	/^	TLS_alert_bad_ibcparam		= 203,$/;"	e	enum:__anon27
TLS_alert_bad_record_mac	GmSSL/include/gmssl/tls.h	/^	TLS_alert_bad_record_mac	= 20,$/;"	e	enum:__anon27
TLS_alert_certificate_expired	GmSSL/include/gmssl/tls.h	/^	TLS_alert_certificate_expired	= 45,$/;"	e	enum:__anon27
TLS_alert_certificate_revoked	GmSSL/include/gmssl/tls.h	/^	TLS_alert_certificate_revoked	= 44,$/;"	e	enum:__anon27
TLS_alert_certificate_unknown	GmSSL/include/gmssl/tls.h	/^	TLS_alert_certificate_unknown	= 46,$/;"	e	enum:__anon27
TLS_alert_close_notify	GmSSL/include/gmssl/tls.h	/^	TLS_alert_close_notify		= 0,$/;"	e	enum:__anon27
TLS_alert_decode_error	GmSSL/include/gmssl/tls.h	/^	TLS_alert_decode_error		= 50,$/;"	e	enum:__anon27
TLS_alert_decompression_failure	GmSSL/include/gmssl/tls.h	/^	TLS_alert_decompression_failure	= 30,$/;"	e	enum:__anon27
TLS_alert_decrypt_error	GmSSL/include/gmssl/tls.h	/^	TLS_alert_decrypt_error		= 51,$/;"	e	enum:__anon27
TLS_alert_decryption_failed	GmSSL/include/gmssl/tls.h	/^	TLS_alert_decryption_failed	= 21,$/;"	e	enum:__anon27
TLS_alert_export_restriction	GmSSL/include/gmssl/tls.h	/^	TLS_alert_export_restriction	= 60,$/;"	e	enum:__anon27
TLS_alert_handshake_failure	GmSSL/include/gmssl/tls.h	/^	TLS_alert_handshake_failure	= 40,$/;"	e	enum:__anon27
TLS_alert_identity_need	GmSSL/include/gmssl/tls.h	/^	TLS_alert_identity_need		= 205,$/;"	e	enum:__anon27
TLS_alert_illegal_parameter	GmSSL/include/gmssl/tls.h	/^	TLS_alert_illegal_parameter	= 47,$/;"	e	enum:__anon27
TLS_alert_insufficient_security	GmSSL/include/gmssl/tls.h	/^	TLS_alert_insufficient_security	= 71,$/;"	e	enum:__anon27
TLS_alert_internal_error	GmSSL/include/gmssl/tls.h	/^	TLS_alert_internal_error	= 80,$/;"	e	enum:__anon27
TLS_alert_level_fatal	GmSSL/include/gmssl/tls.h	/^	TLS_alert_level_fatal = 2,$/;"	e	enum:__anon26
TLS_alert_level_warning	GmSSL/include/gmssl/tls.h	/^	TLS_alert_level_warning = 1,$/;"	e	enum:__anon26
TLS_alert_no_area	GmSSL/include/gmssl/tls.h	/^	TLS_alert_no_area		= 201,$/;"	e	enum:__anon27
TLS_alert_no_certificate	GmSSL/include/gmssl/tls.h	/^	TLS_alert_no_certificate	= 41,$/;"	e	enum:__anon27
TLS_alert_no_renegotiation	GmSSL/include/gmssl/tls.h	/^	TLS_alert_no_renegotiation	= 100,$/;"	e	enum:__anon27
TLS_alert_protocol_version	GmSSL/include/gmssl/tls.h	/^	TLS_alert_protocol_version	= 70,$/;"	e	enum:__anon27
TLS_alert_record_overflow	GmSSL/include/gmssl/tls.h	/^	TLS_alert_record_overflow	= 22,$/;"	e	enum:__anon27
TLS_alert_unexpected_message	GmSSL/include/gmssl/tls.h	/^	TLS_alert_unexpected_message	= 10,$/;"	e	enum:__anon27
TLS_alert_unknown_ca	GmSSL/include/gmssl/tls.h	/^	TLS_alert_unknown_ca		= 48,$/;"	e	enum:__anon27
TLS_alert_unsupported_areatype	GmSSL/include/gmssl/tls.h	/^	TLS_alert_unsupported_areatype	= 202,$/;"	e	enum:__anon27
TLS_alert_unsupported_certificate	GmSSL/include/gmssl/tls.h	/^	TLS_alert_unsupported_certificate = 43,$/;"	e	enum:__anon27
TLS_alert_unsupported_ibcparam	GmSSL/include/gmssl/tls.h	/^	TLS_alert_unsupported_ibcparam	= 204,$/;"	e	enum:__anon27
TLS_alert_unsupported_site2site	GmSSL/include/gmssl/tls.h	/^	TLS_alert_unsupported_site2site	= 200,$/;"	e	enum:__anon27
TLS_alert_user_canceled	GmSSL/include/gmssl/tls.h	/^	TLS_alert_user_canceled		= 90,$/;"	e	enum:__anon27
TLS_cert_type_dss_ephemeral_dh_RESERVED	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_dss_ephemeral_dh_RESERVED = 6,$/;"	e	enum:__anon19
TLS_cert_type_dss_fixed_dh	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_dss_fixed_dh		= 4,$/;"	e	enum:__anon19
TLS_cert_type_dss_sign	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_dss_sign			= 2,$/;"	e	enum:__anon19
TLS_cert_type_ecdsa_fixed_ecdh	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_ecdsa_fixed_ecdh		= 66,$/;"	e	enum:__anon19
TLS_cert_type_ecdsa_sign	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_ecdsa_sign		= 64, \/\/ also for sm2$/;"	e	enum:__anon19
TLS_cert_type_fortezza_dms_RESERVED	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_fortezza_dms_RESERVED	= 20,$/;"	e	enum:__anon19
TLS_cert_type_gost_sign256	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_gost_sign256		= 67,$/;"	e	enum:__anon19
TLS_cert_type_gost_sign512	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_gost_sign512		= 68,$/;"	e	enum:__anon19
TLS_cert_type_ibc_params	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_ibc_params		= 80,$/;"	e	enum:__anon19
TLS_cert_type_rsa_ephemeral_dh_RESERVED	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_rsa_ephemeral_dh_RESERVED = 5,$/;"	e	enum:__anon19
TLS_cert_type_rsa_fixed_dh	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_rsa_fixed_dh		= 3,$/;"	e	enum:__anon19
TLS_cert_type_rsa_fixed_ecdh	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_rsa_fixed_ecdh		= 65,$/;"	e	enum:__anon19
TLS_cert_type_rsa_sign	GmSSL/include/gmssl/tls.h	/^	TLS_cert_type_rsa_sign			= 1,$/;"	e	enum:__anon19
TLS_change_cipher_spec	GmSSL/include/gmssl/tls.h	/^	TLS_change_cipher_spec = 1,$/;"	e	enum:__anon25
TLS_cipher_aes_128_ccm_8_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_aes_128_ccm_8_sha256		= 0x1305,$/;"	e	enum:__anon15
TLS_cipher_aes_128_ccm_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_aes_128_ccm_sha256		= 0x1304,$/;"	e	enum:__anon15
TLS_cipher_aes_128_gcm_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_aes_128_gcm_sha256		= 0x1301, \/\/ mandatory-to-implement$/;"	e	enum:__anon15
TLS_cipher_aes_256_gcm_sha384	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_aes_256_gcm_sha384		= 0x1302, \/\/ SHOULD implement$/;"	e	enum:__anon15
TLS_cipher_chacha20_poly1305_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_chacha20_poly1305_sha256	= 0x1303, \/\/ SHOULD implement$/;"	e	enum:__anon15
TLS_cipher_empty_renegotiation_info_scsv	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_empty_renegotiation_info_scsv = 0x00ff,$/;"	e	enum:__anon15
TLS_cipher_null_with_null_null	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_null_with_null_null		= 0x0000,$/;"	e	enum:__anon15
TLS_cipher_sm4_ccm_sm3	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_sm4_ccm_sm3			= 0x00c7,$/;"	e	enum:__anon15
TLS_cipher_sm4_gcm_sm3	GmSSL/include/gmssl/tls.h	/^	TLS_cipher_sm4_gcm_sm3			= 0x00c6,$/;"	e	enum:__anon15
TLS_compression_default	GmSSL/include/gmssl/tls.h	/^	TLS_compression_default	= 1,$/;"	e	enum:__anon18
TLS_compression_null	GmSSL/include/gmssl/tls.h	/^	TLS_compression_null	= 0,$/;"	e	enum:__anon18
TLS_curve_brainpoolp256r1	GmSSL/include/gmssl/tls.h	/^	TLS_curve_brainpoolp256r1	= 26,$/;"	e	enum:__anon23
TLS_curve_brainpoolp256r1tls13	GmSSL/include/gmssl/tls.h	/^	TLS_curve_brainpoolp256r1tls13	= 31,$/;"	e	enum:__anon23
TLS_curve_brainpoolp384r1	GmSSL/include/gmssl/tls.h	/^	TLS_curve_brainpoolp384r1	= 27,$/;"	e	enum:__anon23
TLS_curve_brainpoolp384r1tls13	GmSSL/include/gmssl/tls.h	/^	TLS_curve_brainpoolp384r1tls13	= 32,$/;"	e	enum:__anon23
TLS_curve_brainpoolp512r1	GmSSL/include/gmssl/tls.h	/^	TLS_curve_brainpoolp512r1	= 28,$/;"	e	enum:__anon23
TLS_curve_brainpoolp512r1tls13	GmSSL/include/gmssl/tls.h	/^	TLS_curve_brainpoolp512r1tls13	= 33,$/;"	e	enum:__anon23
TLS_curve_secp256k1	GmSSL/include/gmssl/tls.h	/^	TLS_curve_secp256k1		= 22,$/;"	e	enum:__anon23
TLS_curve_secp256r1	GmSSL/include/gmssl/tls.h	/^	TLS_curve_secp256r1		= 23,$/;"	e	enum:__anon23
TLS_curve_secp384r1	GmSSL/include/gmssl/tls.h	/^	TLS_curve_secp384r1		= 24,$/;"	e	enum:__anon23
TLS_curve_secp521r1	GmSSL/include/gmssl/tls.h	/^	TLS_curve_secp521r1		= 25,$/;"	e	enum:__anon23
TLS_curve_sm2p256v1	GmSSL/include/gmssl/tls.h	/^	TLS_curve_sm2p256v1		= 30,\/\/41, \/\/ in gmssl v2, is 30$/;"	e	enum:__anon23
TLS_curve_type_explicit_char2	GmSSL/include/gmssl/tls.h	/^	TLS_curve_type_explicit_char2	= 2,$/;"	e	enum:__anon22
TLS_curve_type_explicit_prime	GmSSL/include/gmssl/tls.h	/^	TLS_curve_type_explicit_prime	= 1,$/;"	e	enum:__anon22
TLS_curve_type_named_curve	GmSSL/include/gmssl/tls.h	/^	TLS_curve_type_named_curve	= 3,$/;"	e	enum:__anon22
TLS_curve_x25519	GmSSL/include/gmssl/tls.h	/^	TLS_curve_x25519		= 29,$/;"	e	enum:__anon23
TLS_curve_x448	GmSSL/include/gmssl/tls.h	/^	TLS_curve_x448			= 99, \/\/30,$/;"	e	enum:__anon23
TLS_extension_TLMSP	GmSSL/include/gmssl/tls.h	/^	TLS_extension_TLMSP			= 36,$/;"	e	enum:__anon20
TLS_extension_TLMSP_delegate	GmSSL/include/gmssl/tls.h	/^	TLS_extension_TLMSP_delegate		= 38,$/;"	e	enum:__anon20
TLS_extension_TLMSP_proxying	GmSSL/include/gmssl/tls.h	/^	TLS_extension_TLMSP_proxying		= 37,$/;"	e	enum:__anon20
TLS_extension_application_layer_protocol_negotiation	GmSSL/include/gmssl/tls.h	/^	TLS_extension_application_layer_protocol_negotiation= 16,$/;"	e	enum:__anon20
TLS_extension_cached_info	GmSSL/include/gmssl/tls.h	/^	TLS_extension_cached_info		= 25,$/;"	e	enum:__anon20
TLS_extension_cert_type	GmSSL/include/gmssl/tls.h	/^	TLS_extension_cert_type			= 9,  \/\/ 这个是支持服务器证书的类型吗？仅仅用CIPHER_SUITE不够吗？$/;"	e	enum:__anon20
TLS_extension_certificate_authorities	GmSSL/include/gmssl/tls.h	/^	TLS_extension_certificate_authorities	= 47,$/;"	e	enum:__anon20
TLS_extension_client_authz	GmSSL/include/gmssl/tls.h	/^	TLS_extension_client_authz		= 7,$/;"	e	enum:__anon20
TLS_extension_client_certificate_type	GmSSL/include/gmssl/tls.h	/^	TLS_extension_client_certificate_type	= 19,$/;"	e	enum:__anon20
TLS_extension_client_certificate_url	GmSSL/include/gmssl/tls.h	/^	TLS_extension_client_certificate_url	= 2,$/;"	e	enum:__anon20
TLS_extension_compress_certificate	GmSSL/include/gmssl/tls.h	/^	TLS_extension_compress_certificate	= 27,$/;"	e	enum:__anon20
TLS_extension_connection_id	GmSSL/include/gmssl/tls.h	/^	TLS_extension_connection_id		= 53,$/;"	e	enum:__anon20
TLS_extension_cookie	GmSSL/include/gmssl/tls.h	/^	TLS_extension_cookie			= 44, \/\/ tls 1.3 mandatory-to-implement$/;"	e	enum:__anon20
TLS_extension_delegated_credentials	GmSSL/include/gmssl/tls.h	/^	TLS_extension_delegated_credentials	= 34,$/;"	e	enum:__anon20
TLS_extension_early_data	GmSSL/include/gmssl/tls.h	/^	TLS_extension_early_data		= 42,$/;"	e	enum:__anon20
TLS_extension_ec_point_formats	GmSSL/include/gmssl/tls.h	/^	TLS_extension_ec_point_formats		= 11, \/\/ 必须支持$/;"	e	enum:__anon20
TLS_extension_encrypt_then_mac	GmSSL/include/gmssl/tls.h	/^	TLS_extension_encrypt_then_mac		= 22, \/\/ 应该支持$/;"	e	enum:__anon20
TLS_extension_extended_master_secret	GmSSL/include/gmssl/tls.h	/^	TLS_extension_extended_master_secret	= 23, \/\/ 这个是什么意思？$/;"	e	enum:__anon20
TLS_extension_external_id_hash	GmSSL/include/gmssl/tls.h	/^	TLS_extension_external_id_hash		= 55,$/;"	e	enum:__anon20
TLS_extension_external_session_id	GmSSL/include/gmssl/tls.h	/^	TLS_extension_external_session_id	= 56,$/;"	e	enum:__anon20
TLS_extension_heartbeat	GmSSL/include/gmssl/tls.h	/^	TLS_extension_heartbeat			= 15,$/;"	e	enum:__anon20
TLS_extension_key_share	GmSSL/include/gmssl/tls.h	/^	TLS_extension_key_share			= 51,$/;"	e	enum:__anon20
TLS_extension_max_fragment_length	GmSSL/include/gmssl/tls.h	/^	TLS_extension_max_fragment_length	= 1,$/;"	e	enum:__anon20
TLS_extension_oid_filters	GmSSL/include/gmssl/tls.h	/^	TLS_extension_oid_filters		= 48,$/;"	e	enum:__anon20
TLS_extension_padding	GmSSL/include/gmssl/tls.h	/^	TLS_extension_padding			= 21,$/;"	e	enum:__anon20
TLS_extension_password_salt	GmSSL/include/gmssl/tls.h	/^	TLS_extension_password_salt		= 31,$/;"	e	enum:__anon20
TLS_extension_post_handshake_auth	GmSSL/include/gmssl/tls.h	/^	TLS_extension_post_handshake_auth	= 49,$/;"	e	enum:__anon20
TLS_extension_pre_shared_key	GmSSL/include/gmssl/tls.h	/^	TLS_extension_pre_shared_key		= 41,$/;"	e	enum:__anon20
TLS_extension_psk_key_exchange_modes	GmSSL/include/gmssl/tls.h	/^	TLS_extension_psk_key_exchange_modes	= 46,$/;"	e	enum:__anon20
TLS_extension_pwd_clear	GmSSL/include/gmssl/tls.h	/^	TLS_extension_pwd_clear			= 30,$/;"	e	enum:__anon20
TLS_extension_pwd_protect	GmSSL/include/gmssl/tls.h	/^	TLS_extension_pwd_protect		= 29,$/;"	e	enum:__anon20
TLS_extension_quic_transport_parameters	GmSSL/include/gmssl/tls.h	/^	TLS_extension_quic_transport_parameters	= 57,$/;"	e	enum:__anon20
TLS_extension_record_size_limit	GmSSL/include/gmssl/tls.h	/^	TLS_extension_record_size_limit		= 28,$/;"	e	enum:__anon20
TLS_extension_renegotiation_info	GmSSL/include/gmssl/tls.h	/^	TLS_extension_renegotiation_info	= 65281,$/;"	e	enum:__anon20
TLS_extension_server_authz	GmSSL/include/gmssl/tls.h	/^	TLS_extension_server_authz		= 8,$/;"	e	enum:__anon20
TLS_extension_server_certificate_type	GmSSL/include/gmssl/tls.h	/^	TLS_extension_server_certificate_type	= 20,$/;"	e	enum:__anon20
TLS_extension_server_name	GmSSL/include/gmssl/tls.h	/^	TLS_extension_server_name		= 0, \/\/ tls 1.3 mandatory-to-implement$/;"	e	enum:__anon20
TLS_extension_session_ticket	GmSSL/include/gmssl/tls.h	/^	TLS_extension_session_ticket		= 35, \/\/ 应该支持$/;"	e	enum:__anon20
TLS_extension_signature_algorithms	GmSSL/include/gmssl/tls.h	/^	TLS_extension_signature_algorithms	= 13, \/\/ \/\/ tls 1.3 mandatory-to-implement$/;"	e	enum:__anon20
TLS_extension_signature_algorithms_cert	GmSSL/include/gmssl/tls.h	/^	TLS_extension_signature_algorithms_cert	= 50, \/\/ tls 1.3 mandatory-to-implement$/;"	e	enum:__anon20
TLS_extension_signed_certificate_timestamp	GmSSL/include/gmssl/tls.h	/^	TLS_extension_signed_certificate_timestamp = 18,$/;"	e	enum:__anon20
TLS_extension_srp	GmSSL/include/gmssl/tls.h	/^	TLS_extension_srp			= 12,$/;"	e	enum:__anon20
TLS_extension_status_request	GmSSL/include/gmssl/tls.h	/^	TLS_extension_status_request		= 5,$/;"	e	enum:__anon20
TLS_extension_status_request_v2	GmSSL/include/gmssl/tls.h	/^	TLS_extension_status_request_v2		= 17,$/;"	e	enum:__anon20
TLS_extension_supported_ekt_ciphers	GmSSL/include/gmssl/tls.h	/^	TLS_extension_supported_ekt_ciphers	= 39,$/;"	e	enum:__anon20
TLS_extension_supported_groups	GmSSL/include/gmssl/tls.h	/^	TLS_extension_supported_groups		= 10, \/\/ 必须支持$/;"	e	enum:__anon20
TLS_extension_supported_versions	GmSSL/include/gmssl/tls.h	/^	TLS_extension_supported_versions	= 43, \/\/ tls 1.3 mandatory-to-implement$/;"	e	enum:__anon20
TLS_extension_ticket_pinning	GmSSL/include/gmssl/tls.h	/^	TLS_extension_ticket_pinning		= 32,$/;"	e	enum:__anon20
TLS_extension_ticket_request	GmSSL/include/gmssl/tls.h	/^	TLS_extension_ticket_request		= 58,$/;"	e	enum:__anon20
TLS_extension_tls_cert_with_extern_psk	GmSSL/include/gmssl/tls.h	/^	TLS_extension_tls_cert_with_extern_psk	= 33,$/;"	e	enum:__anon20
TLS_extension_tls_lts	GmSSL/include/gmssl/tls.h	/^	TLS_extension_tls_lts			= 26,$/;"	e	enum:__anon20
TLS_extension_token_binding	GmSSL/include/gmssl/tls.h	/^	TLS_extension_token_binding		= 24,$/;"	e	enum:__anon20
TLS_extension_transparency_info	GmSSL/include/gmssl/tls.h	/^	TLS_extension_transparency_info		= 52,$/;"	e	enum:__anon20
TLS_extension_truncated_hmac	GmSSL/include/gmssl/tls.h	/^	TLS_extension_truncated_hmac		= 4,$/;"	e	enum:__anon20
TLS_extension_trusted_ca_keys	GmSSL/include/gmssl/tls.h	/^	TLS_extension_trusted_ca_keys		= 3,$/;"	e	enum:__anon20
TLS_extension_use_srtp	GmSSL/include/gmssl/tls.h	/^	TLS_extension_use_srtp			= 14,$/;"	e	enum:__anon20
TLS_extension_user_mapping	GmSSL/include/gmssl/tls.h	/^	TLS_extension_user_mapping		= 6,$/;"	e	enum:__anon20
TLS_handshake_certificate	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_certificate		= 11,$/;"	e	enum:__anon17
TLS_handshake_certificate_request	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_certificate_request	= 13,$/;"	e	enum:__anon17
TLS_handshake_certificate_status	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_certificate_status	= 22,$/;"	e	enum:__anon17
TLS_handshake_certificate_url	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_certificate_url		= 21,$/;"	e	enum:__anon17
TLS_handshake_certificate_verify	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_certificate_verify	= 15,$/;"	e	enum:__anon17
TLS_handshake_client_hello	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_client_hello		= 1,$/;"	e	enum:__anon17
TLS_handshake_client_key_exchange	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_client_key_exchange	= 16,$/;"	e	enum:__anon17
TLS_handshake_compressed_certificate	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_compressed_certificate	= 25,$/;"	e	enum:__anon17
TLS_handshake_ekt_key	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_ekt_key			= 26,$/;"	e	enum:__anon17
TLS_handshake_encrypted_extensions	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_encrypted_extensions	= 8,$/;"	e	enum:__anon17
TLS_handshake_end_of_early_data	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_end_of_early_data		= 5,$/;"	e	enum:__anon17
TLS_handshake_finished	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_finished			= 20,$/;"	e	enum:__anon17
TLS_handshake_hello_request	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_hello_request		= 0,$/;"	e	enum:__anon17
TLS_handshake_hello_retry_request	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_hello_retry_request	= 6,$/;"	e	enum:__anon17
TLS_handshake_hello_verify_request	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_hello_verify_request	= 3,$/;"	e	enum:__anon17
TLS_handshake_key_update	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_key_update		= 24,$/;"	e	enum:__anon17
TLS_handshake_message_hash	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_message_hash		= 254,$/;"	e	enum:__anon17
TLS_handshake_new_session_ticket	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_new_session_ticket	= 4,$/;"	e	enum:__anon17
TLS_handshake_server_hello	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_server_hello		= 2,$/;"	e	enum:__anon17
TLS_handshake_server_hello_done	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_server_hello_done		= 14,$/;"	e	enum:__anon17
TLS_handshake_server_key_exchange	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_server_key_exchange	= 12,$/;"	e	enum:__anon17
TLS_handshake_supplemental_data	GmSSL/include/gmssl/tls.h	/^	TLS_handshake_supplemental_data		= 23,$/;"	e	enum:__anon17
TLS_point_ansix962_compressed_char2	GmSSL/include/gmssl/tls.h	/^	TLS_point_ansix962_compressed_char2 = 2,$/;"	e	enum:__anon21
TLS_point_ansix962_compressed_prime	GmSSL/include/gmssl/tls.h	/^	TLS_point_ansix962_compressed_prime = 1,$/;"	e	enum:__anon21
TLS_point_uncompressed	GmSSL/include/gmssl/tls.h	/^	TLS_point_uncompressed = 0,$/;"	e	enum:__anon21
TLS_record_alert	GmSSL/include/gmssl/tls.h	/^	TLS_record_alert		= 21,$/;"	e	enum:__anon16
TLS_record_application_data	GmSSL/include/gmssl/tls.h	/^	TLS_record_application_data	= 23,$/;"	e	enum:__anon16
TLS_record_change_cipher_spec	GmSSL/include/gmssl/tls.h	/^	TLS_record_change_cipher_spec	= 20,$/;"	e	enum:__anon16
TLS_record_handshake	GmSSL/include/gmssl/tls.h	/^	TLS_record_handshake		= 22,$/;"	e	enum:__anon16
TLS_record_heartbeat	GmSSL/include/gmssl/tls.h	/^	TLS_record_heartbeat		= 24,$/;"	e	enum:__anon16
TLS_record_invalid	GmSSL/include/gmssl/tls.h	/^	TLS_record_invalid		= 0, \/\/ TLS 1.3$/;"	e	enum:__anon16
TLS_record_tls12_cid	GmSSL/include/gmssl/tls.h	/^	TLS_record_tls12_cid		= 25,$/;"	e	enum:__anon16
TLS_sig_ecdsa_brainpoolP256r1tls13_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ecdsa_brainpoolP256r1tls13_sha256 = 0x081A,$/;"	e	enum:__anon24
TLS_sig_ecdsa_brainpoolP384r1tls13_sha384	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ecdsa_brainpoolP384r1tls13_sha384 = 0x081B,$/;"	e	enum:__anon24
TLS_sig_ecdsa_brainpoolP512r1tls13_sha512	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ecdsa_brainpoolP512r1tls13_sha512 = 0x081C,$/;"	e	enum:__anon24
TLS_sig_ecdsa_secp256r1_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ecdsa_secp256r1_sha256	= 0x0403,$/;"	e	enum:__anon24
TLS_sig_ecdsa_secp384r1_sha384	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ecdsa_secp384r1_sha384	= 0x0503,$/;"	e	enum:__anon24
TLS_sig_ecdsa_secp521r1_sha512	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ecdsa_secp521r1_sha512	= 0x0603,$/;"	e	enum:__anon24
TLS_sig_ecdsa_sha1	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ecdsa_sha1		= 0x0203,$/;"	e	enum:__anon24
TLS_sig_ed25519	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ed25519			= 0x0807,$/;"	e	enum:__anon24
TLS_sig_ed448	GmSSL/include/gmssl/tls.h	/^	TLS_sig_ed448			= 0x0808,$/;"	e	enum:__anon24
TLS_sig_rsa_pkcs1_sha1	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pkcs1_sha1		= 0x0201,$/;"	e	enum:__anon24
TLS_sig_rsa_pkcs1_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pkcs1_sha256	= 0x0401,$/;"	e	enum:__anon24
TLS_sig_rsa_pkcs1_sha256_legacy	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pkcs1_sha256_legacy	= 0x0420,$/;"	e	enum:__anon24
TLS_sig_rsa_pkcs1_sha384	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pkcs1_sha384	= 0x0501,$/;"	e	enum:__anon24
TLS_sig_rsa_pkcs1_sha384_legacy	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pkcs1_sha384_legacy	= 0x0520,$/;"	e	enum:__anon24
TLS_sig_rsa_pkcs1_sha512	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pkcs1_sha512	= 0x0601,$/;"	e	enum:__anon24
TLS_sig_rsa_pkcs1_sha512_legacy	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pkcs1_sha512_legacy	= 0x0620,$/;"	e	enum:__anon24
TLS_sig_rsa_pss_pss_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pss_pss_sha256	= 0x0809,$/;"	e	enum:__anon24
TLS_sig_rsa_pss_pss_sha384	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pss_pss_sha384	= 0x080A,$/;"	e	enum:__anon24
TLS_sig_rsa_pss_pss_sha512	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pss_pss_sha512	= 0x080B,$/;"	e	enum:__anon24
TLS_sig_rsa_pss_rsae_sha256	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pss_rsae_sha256	= 0x0804,$/;"	e	enum:__anon24
TLS_sig_rsa_pss_rsae_sha384	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pss_rsae_sha384	= 0x0805,$/;"	e	enum:__anon24
TLS_sig_rsa_pss_rsae_sha512	GmSSL/include/gmssl/tls.h	/^	TLS_sig_rsa_pss_rsae_sha512	= 0x0806,$/;"	e	enum:__anon24
TLS_sig_sm2sig_sm3	GmSSL/include/gmssl/tls.h	/^	TLS_sig_sm2sig_sm3		= 0x0707,\/\/0x0708, \/\/ is 0707 in gmsslv2$/;"	e	enum:__anon24
TLS_version_dtls1	GmSSL/include/gmssl/tls.h	/^	TLS_version_dtls1	= 0xfeff, \/\/ {254, 255}$/;"	e	enum:__anon14
TLS_version_dtls12	GmSSL/include/gmssl/tls.h	/^	TLS_version_dtls12	= 0xfefd, \/\/ {254, 253}$/;"	e	enum:__anon14
TLS_version_ssl2	GmSSL/include/gmssl/tls.h	/^	TLS_version_ssl2	= 0x0200,$/;"	e	enum:__anon14
TLS_version_ssl3	GmSSL/include/gmssl/tls.h	/^	TLS_version_ssl3	= 0x0300,$/;"	e	enum:__anon14
TLS_version_tlcp	GmSSL/include/gmssl/tls.h	/^	TLS_version_tlcp	= 0x0101,$/;"	e	enum:__anon14
TLS_version_tls1	GmSSL/include/gmssl/tls.h	/^	TLS_version_tls1	= 0x0301,$/;"	e	enum:__anon14
TLS_version_tls11	GmSSL/include/gmssl/tls.h	/^	TLS_version_tls11	= 0x0302,$/;"	e	enum:__anon14
TLS_version_tls12	GmSSL/include/gmssl/tls.h	/^	TLS_version_tls12	= 0x0303,$/;"	e	enum:__anon14
TLS_version_tls12_major	GmSSL/include/gmssl/tls.h	/^	TLS_version_tls12_major = 3,$/;"	e	enum:__anon14
TLS_version_tls12_minor	GmSSL/include/gmssl/tls.h	/^	TLS_version_tls12_minor = 3,$/;"	e	enum:__anon14
TLS_version_tls13	GmSSL/include/gmssl/tls.h	/^	TLS_version_tls13	= 0x0304,$/;"	e	enum:__anon14
TRUE	GmSSL/tools/sdfutil/sgd.h	381;"	d
UINT	GmSSL/tools/sdfutil/sgd.h	/^typedef UINT32			UINT;$/;"	t
UINT16	GmSSL/tools/sdfutil/sgd.h	/^typedef unsigned short		UINT16;$/;"	t
UINT32	GmSSL/tools/sdfutil/sgd.h	/^typedef unsigned int		UINT32;$/;"	t
UINT8	GmSSL/tools/sdfutil/sgd.h	/^typedef unsigned char		UINT8;$/;"	t
ULONG	GmSSL/tools/sdfutil/sgd.h	/^typedef UINT32			ULONG;$/;"	t
ULONG	GmSSL/tools/sdfutil/sgd.h	/^typedef unsigned long		ULONG;$/;"	t
USER_TYPE	GmSSL/tools/sdfutil/sgd.h	395;"	d
USHORT	GmSSL/tools/sdfutil/sgd.h	/^typedef UINT16			USHORT;$/;"	t
V	GmSSL/include/gmssl/hash_drbg.h	/^	uint8_t V[HASH_DRBG_MAX_SEED_SIZE];$/;"	m	struct:__anon73	access:public
V0	GmSSL/tests/hash_drbgtest.c	63;"	d	file:
V1	GmSSL/tests/hash_drbgtest.c	68;"	d	file:
Version	GmSSL/tools/sdfutil/sdf.h	/^	unsigned long Version;$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
WORD	GmSSL/tools/sdfutil/sgd.h	/^typedef UINT16			WORD;$/;"	t
WriteObject	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_WriteObject_FuncPtr WriteObject;$/;"	m	struct:sdf_method_st	access:public
X	GmSSL/include/gmssl/sm2.h	/^	SM2_BN X;$/;"	m	struct:__anon44	access:public
X	GmSSL/include/gmssl/sm9.h	/^	sm9_fp2_t X;$/;"	m	struct:__anon43	access:public
X	GmSSL/include/gmssl/sm9.h	/^	sm9_fp_t X;$/;"	m	struct:__anon42	access:public
X509_ALGOR_OPT_NULL_PARAM	GmSSL/src/x509_alg.c	274;"	d	file:
X509_CRL_REASON	GmSSL/include/gmssl/x509_crl.h	/^} X509_CRL_REASON;$/;"	t	typeref:enum:__anon61
X509_DISPLAY_TEXT_MAX_LEN	GmSSL/include/gmssl/x509_str.h	94;"	d
X509_DISPLAY_TEXT_MIN_LEN	GmSSL/include/gmssl/x509_str.h	93;"	d
X509_GENERAL_NAME_CHOICE	GmSSL/include/gmssl/x509_ext.h	/^} X509_GENERAL_NAME_CHOICE;$/;"	t	typeref:enum:__anon58
X509_KU_CRL_SIGN	GmSSL/include/gmssl/x509_ext.h	234;"	d
X509_KU_DATA_ENCIPHERMENT	GmSSL/include/gmssl/x509_ext.h	231;"	d
X509_KU_DECIPHER_ONLY	GmSSL/include/gmssl/x509_ext.h	236;"	d
X509_KU_DIGITAL_SIGNATURE	GmSSL/include/gmssl/x509_ext.h	228;"	d
X509_KU_ENCIPHER_ONLY	GmSSL/include/gmssl/x509_ext.h	235;"	d
X509_KU_KEY_AGREEMENT	GmSSL/include/gmssl/x509_ext.h	232;"	d
X509_KU_KEY_CERT_SIGN	GmSSL/include/gmssl/x509_ext.h	233;"	d
X509_KU_KEY_ENCIPHERMENT	GmSSL/include/gmssl/x509_ext.h	230;"	d
X509_KU_NON_REPUDIATION	GmSSL/include/gmssl/x509_ext.h	229;"	d
X509_MAX_KEY_PURPOSES	GmSSL/include/gmssl/x509_ext.h	463;"	d
X509_MAX_NOTICE_NUMBERS	GmSSL/include/gmssl/x509_ext.h	253;"	d
X509_RF_AA_COMPROMISE	GmSSL/include/gmssl/x509_ext.h	488;"	d
X509_RF_AFFILIATION_CHANGED	GmSSL/include/gmssl/x509_ext.h	483;"	d
X509_RF_CA_COMPROMISE	GmSSL/include/gmssl/x509_ext.h	482;"	d
X509_RF_CERTIFICATE_HOLD	GmSSL/include/gmssl/x509_ext.h	486;"	d
X509_RF_CESSATION_OF_OPERATION	GmSSL/include/gmssl/x509_ext.h	485;"	d
X509_RF_KEY_COMPROMISE	GmSSL/include/gmssl/x509_ext.h	481;"	d
X509_RF_PRIVILEGE_WITHDRAWN	GmSSL/include/gmssl/x509_ext.h	487;"	d
X509_RF_SUPERSEDED	GmSSL/include/gmssl/x509_ext.h	484;"	d
X509_RF_UNUSED	GmSSL/include/gmssl/x509_ext.h	480;"	d
X509_SERIAL_NUMBER_MAX_LEN	GmSSL/include/gmssl/x509.h	217;"	d
X509_SERIAL_NUMBER_MIN_LEN	GmSSL/include/gmssl/x509.h	216;"	d
X509_SUBJECT_KEY_IDENTIFIER_MAX_LEN	GmSSL/include/gmssl/x509_ext.h	214;"	d
X509_SUBJECT_KEY_IDENTIFIER_MIN_LEN	GmSSL/include/gmssl/x509_ext.h	213;"	d
X509_UNIQUE_ID_MAX_LEN	GmSSL/include/gmssl/x509.h	219;"	d
X509_UNIQUE_ID_MIN_LEN	GmSSL/include/gmssl/x509.h	218;"	d
X509_VALIDITY_MAX_DAYS	GmSSL/include/gmssl/x509.h	90;"	d
X509_VALIDITY_MIN_DAYS	GmSSL/include/gmssl/x509.h	89;"	d
X509_Version	GmSSL/include/gmssl/x509.h	/^enum X509_Version {$/;"	g
X509_cr_aa_compromise	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_aa_compromise = 10,$/;"	e	enum:__anon61
X509_cr_affiliation_changed	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_affiliation_changed = 3,$/;"	e	enum:__anon61
X509_cr_ca_compromise	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_ca_compromise = 2 ,$/;"	e	enum:__anon61
X509_cr_certificate_hold	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_certificate_hold = 6,$/;"	e	enum:__anon61
X509_cr_cessation_of_operation	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_cessation_of_operation = 5,$/;"	e	enum:__anon61
X509_cr_key_compromise	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_key_compromise = 1,$/;"	e	enum:__anon61
X509_cr_not_assigned	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_not_assigned = 7,$/;"	e	enum:__anon61
X509_cr_privilege_withdrawn	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_privilege_withdrawn = 9,$/;"	e	enum:__anon61
X509_cr_remove_from_crl	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_remove_from_crl = 8,$/;"	e	enum:__anon61
X509_cr_superseded	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_superseded = 4,$/;"	e	enum:__anon61
X509_cr_unspecified	GmSSL/include/gmssl/x509_crl.h	/^	X509_cr_unspecified = 0,$/;"	e	enum:__anon61
X509_gn_directory_name	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_directory_name = 4,$/;"	e	enum:__anon58
X509_gn_dns_name	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_dns_name = 2,$/;"	e	enum:__anon58
X509_gn_edi_party_name	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_edi_party_name = 5,$/;"	e	enum:__anon58
X509_gn_ip_address	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_ip_address = 7,$/;"	e	enum:__anon58
X509_gn_other_name	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_other_name = 0,$/;"	e	enum:__anon58
X509_gn_registered_id	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_registered_id = 8,$/;"	e	enum:__anon58
X509_gn_rfc822_name	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_rfc822_name = 1,$/;"	e	enum:__anon58
X509_gn_uniform_resource_identifier	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_uniform_resource_identifier = 6,$/;"	e	enum:__anon58
X509_gn_x400_address	GmSSL/include/gmssl/x509_ext.h	/^	X509_gn_x400_address = 3,$/;"	e	enum:__anon58
X509_ub_common_name	GmSSL/include/gmssl/x509.h	120;"	d
X509_ub_locality_name	GmSSL/include/gmssl/x509.h	121;"	d
X509_ub_name	GmSSL/include/gmssl/x509.h	119;"	d
X509_ub_organization_name	GmSSL/include/gmssl/x509.h	123;"	d
X509_ub_organizational_unit_name	GmSSL/include/gmssl/x509.h	124;"	d
X509_ub_pseudonym	GmSSL/include/gmssl/x509.h	127;"	d
X509_ub_serial_number	GmSSL/include/gmssl/x509.h	126;"	d
X509_ub_state_name	GmSSL/include/gmssl/x509.h	122;"	d
X509_ub_title	GmSSL/include/gmssl/x509.h	125;"	d
X509_version_v1	GmSSL/include/gmssl/x509.h	/^	X509_version_v1 = 0,$/;"	e	enum:X509_Version
X509_version_v2	GmSSL/include/gmssl/x509.h	/^	X509_version_v2 = 1,$/;"	e	enum:X509_Version
X509_version_v3	GmSSL/include/gmssl/x509.h	/^	X509_version_v3 = 2,$/;"	e	enum:X509_Version
Y	GmSSL/include/gmssl/sm2.h	/^	SM2_BN Y;$/;"	m	struct:__anon44	access:public
Y	GmSSL/include/gmssl/sm9.h	/^	sm9_fp2_t Y;$/;"	m	struct:__anon43	access:public
Y	GmSSL/include/gmssl/sm9.h	/^	sm9_fp_t Y;$/;"	m	struct:__anon42	access:public
Z	GmSSL/include/gmssl/sm2.h	/^	SM2_BN Z;$/;"	m	struct:__anon44	access:public
Z	GmSSL/include/gmssl/sm9.h	/^	sm9_fp2_t Z;$/;"	m	struct:__anon43	access:public
Z	GmSSL/include/gmssl/sm9.h	/^	sm9_fp_t Z;$/;"	m	struct:__anon42	access:public
ZUC256_D	GmSSL/src/zuc.c	/^static const ZUC_UINT7 ZUC256_D[][16] = {$/;"	v	file:
ZUC256_IV_SIZE	GmSSL/include/gmssl/zuc.h	107;"	d
ZUC256_KEY_SIZE	GmSSL/include/gmssl/zuc.h	106;"	d
ZUC256_MAC128_SIZE	GmSSL/include/gmssl/zuc.h	110;"	d
ZUC256_MAC32_SIZE	GmSSL/include/gmssl/zuc.h	108;"	d
ZUC256_MAC64_SIZE	GmSSL/include/gmssl/zuc.h	109;"	d
ZUC256_MAC_CTX	GmSSL/include/gmssl/zuc.h	/^} ZUC256_MAC_CTX;$/;"	t	typeref:struct:ZUC256_MAC_CTX_st
ZUC256_MAC_CTX_st	GmSSL/include/gmssl/zuc.h	/^typedef struct ZUC256_MAC_CTX_st {$/;"	s
ZUC256_MAC_CTX_st::K0	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 K0[4];$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
ZUC256_MAC_CTX_st::LFSR	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT31 LFSR[16];$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
ZUC256_MAC_CTX_st::R1	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R1;$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
ZUC256_MAC_CTX_st::R2	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R2;$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
ZUC256_MAC_CTX_st::T	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 T[4];$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
ZUC256_MAC_CTX_st::buf	GmSSL/include/gmssl/zuc.h	/^	uint8_t buf[4];$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
ZUC256_MAC_CTX_st::buflen	GmSSL/include/gmssl/zuc.h	/^	int buflen;$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
ZUC256_MAC_CTX_st::macbits	GmSSL/include/gmssl/zuc.h	/^	int macbits;$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
ZUC256_MAKEU31	GmSSL/src/zuc.c	445;"	d	file:
ZUC256_MAX_MAC_SIZE	GmSSL/include/gmssl/zuc.h	112;"	d
ZUC256_MIN_MAC_SIZE	GmSSL/include/gmssl/zuc.h	111;"	d
ZUC256_STATE	GmSSL/include/gmssl/zuc.h	/^typedef ZUC_STATE ZUC256_STATE;$/;"	t
ZUC_BIT	GmSSL/include/gmssl/zuc.h	/^typedef uint32_t ZUC_BIT;$/;"	t
ZUC_BLOCK_SIZE	GmSSL/src/zuc_modes.c	115;"	d	file:
ZUC_CTX	GmSSL/include/gmssl/zuc.h	/^} ZUC_CTX;$/;"	t	typeref:struct:__anon35
ZUC_IV_SIZE	GmSSL/include/gmssl/zuc.h	63;"	d
ZUC_KEY_SIZE	GmSSL/include/gmssl/zuc.h	62;"	d
ZUC_MAC_CTX	GmSSL/include/gmssl/zuc.h	/^} ZUC_MAC_CTX;$/;"	t	typeref:struct:ZUC_MAC_CTX_st
ZUC_MAC_CTX_st	GmSSL/include/gmssl/zuc.h	/^typedef struct ZUC_MAC_CTX_st {$/;"	s
ZUC_MAC_CTX_st::K0	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 K0;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
ZUC_MAC_CTX_st::LFSR	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT31 LFSR[16];$/;"	m	struct:ZUC_MAC_CTX_st	access:public
ZUC_MAC_CTX_st::R1	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R1;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
ZUC_MAC_CTX_st::R2	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R2;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
ZUC_MAC_CTX_st::T	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 T;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
ZUC_MAC_CTX_st::buf	GmSSL/include/gmssl/zuc.h	/^	uint8_t buf[4];$/;"	m	struct:ZUC_MAC_CTX_st	access:public
ZUC_MAC_CTX_st::buflen	GmSSL/include/gmssl/zuc.h	/^	size_t buflen;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
ZUC_MAC_SIZE	GmSSL/include/gmssl/zuc.h	64;"	d
ZUC_STATE	GmSSL/include/gmssl/zuc.h	/^} ZUC_STATE;$/;"	t	typeref:struct:__anon34
ZUC_UINT15	GmSSL/include/gmssl/zuc.h	/^typedef uint32_t ZUC_UINT15;$/;"	t
ZUC_UINT31	GmSSL/include/gmssl/zuc.h	/^typedef uint32_t ZUC_UINT31;$/;"	t
ZUC_UINT32	GmSSL/include/gmssl/zuc.h	/^typedef uint32_t ZUC_UINT32;$/;"	t
ZUC_UINT5	GmSSL/include/gmssl/zuc.h	/^typedef uint32_t ZUC_UINT5;$/;"	t
ZUC_UINT6	GmSSL/include/gmssl/zuc.h	/^typedef uint8_t  ZUC_UINT6;$/;"	t
ZUC_UINT7	GmSSL/src/zuc.c	/^typedef uint8_t ZUC_UINT7;$/;"	t	file:
_SM2_G	GmSSL/src/sm2_alg.c	/^const SM2_JACOBIAN_POINT _SM2_G = {$/;"	v
_SM9_P1	GmSSL/src/sm9_alg.c	/^static const sm9_point_t _SM9_P1 = {$/;"	v	file:
_SM9_P2	GmSSL/src/sm9_alg.c	/^static const sm9_twist_point_t _SM9_P2 = {$/;"	v	file:
_SM9_Ppubs	GmSSL/src/sm9_alg.c	/^static const sm9_twist_point_t _SM9_Ppubs = {$/;"	v	file:
__anon10::count	GmSSL/tests/sha512test.c	/^	size_t count;$/;"	m	struct:__anon10	file:	access:public
__anon10::data	GmSSL/tests/sha512test.c	/^	char *data;$/;"	m	struct:__anon10	file:	access:public
__anon10::dgsthex	GmSSL/tests/sha512test.c	/^	char *dgsthex;$/;"	m	struct:__anon10	file:	access:public
__anon10::length	GmSSL/tests/sha512test.c	/^	size_t length;$/;"	m	struct:__anon10	file:	access:public
__anon11::A	GmSSL/tests/aestest.c	/^	char *A;$/;"	m	struct:__anon11	file:	access:public
__anon11::C	GmSSL/tests/aestest.c	/^	char *C;$/;"	m	struct:__anon11	file:	access:public
__anon11::IV	GmSSL/tests/aestest.c	/^	char *IV;$/;"	m	struct:__anon11	file:	access:public
__anon11::K	GmSSL/tests/aestest.c	/^	char *K;$/;"	m	struct:__anon11	file:	access:public
__anon11::P	GmSSL/tests/aestest.c	/^	char *P;$/;"	m	struct:__anon11	file:	access:public
__anon11::T	GmSSL/tests/aestest.c	/^	char *T;$/;"	m	struct:__anon11	file:	access:public
__anon12::count	GmSSL/tests/sha384test.c	/^	size_t count;$/;"	m	struct:__anon12	file:	access:public
__anon12::data	GmSSL/tests/sha384test.c	/^	char *data;$/;"	m	struct:__anon12	file:	access:public
__anon12::dgsthex	GmSSL/tests/sha384test.c	/^	char *dgsthex;$/;"	m	struct:__anon12	file:	access:public
__anon12::length	GmSSL/tests/sha384test.c	/^	size_t length;$/;"	m	struct:__anon12	file:	access:public
__anon13::dk	GmSSL/tests/pbkdf2test.c	/^	char *dk;$/;"	m	struct:__anon13	file:	access:public
__anon13::dklen	GmSSL/tests/pbkdf2test.c	/^	int dklen;$/;"	m	struct:__anon13	file:	access:public
__anon13::iter	GmSSL/tests/pbkdf2test.c	/^	int iter;$/;"	m	struct:__anon13	file:	access:public
__anon13::pass	GmSSL/tests/pbkdf2test.c	/^	char *pass;$/;"	m	struct:__anon13	file:	access:public
__anon13::salt	GmSSL/tests/pbkdf2test.c	/^	char *salt;$/;"	m	struct:__anon13	file:	access:public
__anon1::rkh	sm4_bs.h	/^	unsigned long long rkh[SMS4_NUM_ROUNDS_BS][4];$/;"	m	struct:__anon1	access:public
__anon1::rkl	sm4_bs.h	/^	unsigned long long rkl[SMS4_NUM_ROUNDS_BS][4];$/;"	m	struct:__anon1	access:public
__anon28::cacerts	GmSSL/include/gmssl/tls.h	/^	uint8_t cacerts[2048];$/;"	m	struct:__anon28	access:public
__anon28::cacertslen	GmSSL/include/gmssl/tls.h	/^	size_t cacertslen;$/;"	m	struct:__anon28	access:public
__anon28::certs	GmSSL/include/gmssl/tls.h	/^	uint8_t certs[4096];$/;"	m	struct:__anon28	access:public
__anon28::certslen	GmSSL/include/gmssl/tls.h	/^	size_t certslen;$/;"	m	struct:__anon28	access:public
__anon28::cipher_suites	GmSSL/include/gmssl/tls.h	/^	int cipher_suites[8];$/;"	m	struct:__anon28	access:public
__anon28::cipher_suits_cnt	GmSSL/include/gmssl/tls.h	/^	size_t cipher_suits_cnt;$/;"	m	struct:__anon28	access:public
__anon28::ex_key	GmSSL/include/gmssl/tls.h	/^	SM2_KEY ex_key;$/;"	m	struct:__anon28	access:public
__anon28::key	GmSSL/include/gmssl/tls.h	/^	SM2_KEY key;$/;"	m	struct:__anon28	access:public
__anon28::protocol_versions	GmSSL/include/gmssl/tls.h	/^	int protocol_versions[4];$/;"	m	struct:__anon28	access:public
__anon28::protocol_versions_cnt	GmSSL/include/gmssl/tls.h	/^	size_t protocol_versions_cnt;$/;"	m	struct:__anon28	access:public
__anon28::shutdown_mode	GmSSL/include/gmssl/tls.h	/^	int shutdown_mode;$/;"	m	struct:__anon28	access:public
__anon29::cipher_suite	GmSSL/include/gmssl/tls.h	/^	int cipher_suite;$/;"	m	struct:__anon29	access:public
__anon29::client_cert_verify_result	GmSSL/include/gmssl/tls.h	/^	int client_cert_verify_result;$/;"	m	struct:__anon29	access:public
__anon29::master_secret	GmSSL/include/gmssl/tls.h	/^	uint8_t master_secret[48];$/;"	m	struct:__anon29	access:public
__anon29::peer_certs	GmSSL/include/gmssl/tls.h	/^	uint8_t peer_certs[1600];$/;"	m	struct:__anon29	access:public
__anon29::peer_certs_len	GmSSL/include/gmssl/tls.h	/^	size_t peer_certs_len;$/;"	m	struct:__anon29	access:public
__anon29::session_id	GmSSL/include/gmssl/tls.h	/^	uint8_t session_id[32];$/;"	m	struct:__anon29	access:public
__anon29::session_id_len	GmSSL/include/gmssl/tls.h	/^	size_t session_id_len;$/;"	m	struct:__anon29	access:public
__anon29::start_time	GmSSL/include/gmssl/tls.h	/^	time_t start_time;$/;"	m	struct:__anon29	access:public
__anon29::timeout_secs	GmSSL/include/gmssl/tls.h	/^	int timeout_secs;$/;"	m	struct:__anon29	access:public
__anon29::version	GmSSL/include/gmssl/tls.h	/^	int version;$/;"	m	struct:__anon29	access:public
__anon2::id	GmSSL/tools/sdfutil/sdf_ext.c	/^	ULONG id;$/;"	m	struct:__anon2	file:	access:public
__anon2::name	GmSSL/tools/sdfutil/sdf_ext.c	/^	char *name;$/;"	m	struct:__anon2	file:	access:public
__anon30::cipher_suite	GmSSL/include/gmssl/tls.h	/^	int cipher_suite;$/;"	m	struct:__anon30	access:public
__anon30::client_cert_verify_result	GmSSL/include/gmssl/tls.h	/^	int client_cert_verify_result;$/;"	m	struct:__anon30	access:public
__anon30::client_certs	GmSSL/include/gmssl/tls.h	/^	uint8_t client_certs[TLS_MAX_CERTIFICATES_SIZE];$/;"	m	struct:__anon30	access:public
__anon30::client_certs_len	GmSSL/include/gmssl/tls.h	/^	size_t client_certs_len;$/;"	m	struct:__anon30	access:public
__anon30::client_seq_num	GmSSL/include/gmssl/tls.h	/^	uint8_t client_seq_num[8];$/;"	m	struct:__anon30	access:public
__anon30::client_write_enc_key	GmSSL/include/gmssl/tls.h	/^	SM4_KEY client_write_enc_key;$/;"	m	struct:__anon30	access:public
__anon30::client_write_iv	GmSSL/include/gmssl/tls.h	/^	uint8_t client_write_iv[12]; \/\/ 同样$/;"	m	struct:__anon30	access:public
__anon30::client_write_key	GmSSL/include/gmssl/tls.h	/^	BLOCK_CIPHER_KEY client_write_key; \/\/ used in tls13.c$/;"	m	struct:__anon30	access:public
__anon30::client_write_mac_ctx	GmSSL/include/gmssl/tls.h	/^	SM3_HMAC_CTX client_write_mac_ctx;$/;"	m	struct:__anon30	access:public
__anon30::do_trace	GmSSL/include/gmssl/tls.h	/^	int do_trace;$/;"	m	struct:__anon30	access:public
__anon30::handshakes	GmSSL/include/gmssl/tls.h	/^	uint8_t handshakes[TLS_MAX_HANDSHAKES_SIZE];$/;"	m	struct:__anon30	access:public
__anon30::handshakes_len	GmSSL/include/gmssl/tls.h	/^	size_t handshakes_len;$/;"	m	struct:__anon30	access:public
__anon30::is_client	GmSSL/include/gmssl/tls.h	/^	int is_client;$/;"	m	struct:__anon30	access:public
__anon30::key_block	GmSSL/include/gmssl/tls.h	/^	uint8_t key_block[96]; \/\/ 这个似乎不应该放在这里$/;"	m	struct:__anon30	access:public
__anon30::master_secret	GmSSL/include/gmssl/tls.h	/^	uint8_t master_secret[48];$/;"	m	struct:__anon30	access:public
__anon30::record	GmSSL/include/gmssl/tls.h	/^	uint8_t record[TLS_MAX_RECORD_SIZE];$/;"	m	struct:__anon30	access:public
__anon30::server_certs	GmSSL/include/gmssl/tls.h	/^	uint8_t server_certs[TLS_MAX_CERTIFICATES_SIZE]; \/\/$/;"	m	struct:__anon30	access:public
__anon30::server_certs_len	GmSSL/include/gmssl/tls.h	/^	size_t server_certs_len;$/;"	m	struct:__anon30	access:public
__anon30::server_seq_num	GmSSL/include/gmssl/tls.h	/^	uint8_t server_seq_num[8];$/;"	m	struct:__anon30	access:public
__anon30::server_write_enc_key	GmSSL/include/gmssl/tls.h	/^	SM4_KEY server_write_enc_key;$/;"	m	struct:__anon30	access:public
__anon30::server_write_iv	GmSSL/include/gmssl/tls.h	/^	uint8_t server_write_iv[12];$/;"	m	struct:__anon30	access:public
__anon30::server_write_key	GmSSL/include/gmssl/tls.h	/^	BLOCK_CIPHER_KEY server_write_key; \/\/ used in tls13.c$/;"	m	struct:__anon30	access:public
__anon30::server_write_mac_ctx	GmSSL/include/gmssl/tls.h	/^	SM3_HMAC_CTX server_write_mac_ctx;$/;"	m	struct:__anon30	access:public
__anon30::session_id	GmSSL/include/gmssl/tls.h	/^	uint8_t session_id[32];$/;"	m	struct:__anon30	access:public
__anon30::session_id_len	GmSSL/include/gmssl/tls.h	/^	size_t session_id_len;$/;"	m	struct:__anon30	access:public
__anon30::sock	GmSSL/include/gmssl/tls.h	/^	int sock;$/;"	m	struct:__anon30	access:public
__anon30::version	GmSSL/include/gmssl/tls.h	/^	int version;$/;"	m	struct:__anon30	access:public
__anon31::firmware_version	GmSSL/include/gmssl/skf.h	/^	uint8_t firmware_version[2];$/;"	m	struct:__anon31	access:public
__anon31::handle	GmSSL/include/gmssl/skf.h	/^	void *handle;$/;"	m	struct:__anon31	access:public
__anon31::hardware_version	GmSSL/include/gmssl/skf.h	/^	uint8_t hardware_version[2];$/;"	m	struct:__anon31	access:public
__anon31::issuer	GmSSL/include/gmssl/skf.h	/^	char issuer[65];$/;"	m	struct:__anon31	access:public
__anon31::label	GmSSL/include/gmssl/skf.h	/^	char label[33];$/;"	m	struct:__anon31	access:public
__anon31::manufacturer	GmSSL/include/gmssl/skf.h	/^	char manufacturer[65];$/;"	m	struct:__anon31	access:public
__anon31::serial	GmSSL/include/gmssl/skf.h	/^	char serial[33];$/;"	m	struct:__anon31	access:public
__anon32::app_handle	GmSSL/include/gmssl/skf.h	/^	void *app_handle;$/;"	m	struct:__anon32	access:public
__anon32::app_name	GmSSL/include/gmssl/skf.h	/^	char app_name[65];$/;"	m	struct:__anon32	access:public
__anon32::container_handle	GmSSL/include/gmssl/skf.h	/^	void *container_handle;$/;"	m	struct:__anon32	access:public
__anon32::container_name	GmSSL/include/gmssl/skf.h	/^	char container_name[65];$/;"	m	struct:__anon32	access:public
__anon32::public_key	GmSSL/include/gmssl/skf.h	/^	SM2_KEY public_key;$/;"	m	struct:__anon32	access:public
__anon33::rk	GmSSL/include/gmssl/aes.h	/^	uint32_t rk[4 * (AES_MAX_ROUNDS + 1)];$/;"	m	struct:__anon33	access:public
__anon33::rounds	GmSSL/include/gmssl/aes.h	/^	size_t rounds;$/;"	m	struct:__anon33	access:public
__anon34::LFSR	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT31 LFSR[16];$/;"	m	struct:__anon34	access:public
__anon34::R1	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R1;$/;"	m	struct:__anon34	access:public
__anon34::R2	GmSSL/include/gmssl/zuc.h	/^	ZUC_UINT32 R2;$/;"	m	struct:__anon34	access:public
__anon35::block	GmSSL/include/gmssl/zuc.h	/^	uint8_t block[4];$/;"	m	struct:__anon35	access:public
__anon35::block_nbytes	GmSSL/include/gmssl/zuc.h	/^	size_t block_nbytes;$/;"	m	struct:__anon35	access:public
__anon35::zuc_state	GmSSL/include/gmssl/zuc.h	/^	ZUC_STATE zuc_state;$/;"	m	struct:__anon35	access:public
__anon36::rk	GmSSL/include/gmssl/des.h	/^	uint64_t rk[DES_ROUNDS];$/;"	m	struct:__anon36	access:public
__anon37::K	GmSSL/include/gmssl/des.h	/^	DES_KEY K[3];$/;"	m	struct:__anon37	access:public
__anon38::d	GmSSL/include/gmssl/chacha20.h	/^	uint32_t d[16];$/;"	m	struct:__anon38	access:public
__anon39::block	GmSSL/include/gmssl/sha1.h	/^	uint8_t block[SHA1_BLOCK_SIZE];$/;"	m	struct:__anon39	access:public
__anon39::nblocks	GmSSL/include/gmssl/sha1.h	/^	uint64_t nblocks;$/;"	m	struct:__anon39	access:public
__anon39::num	GmSSL/include/gmssl/sha1.h	/^	size_t num;$/;"	m	struct:__anon39	access:public
__anon39::state	GmSSL/include/gmssl/sha1.h	/^	uint32_t state[SHA1_STATE_WORDS];$/;"	m	struct:__anon39	access:public
__anon3::std_id	GmSSL/tools/sdfutil/sdf_sansec.c	/^	unsigned int std_id;$/;"	m	struct:__anon3	file:	access:public
__anon3::vendor_id	GmSSL/tools/sdfutil/sdf_sansec.c	/^	unsigned int vendor_id;$/;"	m	struct:__anon3	file:	access:public
__anon40::enc_data	GmSSL/include/gmssl/base64.h	/^    unsigned char enc_data[80];$/;"	m	struct:__anon40	access:public
__anon40::expect_nl	GmSSL/include/gmssl/base64.h	/^    int expect_nl;$/;"	m	struct:__anon40	access:public
__anon40::length	GmSSL/include/gmssl/base64.h	/^    int length;$/;"	m	struct:__anon40	access:public
__anon40::line_num	GmSSL/include/gmssl/base64.h	/^    int line_num;$/;"	m	struct:__anon40	access:public
__anon40::num	GmSSL/include/gmssl/base64.h	/^    int num;$/;"	m	struct:__anon40	access:public
__anon41::description	GmSSL/include/gmssl/asn1.h	/^	char *description;$/;"	m	struct:__anon41	access:public
__anon41::flags	GmSSL/include/gmssl/asn1.h	/^	int flags;$/;"	m	struct:__anon41	access:public
__anon41::name	GmSSL/include/gmssl/asn1.h	/^	char *name;$/;"	m	struct:__anon41	access:public
__anon41::nodes	GmSSL/include/gmssl/asn1.h	/^	uint32_t *nodes;$/;"	m	struct:__anon41	access:public
__anon41::nodes_cnt	GmSSL/include/gmssl/asn1.h	/^	size_t nodes_cnt;$/;"	m	struct:__anon41	access:public
__anon41::oid	GmSSL/include/gmssl/asn1.h	/^	int oid;$/;"	m	struct:__anon41	access:public
__anon42::X	GmSSL/include/gmssl/sm9.h	/^	sm9_fp_t X;$/;"	m	struct:__anon42	access:public
__anon42::Y	GmSSL/include/gmssl/sm9.h	/^	sm9_fp_t Y;$/;"	m	struct:__anon42	access:public
__anon42::Z	GmSSL/include/gmssl/sm9.h	/^	sm9_fp_t Z;$/;"	m	struct:__anon42	access:public
__anon43::X	GmSSL/include/gmssl/sm9.h	/^	sm9_fp2_t X;$/;"	m	struct:__anon43	access:public
__anon43::Y	GmSSL/include/gmssl/sm9.h	/^	sm9_fp2_t Y;$/;"	m	struct:__anon43	access:public
__anon43::Z	GmSSL/include/gmssl/sm9.h	/^	sm9_fp2_t Z;$/;"	m	struct:__anon43	access:public
__anon44::X	GmSSL/include/gmssl/sm2.h	/^	SM2_BN X;$/;"	m	struct:__anon44	access:public
__anon44::Y	GmSSL/include/gmssl/sm2.h	/^	SM2_BN Y;$/;"	m	struct:__anon44	access:public
__anon44::Z	GmSSL/include/gmssl/sm2.h	/^	SM2_BN Z;$/;"	m	struct:__anon44	access:public
__anon45::x	GmSSL/include/gmssl/sm2.h	/^	uint8_t x[32];$/;"	m	struct:__anon45	access:public
__anon45::y	GmSSL/include/gmssl/sm2.h	/^	uint8_t y[32];$/;"	m	struct:__anon45	access:public
__anon46::private_key	GmSSL/include/gmssl/sm2.h	/^	uint8_t private_key[32];$/;"	m	struct:__anon46	access:public
__anon46::public_key	GmSSL/include/gmssl/sm2.h	/^	SM2_POINT public_key;$/;"	m	struct:__anon46	access:public
__anon48::r	GmSSL/include/gmssl/sm2.h	/^	uint8_t r[32];$/;"	m	struct:__anon48	access:public
__anon48::s	GmSSL/include/gmssl/sm2.h	/^	uint8_t s[32];$/;"	m	struct:__anon48	access:public
__anon49::key	GmSSL/include/gmssl/sm2.h	/^	SM2_KEY key;$/;"	m	struct:__anon49	access:public
__anon49::sm3_ctx	GmSSL/include/gmssl/sm2.h	/^	SM3_CTX sm3_ctx;$/;"	m	struct:__anon49	access:public
__anon4::C	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned char C[136];$/;"	m	struct:__anon4	access:public
__anon4::M	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned char M[ECCref_MAX_LEN];$/;"	m	struct:__anon4	access:public
__anon4::clength	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned int  clength;$/;"	m	struct:__anon4	access:public
__anon4::x	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned char x[ECCref_MAX_LEN];$/;"	m	struct:__anon4	access:public
__anon4::y	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned char y[ECCref_MAX_LEN];$/;"	m	struct:__anon4	access:public
__anon50::ciphertext	GmSSL/include/gmssl/sm2.h	/^	uint8_t ciphertext[SM2_MAX_PLAINTEXT_SIZE];$/;"	m	struct:__anon50	access:public
__anon50::ciphertext_size	GmSSL/include/gmssl/sm2.h	/^	uint8_t ciphertext_size;$/;"	m	struct:__anon50	access:public
__anon50::hash	GmSSL/include/gmssl/sm2.h	/^	uint8_t hash[32];$/;"	m	struct:__anon50	access:public
__anon50::point	GmSSL/include/gmssl/sm2.h	/^	SM2_POINT point;$/;"	m	struct:__anon50	access:public
__anon52::block	GmSSL/include/gmssl/sha2.h	/^	uint8_t block[SHA224_BLOCK_SIZE];$/;"	m	struct:__anon52	access:public
__anon52::nblocks	GmSSL/include/gmssl/sha2.h	/^	uint64_t nblocks;$/;"	m	struct:__anon52	access:public
__anon52::num	GmSSL/include/gmssl/sha2.h	/^	int num;$/;"	m	struct:__anon52	access:public
__anon52::state	GmSSL/include/gmssl/sha2.h	/^	uint32_t state[SHA224_STATE_WORDS];$/;"	m	struct:__anon52	access:public
__anon53::block	GmSSL/include/gmssl/sha2.h	/^	uint8_t block[SHA256_BLOCK_SIZE];$/;"	m	struct:__anon53	access:public
__anon53::nblocks	GmSSL/include/gmssl/sha2.h	/^	uint64_t nblocks;$/;"	m	struct:__anon53	access:public
__anon53::num	GmSSL/include/gmssl/sha2.h	/^	int num;$/;"	m	struct:__anon53	access:public
__anon53::state	GmSSL/include/gmssl/sha2.h	/^	uint32_t state[SHA256_STATE_WORDS];$/;"	m	struct:__anon53	access:public
__anon54::block	GmSSL/include/gmssl/sha2.h	/^	uint8_t block[SHA384_BLOCK_SIZE];$/;"	m	struct:__anon54	access:public
__anon54::nblocks	GmSSL/include/gmssl/sha2.h	/^	uint64_t nblocks;$/;"	m	struct:__anon54	access:public
__anon54::num	GmSSL/include/gmssl/sha2.h	/^	int num;$/;"	m	struct:__anon54	access:public
__anon54::state	GmSSL/include/gmssl/sha2.h	/^	uint64_t state[SHA384_STATE_WORDS];$/;"	m	struct:__anon54	access:public
__anon55::block	GmSSL/include/gmssl/sha2.h	/^	uint8_t block[SHA512_BLOCK_SIZE];$/;"	m	struct:__anon55	access:public
__anon55::nblocks	GmSSL/include/gmssl/sha2.h	/^	uint64_t nblocks;$/;"	m	struct:__anon55	access:public
__anon55::num	GmSSL/include/gmssl/sha2.h	/^	int num;$/;"	m	struct:__anon55	access:public
__anon55::state	GmSSL/include/gmssl/sha2.h	/^	uint64_t state[SHA512_STATE_WORDS];$/;"	m	struct:__anon55	access:public
__anon56::hi	GmSSL/include/gmssl/gf128.h	/^	uint64_t hi;$/;"	m	struct:__anon56	access:public
__anon56::lo	GmSSL/include/gmssl/gf128.h	/^	uint64_t lo;$/;"	m	struct:__anon56	access:public
__anon59::block	GmSSL/include/gmssl/sm3.h	/^	uint8_t block[SM3_BLOCK_SIZE];$/;"	m	struct:__anon59	access:public
__anon59::digest	GmSSL/include/gmssl/sm3.h	/^	uint32_t digest[SM3_STATE_WORDS];$/;"	m	struct:__anon59	access:public
__anon59::nblocks	GmSSL/include/gmssl/sm3.h	/^	uint64_t nblocks;$/;"	m	struct:__anon59	access:public
__anon59::num	GmSSL/include/gmssl/sm3.h	/^	size_t num;$/;"	m	struct:__anon59	access:public
__anon5::count	GmSSL/tests/sha224test.c	/^	size_t count;$/;"	m	struct:__anon5	file:	access:public
__anon5::data	GmSSL/tests/sha224test.c	/^	char *data;$/;"	m	struct:__anon5	file:	access:public
__anon5::dgsthex	GmSSL/tests/sha224test.c	/^	char *dgsthex;$/;"	m	struct:__anon5	file:	access:public
__anon5::length	GmSSL/tests/sha224test.c	/^	size_t length;$/;"	m	struct:__anon5	file:	access:public
__anon60::key	GmSSL/include/gmssl/sm3.h	/^	unsigned char key[SM3_BLOCK_SIZE];$/;"	m	struct:__anon60	access:public
__anon60::sm3_ctx	GmSSL/include/gmssl/sm3.h	/^	SM3_CTX sm3_ctx;$/;"	m	struct:__anon60	access:public
__anon62::rk	GmSSL/include/gmssl/sm4.h	/^	uint32_t rk[SM4_NUM_ROUNDS];$/;"	m	struct:__anon62	access:public
__anon63::block	GmSSL/include/gmssl/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon63	access:public
__anon63::block_nbytes	GmSSL/include/gmssl/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon63	access:public
__anon63::iv	GmSSL/include/gmssl/sm4.h	/^	uint8_t iv[SM4_BLOCK_SIZE];$/;"	m	struct:__anon63	access:public
__anon63::sm4_key	GmSSL/include/gmssl/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon63	access:public
__anon64::block	GmSSL/include/gmssl/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon64	access:public
__anon64::block_nbytes	GmSSL/include/gmssl/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon64	access:public
__anon64::ctr	GmSSL/include/gmssl/sm4.h	/^	uint8_t ctr[SM4_BLOCK_SIZE];$/;"	m	struct:__anon64	access:public
__anon64::sm4_key	GmSSL/include/gmssl/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon64	access:public
__anon65::d	GmSSL/include/gmssl/rc4.h	/^	uint8_t d[RC4_STATE_NUM_WORDS];$/;"	m	struct:__anon65	access:public
__anon66::block	GmSSL/include/gmssl/md5.h	/^	uint8_t block[MD5_BLOCK_SIZE];$/;"	m	struct:__anon66	access:public
__anon66::nblocks	GmSSL/include/gmssl/md5.h	/^	uint64_t nblocks;$/;"	m	struct:__anon66	access:public
__anon66::num	GmSSL/include/gmssl/md5.h	/^	size_t num;$/;"	m	struct:__anon66	access:public
__anon66::state	GmSSL/include/gmssl/md5.h	/^	uint32_t state[MD5_STATE_WORDS];$/;"	m	struct:__anon66	access:public
__anon67::device_handle	GmSSL/include/gmssl/sdf.h	/^	void *device_handle;$/;"	m	struct:__anon67	access:public
__anon67::device_issuer	GmSSL/include/gmssl/sdf.h	/^	char device_issuer[41];$/;"	m	struct:__anon67	access:public
__anon67::device_name	GmSSL/include/gmssl/sdf.h	/^	char device_name[17];$/;"	m	struct:__anon67	access:public
__anon67::device_serial	GmSSL/include/gmssl/sdf.h	/^	char device_serial[17];$/;"	m	struct:__anon67	access:public
__anon68::key_index	GmSSL/include/gmssl/sdf.h	/^	int key_index;$/;"	m	struct:__anon68	access:public
__anon68::public_key	GmSSL/include/gmssl/sdf.h	/^	SM2_KEY public_key;$/;"	m	struct:__anon68	access:public
__anon68::session_handle	GmSSL/include/gmssl/sdf.h	/^	void *session_handle;$/;"	m	struct:__anon68	access:public
__anon6::data	GmSSL/tests/hmactest.c	/^	char *data;$/;"	m	struct:__anon6	file:	access:public
__anon6::hmac_sha224	GmSSL/tests/hmactest.c	/^	char *hmac_sha224;$/;"	m	struct:__anon6	file:	access:public
__anon6::hmac_sha256	GmSSL/tests/hmactest.c	/^	char *hmac_sha256;$/;"	m	struct:__anon6	file:	access:public
__anon6::hmac_sha384	GmSSL/tests/hmactest.c	/^	char *hmac_sha384;$/;"	m	struct:__anon6	file:	access:public
__anon6::hmac_sha512	GmSSL/tests/hmactest.c	/^	char *hmac_sha512;$/;"	m	struct:__anon6	file:	access:public
__anon6::key	GmSSL/tests/hmactest.c	/^	char *key;$/;"	m	struct:__anon6	file:	access:public
__anon71::certs	GmSSL/include/gmssl/cms.h	/^	uint8_t *certs;$/;"	m	struct:__anon71	access:public
__anon71::certs_len	GmSSL/include/gmssl/cms.h	/^	size_t certs_len;$/;"	m	struct:__anon71	access:public
__anon71::sign_key	GmSSL/include/gmssl/cms.h	/^	SM2_KEY *sign_key;$/;"	m	struct:__anon71	access:public
__anon73::C	GmSSL/include/gmssl/hash_drbg.h	/^	uint8_t C[HASH_DRBG_MAX_SEED_SIZE];$/;"	m	struct:__anon73	access:public
__anon73::V	GmSSL/include/gmssl/hash_drbg.h	/^	uint8_t V[HASH_DRBG_MAX_SEED_SIZE];$/;"	m	struct:__anon73	access:public
__anon73::digest	GmSSL/include/gmssl/hash_drbg.h	/^	const DIGEST *digest;$/;"	m	struct:__anon73	access:public
__anon73::reseed_counter	GmSSL/include/gmssl/hash_drbg.h	/^	uint64_t reseed_counter;$/;"	m	struct:__anon73	access:public
__anon73::seedlen	GmSSL/include/gmssl/hash_drbg.h	/^	size_t seedlen;$/;"	m	struct:__anon73	access:public
__anon74::A	GmSSL/include/gmssl/sha3.h	/^	uint64_t A[5][5];$/;"	m	struct:__anon74	access:public
__anon74::buf	GmSSL/include/gmssl/sha3.h	/^	uint8_t buf[SHA3_224_BLOCK_SIZE];$/;"	m	struct:__anon74	access:public
__anon74::num	GmSSL/include/gmssl/sha3.h	/^	int num;$/;"	m	struct:__anon74	access:public
__anon75::A	GmSSL/include/gmssl/sha3.h	/^	uint64_t A[5][5];$/;"	m	struct:__anon75	access:public
__anon75::buf	GmSSL/include/gmssl/sha3.h	/^	uint8_t buf[SHA3_256_BLOCK_SIZE];$/;"	m	struct:__anon75	access:public
__anon75::num	GmSSL/include/gmssl/sha3.h	/^	int num;$/;"	m	struct:__anon75	access:public
__anon76::A	GmSSL/include/gmssl/sha3.h	/^	uint64_t A[5][5];$/;"	m	struct:__anon76	access:public
__anon76::buf	GmSSL/include/gmssl/sha3.h	/^	uint8_t buf[SHA3_384_BLOCK_SIZE];$/;"	m	struct:__anon76	access:public
__anon76::num	GmSSL/include/gmssl/sha3.h	/^	int num;$/;"	m	struct:__anon76	access:public
__anon77::A	GmSSL/include/gmssl/sha3.h	/^	uint64_t A[5][5];$/;"	m	struct:__anon77	access:public
__anon77::buf	GmSSL/include/gmssl/sha3.h	/^	uint8_t buf[SHA3_512_BLOCK_SIZE];$/;"	m	struct:__anon77	access:public
__anon77::num	GmSSL/include/gmssl/sha3.h	/^	int num;$/;"	m	struct:__anon77	access:public
__anon78::rk	GmSSL/sm4.h	/^	uint32_t rk[SM4_NUM_ROUNDS];$/;"	m	struct:__anon78	access:public
__anon79::block	GmSSL/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon79	access:public
__anon79::block_nbytes	GmSSL/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon79	access:public
__anon79::iv	GmSSL/sm4.h	/^	uint8_t iv[SM4_BLOCK_SIZE];$/;"	m	struct:__anon79	access:public
__anon79::sm4_key	GmSSL/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon79	access:public
__anon7::A	GmSSL/tests/gcmtest.c	/^	char *A;$/;"	m	struct:__anon7	file:	access:public
__anon7::C	GmSSL/tests/gcmtest.c	/^	char *C;$/;"	m	struct:__anon7	file:	access:public
__anon7::H	GmSSL/tests/gcmtest.c	/^	char *H;$/;"	m	struct:__anon7	file:	access:public
__anon7::T	GmSSL/tests/gcmtest.c	/^	char *T;$/;"	m	struct:__anon7	file:	access:public
__anon80::block	GmSSL/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon80	access:public
__anon80::block_nbytes	GmSSL/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon80	access:public
__anon80::ctr	GmSSL/sm4.h	/^	uint8_t ctr[SM4_BLOCK_SIZE];$/;"	m	struct:__anon80	access:public
__anon80::sm4_key	GmSSL/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon80	access:public
__anon81::display_name	GmSSL/src/digest.c	/^	char *display_name;$/;"	m	struct:__anon81	file:	access:public
__anon81::oid	GmSSL/src/digest.c	/^	int oid;$/;"	m	struct:__anon81	file:	access:public
__anon81::short_name	GmSSL/src/digest.c	/^	char *short_name;$/;"	m	struct:__anon81	file:	access:public
__anon82::rk	GmSSL/src/sm4.h	/^	uint32_t rk[SM4_NUM_ROUNDS];$/;"	m	struct:__anon82	access:public
__anon83::block	GmSSL/src/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon83	access:public
__anon83::block_nbytes	GmSSL/src/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon83	access:public
__anon83::iv	GmSSL/src/sm4.h	/^	uint8_t iv[SM4_BLOCK_SIZE];$/;"	m	struct:__anon83	access:public
__anon83::sm4_key	GmSSL/src/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon83	access:public
__anon84::block	GmSSL/src/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon84	access:public
__anon84::block_nbytes	GmSSL/src/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon84	access:public
__anon84::ctr	GmSSL/src/sm4.h	/^	uint8_t ctr[SM4_BLOCK_SIZE];$/;"	m	struct:__anon84	access:public
__anon84::sm4_key	GmSSL/src/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon84	access:public
__anon85::is_printable_string_only	GmSSL/src/x509_cer.c	/^	int is_printable_string_only;$/;"	m	struct:__anon85	file:	access:public
__anon85::maxlen	GmSSL/src/x509_cer.c	/^	int maxlen;$/;"	m	struct:__anon85	file:	access:public
__anon85::minlen	GmSSL/src/x509_cer.c	/^	int minlen;$/;"	m	struct:__anon85	file:	access:public
__anon85::oid	GmSSL/src/x509_cer.c	/^	int oid;$/;"	m	struct:__anon85	file:	access:public
__anon8::L	GmSSL/tests/hkdftest.c	/^	int L;$/;"	m	struct:__anon8	file:	access:public
__anon8::algor	GmSSL/tests/hkdftest.c	/^	char *algor;$/;"	m	struct:__anon8	file:	access:public
__anon8::ikm	GmSSL/tests/hkdftest.c	/^	char *ikm;$/;"	m	struct:__anon8	file:	access:public
__anon8::info	GmSSL/tests/hkdftest.c	/^	char *info;$/;"	m	struct:__anon8	file:	access:public
__anon8::okm	GmSSL/tests/hkdftest.c	/^	char *okm;$/;"	m	struct:__anon8	file:	access:public
__anon8::prk	GmSSL/tests/hkdftest.c	/^	char *prk;$/;"	m	struct:__anon8	file:	access:public
__anon8::salt	GmSSL/tests/hkdftest.c	/^	char *salt;$/;"	m	struct:__anon8	file:	access:public
__anon9::count	GmSSL/tests/sha256test.c	/^	size_t count;$/;"	m	struct:__anon9	file:	access:public
__anon9::data	GmSSL/tests/sha256test.c	/^	char *data;$/;"	m	struct:__anon9	file:	access:public
__anon9::dgsthex	GmSSL/tests/sha256test.c	/^	char *dgsthex;$/;"	m	struct:__anon9	file:	access:public
__anon9::length	GmSSL/tests/sha256test.c	/^	size_t length;$/;"	m	struct:__anon9	file:	access:public
__has_include	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
__has_include	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	11;"	d	file:
_mm_rotl_epi32	GmSSL/src/sm3.c	58;"	d	file:
_strlen	GmSSL/src/x509_cer.c	/^static size_t _strlen(const char *s) { return s ? strlen(s) : 0; }$/;"	f	file:	signature:(const char *s)
add_round_key	GmSSL/src/aes.c	/^static void add_round_key(uint8_t state[4][4], const uint32_t *W)$/;"	f	file:	signature:(uint8_t state[4][4], const uint32_t *W)
aes128_block_cipher_object	GmSSL/src/block_cipher.c	/^static const BLOCK_CIPHER aes128_block_cipher_object = {$/;"	v	file:
aes128_set_decrypt_key	GmSSL/src/block_cipher.c	/^static int aes128_set_decrypt_key(AES_KEY *aes_key, const uint8_t key[16]) {$/;"	f	file:	signature:(AES_KEY *aes_key, const uint8_t key[16])
aes128_set_encrypt_key	GmSSL/src/block_cipher.c	/^static int aes128_set_encrypt_key(AES_KEY *aes_key, const uint8_t key[16]) {$/;"	f	file:	signature:(AES_KEY *aes_key, const uint8_t key[16])
aes_cbc_decrypt	GmSSL/include/gmssl/aes.h	/^void aes_cbc_decrypt(const AES_KEY *key, const uint8_t iv[AES_BLOCK_SIZE],$/;"	p	signature:(const AES_KEY *key, const uint8_t iv[AES_BLOCK_SIZE], const uint8_t *in, size_t nblocks, uint8_t *out)
aes_cbc_decrypt	GmSSL/src/aes_modes.c	/^void aes_cbc_decrypt(const AES_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const AES_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t nblocks, uint8_t *out)
aes_cbc_encrypt	GmSSL/include/gmssl/aes.h	/^void aes_cbc_encrypt(const AES_KEY *key, const uint8_t iv[AES_BLOCK_SIZE],$/;"	p	signature:(const AES_KEY *key, const uint8_t iv[AES_BLOCK_SIZE], const uint8_t *in, size_t nblocks, uint8_t *out)
aes_cbc_encrypt	GmSSL/src/aes_modes.c	/^void aes_cbc_encrypt(const AES_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const AES_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t nblocks, uint8_t *out)
aes_cbc_padding_decrypt	GmSSL/include/gmssl/aes.h	/^int aes_cbc_padding_decrypt(const AES_KEY *key, const uint8_t iv[AES_BLOCK_SIZE],$/;"	p	signature:(const AES_KEY *key, const uint8_t iv[AES_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
aes_cbc_padding_decrypt	GmSSL/src/aes_modes.c	/^int aes_cbc_padding_decrypt(const AES_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const AES_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
aes_cbc_padding_encrypt	GmSSL/include/gmssl/aes.h	/^int aes_cbc_padding_encrypt(const AES_KEY *key, const uint8_t iv[AES_BLOCK_SIZE],$/;"	p	signature:(const AES_KEY *key, const uint8_t iv[AES_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
aes_cbc_padding_encrypt	GmSSL/src/aes_modes.c	/^int aes_cbc_padding_encrypt(const AES_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const AES_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
aes_ctr_decrypt	GmSSL/include/gmssl/aes.h	101;"	d
aes_ctr_encrypt	GmSSL/include/gmssl/aes.h	/^void aes_ctr_encrypt(const AES_KEY *key, uint8_t ctr[AES_BLOCK_SIZE],$/;"	p	signature:(const AES_KEY *key, uint8_t ctr[AES_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out)
aes_ctr_encrypt	GmSSL/src/aes_modes.c	/^void aes_ctr_encrypt(const AES_KEY *key, uint8_t ctr[16], const uint8_t *in, size_t inlen, uint8_t *out)$/;"	f	signature:(const AES_KEY *key, uint8_t ctr[16], const uint8_t *in, size_t inlen, uint8_t *out)
aes_decrypt	GmSSL/include/gmssl/aes.h	/^void aes_decrypt(const AES_KEY *key, const uint8_t in[AES_BLOCK_SIZE], uint8_t out[AES_BLOCK_SIZE]);$/;"	p	signature:(const AES_KEY *key, const uint8_t in[AES_BLOCK_SIZE], uint8_t out[AES_BLOCK_SIZE])
aes_decrypt	GmSSL/src/aes.c	/^void aes_decrypt(const AES_KEY *aes_key, const uint8_t in[16], uint8_t out[16])$/;"	f	signature:(const AES_KEY *aes_key, const uint8_t in[16], uint8_t out[16])
aes_encrypt	GmSSL/include/gmssl/aes.h	/^void aes_encrypt(const AES_KEY *key, const uint8_t in[AES_BLOCK_SIZE], uint8_t out[AES_BLOCK_SIZE]);$/;"	p	signature:(const AES_KEY *key, const uint8_t in[AES_BLOCK_SIZE], uint8_t out[AES_BLOCK_SIZE])
aes_encrypt	GmSSL/src/aes.c	/^void aes_encrypt(const AES_KEY *key, const uint8_t in[16], uint8_t out[16])$/;"	f	signature:(const AES_KEY *key, const uint8_t in[16], uint8_t out[16])
aes_gcm_decrypt	GmSSL/include/gmssl/aes.h	/^int aes_gcm_decrypt(const AES_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const AES_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
aes_gcm_decrypt	GmSSL/src/aes_modes.c	/^int aes_gcm_decrypt(const AES_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(const AES_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
aes_gcm_encrypt	GmSSL/include/gmssl/aes.h	/^int aes_gcm_encrypt(const AES_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const AES_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
aes_gcm_encrypt	GmSSL/src/aes_modes.c	/^int aes_gcm_encrypt(const AES_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(const AES_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
aes_gcm_tests	GmSSL/tests/aestest.c	/^} aes_gcm_tests[] = {$/;"	v	typeref:struct:__anon11
aes_key	GmSSL/include/gmssl/block_cipher.h	/^		AES_KEY aes_key;$/;"	m	union:BLOCK_CIPHER_KEY::__anon72	access:public
aes_set_decrypt_key	GmSSL/include/gmssl/aes.h	/^int aes_set_decrypt_key(AES_KEY *key, const uint8_t *raw_key, size_t raw_key_len);$/;"	p	signature:(AES_KEY *key, const uint8_t *raw_key, size_t raw_key_len)
aes_set_decrypt_key	GmSSL/src/aes.c	/^int aes_set_decrypt_key(AES_KEY *aes_key, const uint8_t *key, size_t keylen)$/;"	f	signature:(AES_KEY *aes_key, const uint8_t *key, size_t keylen)
aes_set_encrypt_key	GmSSL/include/gmssl/aes.h	/^int aes_set_encrypt_key(AES_KEY *key, const uint8_t *raw_key, size_t raw_key_len);$/;"	p	signature:(AES_KEY *key, const uint8_t *raw_key, size_t raw_key_len)
aes_set_encrypt_key	GmSSL/src/aes.c	/^int aes_set_encrypt_key(AES_KEY *aes_key, const uint8_t *key, size_t keylen)$/;"	f	signature:(AES_KEY *aes_key, const uint8_t *key, size_t keylen)
agreementHandle	GmSSL/tools/sdfutil/sdf_dummy.c	/^static char *agreementHandle = "SDF Agreement Handle";$/;"	v	file:
algor	GmSSL/tests/hkdftest.c	/^	char *algor;$/;"	m	struct:__anon8	file:	access:public
app_handle	GmSSL/include/gmssl/skf.h	/^	void *app_handle;$/;"	m	struct:__anon32	access:public
app_name	GmSSL/include/gmssl/skf.h	/^	char app_name[65];$/;"	m	struct:__anon32	access:public
asn1_any_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_any_from_der(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen); \/\/ 检查输入为TLV$/;"	p	signature:(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen)
asn1_any_from_der	GmSSL/src/asn1.c	/^int asn1_any_from_der(const uint8_t **tlv, size_t *tlvlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **tlv, size_t *tlvlen, const uint8_t **in, size_t *inlen)
asn1_any_tag_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_any_tag_from_der(int *tag, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *tag, const uint8_t **in, size_t *inlen)
asn1_any_tag_from_der	GmSSL/src/asn1.c	/^int asn1_any_tag_from_der(int *tag, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *tag, const uint8_t **in, size_t *inlen)
asn1_any_to_der	GmSSL/include/gmssl/asn1.h	/^int asn1_any_to_der(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen); \/\/ 调用方应保证a,alen为TLV$/;"	p	signature:(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)
asn1_any_to_der	GmSSL/src/asn1.c	/^int asn1_any_to_der(const uint8_t *tlv, size_t tlvlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(const uint8_t *tlv, size_t tlvlen, uint8_t **out, size_t *outlen)
asn1_any_type_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_any_type_from_der(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_any_type_from_der	GmSSL/src/asn1.c	/^int asn1_any_type_from_der(int *tag, const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *tag, const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)
asn1_bit_octets_from_der	GmSSL/include/gmssl/asn1.h	166;"	d
asn1_bit_octets_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_bit_octets_from_der_ex(int tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_bit_octets_from_der_ex	GmSSL/src/asn1.c	/^int asn1_bit_octets_from_der_ex(int tag, const uint8_t **octs, size_t *nocts, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, const uint8_t **octs, size_t *nocts, const uint8_t **in, size_t *inlen)
asn1_bit_octets_to_der	GmSSL/include/gmssl/asn1.h	165;"	d
asn1_bit_octets_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_bit_octets_to_der_ex(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_bit_octets_to_der_ex	GmSSL/src/asn1.c	/^int asn1_bit_octets_to_der_ex(int tag, const uint8_t *octs, size_t nocts, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const uint8_t *octs, size_t nocts, uint8_t **out, size_t *outlen)
asn1_bit_string_from_der	GmSSL/include/gmssl/asn1.h	158;"	d
asn1_bit_string_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_bit_string_from_der_ex(int tag, const uint8_t **d, size_t *nbits, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, const uint8_t **d, size_t *nbits, const uint8_t **in, size_t *inlen)
asn1_bit_string_from_der_ex	GmSSL/src/asn1.c	/^int asn1_bit_string_from_der_ex(int tag, const uint8_t **bits, size_t *nbits, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, const uint8_t **bits, size_t *nbits, const uint8_t **in, size_t *inlen)
asn1_bit_string_to_der	GmSSL/include/gmssl/asn1.h	157;"	d
asn1_bit_string_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_bit_string_to_der_ex(int tag, const uint8_t *d, size_t nbits, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t nbits, uint8_t **out, size_t *outlen)
asn1_bit_string_to_der_ex	GmSSL/src/asn1.c	/^int asn1_bit_string_to_der_ex(int tag, const uint8_t *bits, size_t nbits, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const uint8_t *bits, size_t nbits, uint8_t **out, size_t *outlen)
asn1_bits_from_der	GmSSL/include/gmssl/asn1.h	174;"	d
asn1_bits_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_bits_from_der_ex(int tag, int *bits, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, int *bits, const uint8_t **in, size_t *inlen)
asn1_bits_from_der_ex	GmSSL/src/asn1.c	/^int asn1_bits_from_der_ex(int tag, int *bits, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, int *bits, const uint8_t **in, size_t *inlen)
asn1_bits_print	GmSSL/include/gmssl/asn1.h	/^int asn1_bits_print(FILE *fp, int fmt, int ind, const char *label, const char **names, size_t names_cnt, int bits);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const char **names, size_t names_cnt, int bits)
asn1_bits_print	GmSSL/src/asn1.c	/^int asn1_bits_print(FILE *fp, int fmt, int ind, const char *label, const char **names, size_t names_cnt, int bits)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const char **names, size_t names_cnt, int bits)
asn1_bits_to_der	GmSSL/include/gmssl/asn1.h	173;"	d
asn1_bits_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_bits_to_der_ex(int tag, int bits, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, int bits, uint8_t **out, size_t *outlen)
asn1_bits_to_der_ex	GmSSL/src/asn1.c	/^int asn1_bits_to_der_ex(int tag, int bits, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, int bits, uint8_t **out, size_t *outlen)
asn1_boolean_from_der	GmSSL/include/gmssl/asn1.h	134;"	d
asn1_boolean_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_boolean_from_der_ex(int tag, int *val, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, int *val, const uint8_t **in, size_t *inlen)
asn1_boolean_from_der_ex	GmSSL/src/asn1.c	/^int asn1_boolean_from_der_ex(int tag, int *val, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, int *val, const uint8_t **in, size_t *inlen)
asn1_boolean_from_name	GmSSL/include/gmssl/asn1.h	/^int asn1_boolean_from_name(int *val, const char *name);$/;"	p	signature:(int *val, const char *name)
asn1_boolean_from_name	GmSSL/src/asn1.c	/^int asn1_boolean_from_name(int *val, const char *name)$/;"	f	signature:(int *val, const char *name)
asn1_boolean_name	GmSSL/include/gmssl/asn1.h	/^const char *asn1_boolean_name(int val);$/;"	p	signature:(int val)
asn1_boolean_name	GmSSL/src/asn1.c	/^const char *asn1_boolean_name(int val)$/;"	f	signature:(int val)
asn1_boolean_to_der	GmSSL/include/gmssl/asn1.h	133;"	d
asn1_boolean_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_boolean_to_der_ex(int tag, int val, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, int val, uint8_t **out, size_t *outlen)
asn1_boolean_to_der_ex	GmSSL/src/asn1.c	/^int asn1_boolean_to_der_ex(int tag, int val, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, int val, uint8_t **out, size_t *outlen)
asn1_check	GmSSL/include/gmssl/asn1.h	/^int asn1_check(int expr);$/;"	p	signature:(int expr)
asn1_check	GmSSL/src/asn1.c	/^int asn1_check(int expr)$/;"	f	signature:(int expr)
asn1_data_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_data_from_der(const uint8_t **d, size_t dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **d, size_t dlen, const uint8_t **in, size_t *inlen)
asn1_data_from_der	GmSSL/src/asn1.c	/^int asn1_data_from_der(const uint8_t **data, size_t datalen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **data, size_t datalen, const uint8_t **in, size_t *inlen)
asn1_data_to_der	GmSSL/include/gmssl/asn1.h	/^int asn1_data_to_der(const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_data_to_der	GmSSL/src/asn1.c	/^int asn1_data_to_der(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)$/;"	f	signature:(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)
asn1_enumerated_from_der	GmSSL/include/gmssl/asn1.h	208;"	d
asn1_enumerated_from_der_ex	GmSSL/include/gmssl/asn1.h	206;"	d
asn1_enumerated_to_der	GmSSL/include/gmssl/asn1.h	207;"	d
asn1_enumerated_to_der_ex	GmSSL/include/gmssl/asn1.h	205;"	d
asn1_explicit_from_der	GmSSL/include/gmssl/asn1.h	282;"	d
asn1_explicit_header_to_der	GmSSL/include/gmssl/asn1.h	279;"	d
asn1_explicit_to_der	GmSSL/include/gmssl/asn1.h	281;"	d
asn1_generalized_time_from_der	GmSSL/include/gmssl/asn1.h	251;"	d
asn1_generalized_time_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_generalized_time_from_der_ex(int tag, time_t *tv, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, time_t *tv, const uint8_t **in, size_t *inlen)
asn1_generalized_time_from_der_ex	GmSSL/src/asn1.c	/^int asn1_generalized_time_from_der_ex(int tag, time_t *t, const uint8_t **pin, size_t *pinlen)$/;"	f	signature:(int tag, time_t *t, const uint8_t **pin, size_t *pinlen)
asn1_generalized_time_to_der	GmSSL/include/gmssl/asn1.h	250;"	d
asn1_generalized_time_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_generalized_time_to_der_ex(int tag, time_t tv, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, time_t tv, uint8_t **out, size_t *outlen)
asn1_generalized_time_to_der_ex	GmSSL/src/asn1.c	/^int asn1_generalized_time_to_der_ex(int tag, time_t a, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, time_t a, uint8_t **out, size_t *outlen)
asn1_header_to_der	GmSSL/include/gmssl/asn1.h	/^int asn1_header_to_der(int tag, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, size_t dlen, uint8_t **out, size_t *outlen)
asn1_header_to_der	GmSSL/src/asn1.c	/^int asn1_header_to_der(int tag, size_t len, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, size_t len, uint8_t **out, size_t *outlen)
asn1_ia5_string_check	GmSSL/include/gmssl/asn1.h	/^int asn1_ia5_string_check(const char *d, size_t dlen);$/;"	p	signature:(const char *d, size_t dlen)
asn1_ia5_string_check	GmSSL/src/asn1.c	/^int asn1_ia5_string_check(const char *a, size_t alen)$/;"	f	signature:(const char *a, size_t alen)
asn1_ia5_string_from_der	GmSSL/include/gmssl/asn1.h	232;"	d
asn1_ia5_string_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_ia5_string_from_der_ex(int tag, const char **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, const char **d, size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_ia5_string_from_der_ex	GmSSL/src/asn1.c	/^int asn1_ia5_string_from_der_ex(int tag, const char **a, size_t *alen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, const char **a, size_t *alen, const uint8_t **in, size_t *inlen)
asn1_ia5_string_to_der	GmSSL/include/gmssl/asn1.h	231;"	d
asn1_ia5_string_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_ia5_string_to_der_ex(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_ia5_string_to_der_ex	GmSSL/src/asn1.c	/^int asn1_ia5_string_to_der_ex(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_implicit_bit_octets_from_der	GmSSL/include/gmssl/asn1.h	168;"	d
asn1_implicit_bit_octets_to_der	GmSSL/include/gmssl/asn1.h	167;"	d
asn1_implicit_bit_string_from_der	GmSSL/include/gmssl/asn1.h	160;"	d
asn1_implicit_bit_string_to_der	GmSSL/include/gmssl/asn1.h	159;"	d
asn1_implicit_bits_from_der	GmSSL/include/gmssl/asn1.h	176;"	d
asn1_implicit_bits_to_der	GmSSL/include/gmssl/asn1.h	175;"	d
asn1_implicit_boolean_from_der	GmSSL/include/gmssl/asn1.h	136;"	d
asn1_implicit_boolean_to_der	GmSSL/include/gmssl/asn1.h	135;"	d
asn1_implicit_enumerated_from_der	GmSSL/include/gmssl/asn1.h	210;"	d
asn1_implicit_enumerated_to_der	GmSSL/include/gmssl/asn1.h	209;"	d
asn1_implicit_from_der	GmSSL/include/gmssl/asn1.h	266;"	d
asn1_implicit_generalized_time_from_der	GmSSL/include/gmssl/asn1.h	253;"	d
asn1_implicit_generalized_time_to_der	GmSSL/include/gmssl/asn1.h	252;"	d
asn1_implicit_header_to_der	GmSSL/include/gmssl/asn1.h	269;"	d
asn1_implicit_ia5_string_from_der	GmSSL/include/gmssl/asn1.h	234;"	d
asn1_implicit_ia5_string_to_der	GmSSL/include/gmssl/asn1.h	233;"	d
asn1_implicit_int_from_der	GmSSL/include/gmssl/asn1.h	152;"	d
asn1_implicit_int_to_der	GmSSL/include/gmssl/asn1.h	151;"	d
asn1_implicit_integer_from_der	GmSSL/include/gmssl/asn1.h	144;"	d
asn1_implicit_integer_to_der	GmSSL/include/gmssl/asn1.h	143;"	d
asn1_implicit_object_identifier_from_der	GmSSL/include/gmssl/asn1.h	201;"	d
asn1_implicit_object_identifier_to_der	GmSSL/include/gmssl/asn1.h	200;"	d
asn1_implicit_octet_string_from_der	GmSSL/include/gmssl/asn1.h	185;"	d
asn1_implicit_octet_string_to_der	GmSSL/include/gmssl/asn1.h	184;"	d
asn1_implicit_printable_string_from_der	GmSSL/include/gmssl/asn1.h	226;"	d
asn1_implicit_printable_string_to_der	GmSSL/include/gmssl/asn1.h	225;"	d
asn1_implicit_sequence_from_der	GmSSL/include/gmssl/asn1.h	258;"	d
asn1_implicit_sequence_header_to_der	GmSSL/include/gmssl/asn1.h	274;"	d
asn1_implicit_sequence_to_der	GmSSL/include/gmssl/asn1.h	257;"	d
asn1_implicit_set_from_der	GmSSL/include/gmssl/asn1.h	263;"	d
asn1_implicit_set_header_to_der	GmSSL/include/gmssl/asn1.h	277;"	d
asn1_implicit_set_to_der	GmSSL/include/gmssl/asn1.h	262;"	d
asn1_implicit_to_der	GmSSL/include/gmssl/asn1.h	265;"	d
asn1_implicit_utc_time_from_der	GmSSL/include/gmssl/asn1.h	246;"	d
asn1_implicit_utc_time_to_der	GmSSL/include/gmssl/asn1.h	245;"	d
asn1_implicit_utf8_string_from_der	GmSSL/include/gmssl/asn1.h	218;"	d
asn1_implicit_utf8_string_to_der	GmSSL/include/gmssl/asn1.h	217;"	d
asn1_int_from_der	GmSSL/include/gmssl/asn1.h	150;"	d
asn1_int_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_int_from_der_ex(int tag, int *val, const uint8_t **in, size_t *inlen); \/\/ 不支持负数，返回0时 *val 设置为 -1$/;"	p	signature:(int tag, int *val, const uint8_t **in, size_t *inlen)
asn1_int_from_der_ex	GmSSL/src/asn1.c	/^int asn1_int_from_der_ex(int tag, int *a, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, int *a, const uint8_t **in, size_t *inlen)
asn1_int_to_der	GmSSL/include/gmssl/asn1.h	149;"	d
asn1_int_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_int_to_der_ex(int tag, int val, uint8_t **out, size_t *outlen); \/\/ 当 val == -1 时，不输出，返回 0$/;"	p	signature:(int tag, int val, uint8_t **out, size_t *outlen)
asn1_int_to_der_ex	GmSSL/src/asn1.c	/^int asn1_int_to_der_ex(int tag, int a, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, int a, uint8_t **out, size_t *outlen)
asn1_integer_from_der	GmSSL/include/gmssl/asn1.h	142;"	d
asn1_integer_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_integer_from_der_ex(int tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_integer_from_der_ex	GmSSL/src/asn1.c	/^int asn1_integer_from_der_ex(int tag, const uint8_t **a, size_t *alen, const uint8_t **pin, size_t *pinlen)$/;"	f	signature:(int tag, const uint8_t **a, size_t *alen, const uint8_t **pin, size_t *pinlen)
asn1_integer_to_der	GmSSL/include/gmssl/asn1.h	141;"	d
asn1_integer_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_integer_to_der_ex(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_integer_to_der_ex	GmSSL/src/asn1.c	/^int asn1_integer_to_der_ex(int tag, const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)
asn1_length_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_length_from_der(size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_length_from_der	GmSSL/src/asn1.c	/^int asn1_length_from_der(size_t *plen, const uint8_t **pin, size_t *pinlen)$/;"	f	signature:(size_t *plen, const uint8_t **pin, size_t *pinlen)
asn1_length_is_zero	GmSSL/include/gmssl/asn1.h	/^int asn1_length_is_zero(size_t len);$/;"	p	signature:(size_t len)
asn1_length_is_zero	GmSSL/src/asn1.c	/^int asn1_length_is_zero(size_t len)$/;"	f	signature:(size_t len)
asn1_length_le	GmSSL/include/gmssl/asn1.h	/^int asn1_length_le(size_t len1, size_t len2);$/;"	p	signature:(size_t len1, size_t len2)
asn1_length_le	GmSSL/src/asn1.c	/^int asn1_length_le(size_t len1, size_t len2)$/;"	f	signature:(size_t len1, size_t len2)
asn1_length_to_der	GmSSL/include/gmssl/asn1.h	/^int asn1_length_to_der(size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(size_t dlen, uint8_t **out, size_t *outlen)
asn1_length_to_der	GmSSL/src/asn1.c	/^int asn1_length_to_der(size_t len, uint8_t **out, size_t *outlen)$/;"	f	signature:(size_t len, uint8_t **out, size_t *outlen)
asn1_null_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_null_from_der(const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **in, size_t *inlen)
asn1_null_from_der	GmSSL/src/asn1.c	/^int asn1_null_from_der(const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **in, size_t *inlen)
asn1_null_name	GmSSL/include/gmssl/asn1.h	/^const char *asn1_null_name(void);$/;"	p	signature:(void)
asn1_null_name	GmSSL/src/asn1.c	/^const char *asn1_null_name(void)$/;"	f	signature:(void)
asn1_null_to_der	GmSSL/include/gmssl/asn1.h	/^int asn1_null_to_der(uint8_t **out, size_t *outlen);$/;"	p	signature:(uint8_t **out, size_t *outlen)
asn1_null_to_der	GmSSL/src/asn1.c	/^int asn1_null_to_der(uint8_t **out, size_t *outlen)$/;"	f	signature:(uint8_t **out, size_t *outlen)
asn1_object_identifier_equ	GmSSL/include/gmssl/asn1.h	/^int asn1_object_identifier_equ(const uint32_t *a, size_t a_cnt, const uint32_t *b, size_t b_cnt);$/;"	p	signature:(const uint32_t *a, size_t a_cnt, const uint32_t *b, size_t b_cnt)
asn1_object_identifier_equ	GmSSL/src/asn1.c	/^int asn1_object_identifier_equ(const uint32_t *a, size_t a_cnt, const uint32_t *b, size_t b_cnt)$/;"	f	signature:(const uint32_t *a, size_t a_cnt, const uint32_t *b, size_t b_cnt)
asn1_object_identifier_from_der	GmSSL/include/gmssl/asn1.h	199;"	d
asn1_object_identifier_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_object_identifier_from_der_ex(int tag, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen)
asn1_object_identifier_from_der_ex	GmSSL/src/asn1.c	/^int asn1_object_identifier_from_der_ex(int tag, uint32_t *nodes, size_t *nodes_cnt,$/;"	f	signature:(int tag, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen)
asn1_object_identifier_from_octets	GmSSL/include/gmssl/asn1.h	/^int asn1_object_identifier_from_octets(uint32_t *nodes, size_t *nodes_cnt, const uint8_t *in, size_t inlen);$/;"	p	signature:(uint32_t *nodes, size_t *nodes_cnt, const uint8_t *in, size_t inlen)
asn1_object_identifier_from_octets	GmSSL/src/asn1.c	/^int asn1_object_identifier_from_octets(uint32_t *nodes, size_t *nodes_cnt, const uint8_t *in, size_t inlen)$/;"	f	signature:(uint32_t *nodes, size_t *nodes_cnt, const uint8_t *in, size_t inlen)
asn1_object_identifier_print	GmSSL/include/gmssl/asn1.h	/^int asn1_object_identifier_print(FILE *fp, int fmt, int ind, const char *label, const char *name,$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const char *name, const uint32_t *nodes, size_t nodes_cnt)
asn1_object_identifier_print	GmSSL/src/asn1.c	/^int asn1_object_identifier_print(FILE *fp, int format, int indent, const char *label, const char *name,$/;"	f	signature:(FILE *fp, int format, int indent, const char *label, const char *name, const uint32_t *nodes, size_t nodes_cnt)
asn1_object_identifier_to_der	GmSSL/include/gmssl/asn1.h	198;"	d
asn1_object_identifier_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_object_identifier_to_der_ex(int tag, const uint32_t *nodes, size_t nodes_cnt, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const uint32_t *nodes, size_t nodes_cnt, uint8_t **out, size_t *outlen)
asn1_object_identifier_to_der_ex	GmSSL/src/asn1.c	/^int asn1_object_identifier_to_der_ex(int tag, const uint32_t *nodes, size_t nodes_cnt, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const uint32_t *nodes, size_t nodes_cnt, uint8_t **out, size_t *outlen)
asn1_object_identifier_to_octets	GmSSL/include/gmssl/asn1.h	/^int asn1_object_identifier_to_octets(const uint32_t *nodes, size_t nodes_cnt, uint8_t *out, size_t *outlen);$/;"	p	signature:(const uint32_t *nodes, size_t nodes_cnt, uint8_t *out, size_t *outlen)
asn1_object_identifier_to_octets	GmSSL/src/asn1.c	/^int asn1_object_identifier_to_octets(const uint32_t *nodes, size_t nodes_cnt, uint8_t *out, size_t *outlen)$/;"	f	signature:(const uint32_t *nodes, size_t nodes_cnt, uint8_t *out, size_t *outlen)
asn1_octet_string_from_der	GmSSL/include/gmssl/asn1.h	183;"	d
asn1_octet_string_from_der_ex	GmSSL/include/gmssl/asn1.h	181;"	d
asn1_octet_string_header_to_der	GmSSL/include/gmssl/asn1.h	271;"	d
asn1_octet_string_to_der	GmSSL/include/gmssl/asn1.h	182;"	d
asn1_octet_string_to_der_ex	GmSSL/include/gmssl/asn1.h	180;"	d
asn1_oid_info_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_oid_info_from_der(const ASN1_OID_INFO **info,$/;"	p	signature:(const ASN1_OID_INFO **info, const ASN1_OID_INFO *infos, size_t count, const uint8_t **in, size_t *inlen)
asn1_oid_info_from_der	GmSSL/src/asn1.c	/^int asn1_oid_info_from_der(const ASN1_OID_INFO **info, const ASN1_OID_INFO *infos, size_t count, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const ASN1_OID_INFO **info, const ASN1_OID_INFO *infos, size_t count, const uint8_t **in, size_t *inlen)
asn1_oid_info_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_oid_info_from_der_ex(const ASN1_OID_INFO **info, uint32_t *nodes, size_t *nodes_cnt,$/;"	p	signature:(const ASN1_OID_INFO **info, uint32_t *nodes, size_t *nodes_cnt, const ASN1_OID_INFO *infos, size_t count, const uint8_t **in, size_t *inlen)
asn1_oid_info_from_der_ex	GmSSL/src/asn1.c	/^int asn1_oid_info_from_der_ex(const ASN1_OID_INFO **info, uint32_t *nodes, size_t *nodes_cnt,$/;"	f	signature:(const ASN1_OID_INFO **info, uint32_t *nodes, size_t *nodes_cnt, const ASN1_OID_INFO *infos, size_t count, const uint8_t **in, size_t *inlen)
asn1_oid_info_from_name	GmSSL/include/gmssl/asn1.h	/^const ASN1_OID_INFO *asn1_oid_info_from_name(const ASN1_OID_INFO *infos, size_t count, const char *name);$/;"	p	signature:(const ASN1_OID_INFO *infos, size_t count, const char *name)
asn1_oid_info_from_name	GmSSL/src/asn1.c	/^const ASN1_OID_INFO *asn1_oid_info_from_name(const ASN1_OID_INFO *infos, size_t count, const char *name)$/;"	f	signature:(const ASN1_OID_INFO *infos, size_t count, const char *name)
asn1_oid_info_from_oid	GmSSL/include/gmssl/asn1.h	/^const ASN1_OID_INFO *asn1_oid_info_from_oid(const ASN1_OID_INFO *infos, size_t count, int oid);$/;"	p	signature:(const ASN1_OID_INFO *infos, size_t count, int oid)
asn1_oid_info_from_oid	GmSSL/src/asn1.c	/^const ASN1_OID_INFO *asn1_oid_info_from_oid(const ASN1_OID_INFO *infos, size_t count, int oid)$/;"	f	signature:(const ASN1_OID_INFO *infos, size_t count, int oid)
asn1_oid_node_from_base128	GmSSL/src/asn1.c	/^static int asn1_oid_node_from_base128(uint32_t *a, const uint8_t **in, size_t *inlen)$/;"	f	file:	signature:(uint32_t *a, const uint8_t **in, size_t *inlen)
asn1_oid_node_to_base128	GmSSL/src/asn1.c	/^static void asn1_oid_node_to_base128(uint32_t a, uint8_t **out, size_t *outlen)$/;"	f	file:	signature:(uint32_t a, uint8_t **out, size_t *outlen)
asn1_printable_string_check	GmSSL/include/gmssl/asn1.h	/^int asn1_printable_string_check(const char *d, size_t dlen);$/;"	p	signature:(const char *d, size_t dlen)
asn1_printable_string_check	GmSSL/src/asn1.c	/^int asn1_printable_string_check(const char *a, size_t alen)$/;"	f	signature:(const char *a, size_t alen)
asn1_printable_string_from_der	GmSSL/include/gmssl/asn1.h	224;"	d
asn1_printable_string_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_printable_string_from_der_ex(int tag, const char **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, const char **d, size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_printable_string_from_der_ex	GmSSL/src/asn1.c	/^int asn1_printable_string_from_der_ex(int tag, const char **a, size_t *alen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, const char **a, size_t *alen, const uint8_t **in, size_t *inlen)
asn1_printable_string_to_der	GmSSL/include/gmssl/asn1.h	223;"	d
asn1_printable_string_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_printable_string_to_der_ex(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_printable_string_to_der_ex	GmSSL/src/asn1.c	/^int asn1_printable_string_to_der_ex(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_sequence_from_der	GmSSL/include/gmssl/asn1.h	256;"	d
asn1_sequence_header_to_der	GmSSL/include/gmssl/asn1.h	273;"	d
asn1_sequence_of_int_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_sequence_of_int_from_der(int *nums, size_t *nums_cnt, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *nums, size_t *nums_cnt, const uint8_t **in, size_t *inlen)
asn1_sequence_of_int_from_der	GmSSL/src/asn1.c	/^int asn1_sequence_of_int_from_der(int *nums, size_t *nums_cnt, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *nums, size_t *nums_cnt, const uint8_t **in, size_t *inlen)
asn1_sequence_of_int_print	GmSSL/include/gmssl/asn1.h	/^int asn1_sequence_of_int_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
asn1_sequence_of_int_print	GmSSL/src/asn1.c	/^int asn1_sequence_of_int_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
asn1_sequence_of_int_to_der	GmSSL/include/gmssl/asn1.h	/^int asn1_sequence_of_int_to_der(const int *nums, size_t nums_cnt, uint8_t **out, size_t *outlen);$/;"	p	signature:(const int *nums, size_t nums_cnt, uint8_t **out, size_t *outlen)
asn1_sequence_of_int_to_der	GmSSL/src/asn1.c	/^int asn1_sequence_of_int_to_der(const int *nums, size_t nums_cnt, uint8_t **out, size_t *outlen)$/;"	f	signature:(const int *nums, size_t nums_cnt, uint8_t **out, size_t *outlen)
asn1_sequence_to_der	GmSSL/include/gmssl/asn1.h	255;"	d
asn1_set_from_der	GmSSL/include/gmssl/asn1.h	261;"	d
asn1_set_header_to_der	GmSSL/include/gmssl/asn1.h	276;"	d
asn1_set_to_der	GmSSL/include/gmssl/asn1.h	260;"	d
asn1_string_from_der	GmSSL/src/asn1.c	/^int asn1_string_from_der(int tag, const char **a, size_t *alen, const uint8_t **pin, size_t *pinlen)$/;"	f	signature:(int tag, const char **a, size_t *alen, const uint8_t **pin, size_t *pinlen)
asn1_string_print	GmSSL/include/gmssl/asn1.h	/^int asn1_string_print(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)
asn1_string_print	GmSSL/src/asn1.c	/^int asn1_string_print(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)
asn1_tag_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_tag_from_der(int tag, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, const uint8_t **in, size_t *inlen)
asn1_tag_from_der	GmSSL/src/asn1.c	/^int asn1_tag_from_der(int tag, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, const uint8_t **in, size_t *inlen)
asn1_tag_get	GmSSL/include/gmssl/asn1.h	/^int asn1_tag_get(int *tag, const uint8_t **in, size_t *inlen); \/\/ 这个函数是看看下一个tag是什么，并不修改in,inlen$/;"	p	signature:(int *tag, const uint8_t **in, size_t *inlen)
asn1_tag_get	GmSSL/src/asn1.c	/^int asn1_tag_get(int *tag, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *tag, const uint8_t **in, size_t *inlen)
asn1_tag_index	GmSSL/src/asn1.c	/^static char *asn1_tag_index[] = {$/;"	v	file:
asn1_tag_is_cstring	GmSSL/include/gmssl/asn1.h	/^int asn1_tag_is_cstring(int tag);$/;"	p	signature:(int tag)
asn1_tag_is_cstring	GmSSL/src/asn1.c	/^int asn1_tag_is_cstring(int tag)$/;"	f	signature:(int tag)
asn1_tag_name	GmSSL/include/gmssl/asn1.h	/^const char *asn1_tag_name(int tag);$/;"	p	signature:(int tag)
asn1_tag_name	GmSSL/src/asn1.c	/^const char *asn1_tag_name(int tag)$/;"	f	signature:(int tag)
asn1_tag_to_der	GmSSL/include/gmssl/asn1.h	/^int asn1_tag_to_der(int tag, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, uint8_t **out, size_t *outlen)
asn1_tag_to_der	GmSSL/src/asn1.c	/^int asn1_tag_to_der(int tag, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, uint8_t **out, size_t *outlen)
asn1_type_from_der	GmSSL/include/gmssl/asn1.h	/^int asn1_type_from_der(int tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_type_from_der	GmSSL/src/asn1.c	/^int asn1_type_from_der(int tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_type_to_der	GmSSL/include/gmssl/asn1.h	/^int asn1_type_to_der(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_type_to_der	GmSSL/src/asn1.c	/^int asn1_type_to_der(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_types_get_count	GmSSL/include/gmssl/asn1.h	/^int asn1_types_get_count(const uint8_t *d, size_t dlen, int tag, size_t *cnt);$/;"	p	signature:(const uint8_t *d, size_t dlen, int tag, size_t *cnt)
asn1_types_get_count	GmSSL/src/asn1.c	/^int asn1_types_get_count(const uint8_t *d, size_t dlen, int tag, size_t *cnt)$/;"	f	signature:(const uint8_t *d, size_t dlen, int tag, size_t *cnt)
asn1_types_get_item_by_index	GmSSL/include/gmssl/asn1.h	/^int asn1_types_get_item_by_index(const uint8_t *d, size_t *dlen, int tag,$/;"	p	signature:(const uint8_t *d, size_t *dlen, int tag, int index, const uint8_t **item_d, size_t *item_dlen)
asn1_types_get_item_by_index	GmSSL/src/asn1.c	/^int asn1_types_get_item_by_index(const uint8_t *d, size_t *dlen, int tag,$/;"	f	signature:(const uint8_t *d, size_t *dlen, int tag, int index, const uint8_t **item_d, size_t *item_dlen)
asn1_utc_time_from_der	GmSSL/include/gmssl/asn1.h	244;"	d
asn1_utc_time_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_utc_time_from_der_ex(int tag, time_t *tv, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, time_t *tv, const uint8_t **in, size_t *inlen)
asn1_utc_time_from_der_ex	GmSSL/src/asn1.c	/^int asn1_utc_time_from_der_ex(int tag, time_t *t, const uint8_t **pin, size_t *pinlen)$/;"	f	signature:(int tag, time_t *t, const uint8_t **pin, size_t *pinlen)
asn1_utc_time_to_der	GmSSL/include/gmssl/asn1.h	243;"	d
asn1_utc_time_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_utc_time_to_der_ex(int tag, time_t tv, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, time_t tv, uint8_t **out, size_t *outlen)
asn1_utc_time_to_der_ex	GmSSL/src/asn1.c	/^int asn1_utc_time_to_der_ex(int tag, time_t a, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, time_t a, uint8_t **out, size_t *outlen)
asn1_utf8_string_check	GmSSL/include/gmssl/asn1.h	/^int asn1_utf8_string_check(const char *d, size_t dlen);$/;"	p	signature:(const char *d, size_t dlen)
asn1_utf8_string_check	GmSSL/src/asn1.c	/^int asn1_utf8_string_check(const char *a, size_t alen)$/;"	f	signature:(const char *a, size_t alen)
asn1_utf8_string_from_der	GmSSL/include/gmssl/asn1.h	216;"	d
asn1_utf8_string_from_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_utf8_string_from_der_ex(int tag, const char **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int tag, const char **d, size_t *dlen, const uint8_t **in, size_t *inlen)
asn1_utf8_string_from_der_ex	GmSSL/src/asn1.c	/^int asn1_utf8_string_from_der_ex(int tag, const char **a, size_t *alen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int tag, const char **a, size_t *alen, const uint8_t **in, size_t *inlen)
asn1_utf8_string_to_der	GmSSL/include/gmssl/asn1.h	215;"	d
asn1_utf8_string_to_der_ex	GmSSL/include/gmssl/asn1.h	/^int asn1_utf8_string_to_der_ex(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)
asn1_utf8_string_to_der_ex	GmSSL/src/asn1.c	/^int asn1_utf8_string_to_der_ex(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const char *d, size_t dlen, uint8_t **out, size_t *outlen)
base64_ctx_num	GmSSL/src/base64.c	/^int base64_ctx_num(BASE64_CTX *ctx)$/;"	f	signature:(BASE64_CTX *ctx)
base64_decode_block	GmSSL/include/gmssl/base64.h	/^int base64_decode_block(unsigned char *t, const unsigned char *f, int n);$/;"	p	signature:(unsigned char *t, const unsigned char *f, int n)
base64_decode_block	GmSSL/src/base64.c	/^int base64_decode_block(unsigned char *t, const unsigned char *f, int n)$/;"	f	signature:(unsigned char *t, const unsigned char *f, int n)
base64_decode_finish	GmSSL/include/gmssl/base64.h	/^int  base64_decode_finish(BASE64_CTX *ctx, uint8_t *out, int *outlen);$/;"	p	signature:(BASE64_CTX *ctx, uint8_t *out, int *outlen)
base64_decode_finish	GmSSL/src/base64.c	/^int base64_decode_finish(BASE64_CTX *ctx, uint8_t *out, int *outl)$/;"	f	signature:(BASE64_CTX *ctx, uint8_t *out, int *outl)
base64_decode_init	GmSSL/include/gmssl/base64.h	/^void base64_decode_init(BASE64_CTX *ctx);$/;"	p	signature:(BASE64_CTX *ctx)
base64_decode_init	GmSSL/src/base64.c	/^void base64_decode_init(BASE64_CTX *ctx)$/;"	f	signature:(BASE64_CTX *ctx)
base64_decode_update	GmSSL/include/gmssl/base64.h	/^int  base64_decode_update(BASE64_CTX *ctx, const uint8_t *in, int inlen, uint8_t *out, int *outlen);$/;"	p	signature:(BASE64_CTX *ctx, const uint8_t *in, int inlen, uint8_t *out, int *outlen)
base64_decode_update	GmSSL/src/base64.c	/^int base64_decode_update(BASE64_CTX *ctx, const uint8_t *in, int inl, uint8_t *out, int *outl)$/;"	f	signature:(BASE64_CTX *ctx, const uint8_t *in, int inl, uint8_t *out, int *outl)
base64_encode_block	GmSSL/include/gmssl/base64.h	/^int base64_encode_block(unsigned char *t, const unsigned char *f, int dlen);$/;"	p	signature:(unsigned char *t, const unsigned char *f, int dlen)
base64_encode_block	GmSSL/src/base64.c	/^int base64_encode_block(unsigned char *t, const unsigned char *f, int dlen)$/;"	f	signature:(unsigned char *t, const unsigned char *f, int dlen)
base64_encode_finish	GmSSL/include/gmssl/base64.h	/^void base64_encode_finish(BASE64_CTX *ctx, uint8_t *out, int *outlen);$/;"	p	signature:(BASE64_CTX *ctx, uint8_t *out, int *outlen)
base64_encode_finish	GmSSL/src/base64.c	/^void base64_encode_finish(BASE64_CTX *ctx, uint8_t *out, int *outl)$/;"	f	signature:(BASE64_CTX *ctx, uint8_t *out, int *outl)
base64_encode_init	GmSSL/include/gmssl/base64.h	/^void base64_encode_init(BASE64_CTX *ctx);$/;"	p	signature:(BASE64_CTX *ctx)
base64_encode_init	GmSSL/src/base64.c	/^void base64_encode_init(BASE64_CTX *ctx)$/;"	f	signature:(BASE64_CTX *ctx)
base64_encode_update	GmSSL/include/gmssl/base64.h	/^int  base64_encode_update(BASE64_CTX *ctx, const uint8_t *in, int inlen, uint8_t *out, int *outlen);$/;"	p	signature:(BASE64_CTX *ctx, const uint8_t *in, int inlen, uint8_t *out, int *outlen)
base64_encode_update	GmSSL/src/base64.c	/^int base64_encode_update(BASE64_CTX *ctx, const uint8_t *in, int inl, uint8_t *out, int *outl)$/;"	f	signature:(BASE64_CTX *ctx, const uint8_t *in, int inl, uint8_t *out, int *outl)
bit16X2_256_bs	sm4_bs.c	/^void bit16X2_256_bs(unsigned long long cinh,unsigned long long cinl,unsigned long long *thp,unsigned long long *tlp)\/\/4+4 -> 8$/;"	f	signature:(unsigned long long cinh,unsigned long long cinl,unsigned long long *thp,unsigned long long *tlp)
bit256_16X2_bs	sm4_bs.c	/^void bit256_16X2_bs(unsigned long long cinh,unsigned long long cinl,unsigned long long *thp,unsigned long long *tlp)\/\/8 -> 4+4$/;"	f	signature:(unsigned long long cinh,unsigned long long cinl,unsigned long long *thp,unsigned long long *tlp)
bit_2bit	sm4_bs.c	6;"	d	file:
bit_4bit	sm4_bs.c	5;"	d	file:
bits	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int bits;$/;"	m	struct:ECCrefPublicKey_st	access:public
bits	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int bits;$/;"	m	struct:RSArefPrivateKey_st	access:public
bits	GmSSL/tools/sdfutil/sdf.h	/^	unsigned int bits;$/;"	m	struct:RSArefPublicKey_st	access:public
bits	GmSSL/tools/sdfutil/sdf.h	/^    unsigned int  bits;$/;"	m	struct:ECCrefPrivateKey_st	access:public
block	GmSSL/include/gmssl/md5.h	/^	uint8_t block[MD5_BLOCK_SIZE];$/;"	m	struct:__anon66	access:public
block	GmSSL/include/gmssl/sha1.h	/^	uint8_t block[SHA1_BLOCK_SIZE];$/;"	m	struct:__anon39	access:public
block	GmSSL/include/gmssl/sha2.h	/^	uint8_t block[SHA224_BLOCK_SIZE];$/;"	m	struct:__anon52	access:public
block	GmSSL/include/gmssl/sha2.h	/^	uint8_t block[SHA256_BLOCK_SIZE];$/;"	m	struct:__anon53	access:public
block	GmSSL/include/gmssl/sha2.h	/^	uint8_t block[SHA384_BLOCK_SIZE];$/;"	m	struct:__anon54	access:public
block	GmSSL/include/gmssl/sha2.h	/^	uint8_t block[SHA512_BLOCK_SIZE];$/;"	m	struct:__anon55	access:public
block	GmSSL/include/gmssl/sm3.h	/^	uint8_t block[SM3_BLOCK_SIZE];$/;"	m	struct:__anon59	access:public
block	GmSSL/include/gmssl/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon63	access:public
block	GmSSL/include/gmssl/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon64	access:public
block	GmSSL/include/gmssl/zuc.h	/^	uint8_t block[4];$/;"	m	struct:__anon35	access:public
block	GmSSL/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon79	access:public
block	GmSSL/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon80	access:public
block	GmSSL/src/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon83	access:public
block	GmSSL/src/sm4.h	/^	uint8_t block[SM4_BLOCK_SIZE];$/;"	m	struct:__anon84	access:public
block_cipher_decrypt	GmSSL/include/gmssl/block_cipher.h	/^int block_cipher_decrypt(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out);$/;"	p	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out)
block_cipher_decrypt	GmSSL/src/block_cipher.c	/^int block_cipher_decrypt(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out)$/;"	f	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out)
block_cipher_decrypt_func	GmSSL/include/gmssl/block_cipher.h	/^typedef void (*block_cipher_decrypt_func)(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out);$/;"	t
block_cipher_encrypt	GmSSL/include/gmssl/block_cipher.h	/^int block_cipher_encrypt(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out);$/;"	p	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out)
block_cipher_encrypt	GmSSL/src/block_cipher.c	/^int block_cipher_encrypt(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out)$/;"	f	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out)
block_cipher_encrypt_func	GmSSL/include/gmssl/block_cipher.h	/^typedef void (*block_cipher_encrypt_func)(const BLOCK_CIPHER_KEY *key, const uint8_t *in, uint8_t *out);$/;"	t
block_cipher_from_name	GmSSL/include/gmssl/block_cipher.h	/^const BLOCK_CIPHER *block_cipher_from_name(const char *name);$/;"	p	signature:(const char *name)
block_cipher_name	GmSSL/include/gmssl/block_cipher.h	/^const char *block_cipher_name(const BLOCK_CIPHER *cipher);$/;"	p	signature:(const BLOCK_CIPHER *cipher)
block_cipher_set_decrypt_key	GmSSL/include/gmssl/block_cipher.h	/^int block_cipher_set_decrypt_key(BLOCK_CIPHER_KEY *key, const BLOCK_CIPHER *cipher, const uint8_t *raw_key);$/;"	p	signature:(BLOCK_CIPHER_KEY *key, const BLOCK_CIPHER *cipher, const uint8_t *raw_key)
block_cipher_set_decrypt_key	GmSSL/src/block_cipher.c	/^int block_cipher_set_decrypt_key(BLOCK_CIPHER_KEY *key, const BLOCK_CIPHER *cipher, const uint8_t *raw_key)$/;"	f	signature:(BLOCK_CIPHER_KEY *key, const BLOCK_CIPHER *cipher, const uint8_t *raw_key)
block_cipher_set_decrypt_key_func	GmSSL/include/gmssl/block_cipher.h	/^typedef void (*block_cipher_set_decrypt_key_func)(BLOCK_CIPHER_KEY *key, const uint8_t *raw_key);$/;"	t
block_cipher_set_encrypt_key	GmSSL/include/gmssl/block_cipher.h	/^int block_cipher_set_encrypt_key(BLOCK_CIPHER_KEY *key, const BLOCK_CIPHER *cipher, const uint8_t *raw_key);$/;"	p	signature:(BLOCK_CIPHER_KEY *key, const BLOCK_CIPHER *cipher, const uint8_t *raw_key)
block_cipher_set_encrypt_key	GmSSL/src/block_cipher.c	/^int block_cipher_set_encrypt_key(BLOCK_CIPHER_KEY *key, const BLOCK_CIPHER *cipher, const uint8_t *raw_key)$/;"	f	signature:(BLOCK_CIPHER_KEY *key, const BLOCK_CIPHER *cipher, const uint8_t *raw_key)
block_cipher_set_encrypt_key_func	GmSSL/include/gmssl/block_cipher.h	/^typedef void (*block_cipher_set_encrypt_key_func)(BLOCK_CIPHER_KEY *key, const uint8_t *raw_key);$/;"	t
block_nbytes	GmSSL/include/gmssl/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon63	access:public
block_nbytes	GmSSL/include/gmssl/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon64	access:public
block_nbytes	GmSSL/include/gmssl/zuc.h	/^	size_t block_nbytes;$/;"	m	struct:__anon35	access:public
block_nbytes	GmSSL/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon79	access:public
block_nbytes	GmSSL/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon80	access:public
block_nbytes	GmSSL/src/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon83	access:public
block_nbytes	GmSSL/src/sm4.h	/^	size_t block_nbytes;$/;"	m	struct:__anon84	access:public
block_size	GmSSL/include/gmssl/block_cipher.h	/^	size_t block_size;$/;"	m	struct:BLOCK_CIPHER	access:public
block_size	GmSSL/include/gmssl/digest.h	/^	size_t block_size;$/;"	m	struct:DIGEST	access:public
bswap_buf	GmSSL/tests/zuctest.c	/^static void bswap_buf(uint32_t *buf, size_t nwords)$/;"	f	file:	signature:(uint32_t *buf, size_t nwords)
buf	GmSSL/include/gmssl/sha3.h	/^	uint8_t buf[SHA3_224_BLOCK_SIZE];$/;"	m	struct:__anon74	access:public
buf	GmSSL/include/gmssl/sha3.h	/^	uint8_t buf[SHA3_256_BLOCK_SIZE];$/;"	m	struct:__anon75	access:public
buf	GmSSL/include/gmssl/sha3.h	/^	uint8_t buf[SHA3_384_BLOCK_SIZE];$/;"	m	struct:__anon76	access:public
buf	GmSSL/include/gmssl/sha3.h	/^	uint8_t buf[SHA3_512_BLOCK_SIZE];$/;"	m	struct:__anon77	access:public
buf	GmSSL/include/gmssl/zuc.h	/^	uint8_t buf[4];$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
buf	GmSSL/include/gmssl/zuc.h	/^	uint8_t buf[4];$/;"	m	struct:ZUC_MAC_CTX_st	access:public
buflen	GmSSL/include/gmssl/zuc.h	/^	int buflen;$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
buflen	GmSSL/include/gmssl/zuc.h	/^	size_t buflen;$/;"	m	struct:ZUC_MAC_CTX_st	access:public
cacerts	GmSSL/include/gmssl/tls.h	/^	uint8_t cacerts[2048];$/;"	m	struct:__anon28	access:public
cacertslen	GmSSL/include/gmssl/tls.h	/^	size_t cacertslen;$/;"	m	struct:__anon28	access:public
cal_x	oSM4.c	/^int cal_x(uint8_t a)$/;"	f	signature:(uint8_t a)
cal_y	oSM4.c	/^int cal_y(uint8_t a)$/;"	f	signature:(uint8_t a)
cbEncryptedPrivKey	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char cbEncryptedPrivKey[64];$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
certgen_main	GmSSL/tools/certgen.c	/^int certgen_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
certgen_main	GmSSL/tools/gmssl.c	/^extern int certgen_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
certparse_main	GmSSL/tools/certparse.c	/^int certparse_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
certparse_main	GmSSL/tools/gmssl.c	/^extern int certparse_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
certs	GmSSL/include/gmssl/cms.h	/^	uint8_t *certs;$/;"	m	struct:__anon71	access:public
certs	GmSSL/include/gmssl/tls.h	/^	uint8_t certs[4096];$/;"	m	struct:__anon28	access:public
certs_len	GmSSL/include/gmssl/cms.h	/^	size_t certs_len;$/;"	m	struct:__anon71	access:public
certslen	GmSSL/include/gmssl/tls.h	/^	size_t certslen;$/;"	m	struct:__anon28	access:public
certverify_main	GmSSL/tools/certverify.c	/^int certverify_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
certverify_main	GmSSL/tools/gmssl.c	/^extern int certverify_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
chacha20_generate_keystream	GmSSL/include/gmssl/chacha20.h	/^void chacha20_generate_keystream(CHACHA20_STATE *state,$/;"	p	signature:(CHACHA20_STATE *state, size_t counts, uint8_t *out)
chacha20_generate_keystream	GmSSL/src/chacha20.c	/^void chacha20_generate_keystream(CHACHA20_STATE *state, size_t counts, uint8_t *out)$/;"	f	signature:(CHACHA20_STATE *state, size_t counts, uint8_t *out)
chacha20_init	GmSSL/include/gmssl/chacha20.h	/^void chacha20_init(CHACHA20_STATE *state,$/;"	p	signature:(CHACHA20_STATE *state, const uint8_t key[CHACHA20_KEY_SIZE], const uint8_t nonce[CHACHA20_NONCE_SIZE], uint32_t counter)
chacha20_init	GmSSL/src/chacha20.c	/^void chacha20_init(CHACHA20_STATE *state,$/;"	f	signature:(CHACHA20_STATE *state, const uint8_t key[CHACHA20_KEY_SIZE], const uint8_t nonce[CHACHA20_NONCE_SIZE], uint32_t counter)
cipher	GmSSL/include/gmssl/block_cipher.h	/^	const BLOCK_CIPHER *cipher;$/;"	m	struct:BLOCK_CIPHER_KEY	access:public
cipher_cap	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*cipher_cap)(unsigned int vendor_cap);$/;"	m	struct:sdf_vendor_st	access:public
cipher_std2vendor	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*cipher_std2vendor)(unsigned int std_id);$/;"	m	struct:sdf_vendor_st	access:public
cipher_suite	GmSSL/include/gmssl/tls.h	/^	int cipher_suite;$/;"	m	struct:__anon29	access:public
cipher_suite	GmSSL/include/gmssl/tls.h	/^	int cipher_suite;$/;"	m	struct:__anon30	access:public
cipher_suites	GmSSL/include/gmssl/tls.h	/^	int cipher_suites[8];$/;"	m	struct:__anon28	access:public
cipher_suits_cnt	GmSSL/include/gmssl/tls.h	/^	size_t cipher_suits_cnt;$/;"	m	struct:__anon28	access:public
cipher_vendor2std	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*cipher_vendor2std)(unsigned int vendor_id);$/;"	m	struct:sdf_vendor_st	access:public
ciphertext	GmSSL/include/gmssl/sm2.h	/^	uint8_t ciphertext[SM2_MAX_PLAINTEXT_SIZE];$/;"	m	struct:__anon50	access:public
ciphertext_size	GmSSL/include/gmssl/sm2.h	/^	uint8_t ciphertext_size;$/;"	m	struct:__anon50	access:public
clength	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned int  clength;$/;"	m	struct:__anon4	access:public
client_cert_verify_result	GmSSL/include/gmssl/tls.h	/^	int client_cert_verify_result;$/;"	m	struct:__anon29	access:public
client_cert_verify_result	GmSSL/include/gmssl/tls.h	/^	int client_cert_verify_result;$/;"	m	struct:__anon30	access:public
client_certs	GmSSL/include/gmssl/tls.h	/^	uint8_t client_certs[TLS_MAX_CERTIFICATES_SIZE];$/;"	m	struct:__anon30	access:public
client_certs_len	GmSSL/include/gmssl/tls.h	/^	size_t client_certs_len;$/;"	m	struct:__anon30	access:public
client_seq_num	GmSSL/include/gmssl/tls.h	/^	uint8_t client_seq_num[8];$/;"	m	struct:__anon30	access:public
client_write_enc_key	GmSSL/include/gmssl/tls.h	/^	SM4_KEY client_write_enc_key;$/;"	m	struct:__anon30	access:public
client_write_iv	GmSSL/include/gmssl/tls.h	/^	uint8_t client_write_iv[12]; \/\/ 同样$/;"	m	struct:__anon30	access:public
client_write_key	GmSSL/include/gmssl/tls.h	/^	BLOCK_CIPHER_KEY client_write_key; \/\/ used in tls13.c$/;"	m	struct:__anon30	access:public
client_write_mac_ctx	GmSSL/include/gmssl/tls.h	/^	SM3_HMAC_CTX client_write_mac_ctx;$/;"	m	struct:__anon30	access:public
cms_content_info_data_to_der	GmSSL/src/cms.c	/^static int cms_content_info_data_to_der(const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	file:	signature:(const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
cms_content_info_from_der	GmSSL/include/gmssl/cms.h	/^int cms_content_info_from_der($/;"	p	signature:( int *content_type, const uint8_t **content, size_t *content_len, const uint8_t **in, size_t *inlen)
cms_content_info_from_der	GmSSL/src/cms.c	/^int cms_content_info_from_der($/;"	f	signature:( int *content_type, const uint8_t **content, size_t *content_len, const uint8_t **in, size_t *inlen)
cms_content_info_header_to_der	GmSSL/include/gmssl/cms.h	/^int cms_content_info_header_to_der($/;"	p	signature:( int content_type, size_t content_len, uint8_t **out, size_t *outlen)
cms_content_info_header_to_der	GmSSL/src/cms.c	/^int cms_content_info_header_to_der(int content_type, size_t content_len, uint8_t **out, size_t *outlen)$/;"	f	signature:(int content_type, size_t content_len, uint8_t **out, size_t *outlen)
cms_content_info_print	GmSSL/include/gmssl/cms.h	/^int cms_content_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_content_info_print	GmSSL/src/cms.c	/^int cms_content_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_content_info_to_der	GmSSL/include/gmssl/cms.h	/^int cms_content_info_to_der($/;"	p	signature:( int content_type, const uint8_t *content, size_t content_len, uint8_t **out, size_t *outlen)
cms_content_info_to_der	GmSSL/src/cms.c	/^int cms_content_info_to_der($/;"	f	signature:( int content_type, const uint8_t *content, size_t content_len, uint8_t **out, size_t *outlen)
cms_content_type_from_der	GmSSL/include/gmssl/cms.h	/^int cms_content_type_from_der(int *oid, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **in, size_t *inlen)
cms_content_type_from_der	GmSSL/src/cms.c	/^int cms_content_type_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
cms_content_type_from_name	GmSSL/include/gmssl/cms.h	/^int cms_content_type_from_name(const char *name);$/;"	p	signature:(const char *name)
cms_content_type_from_name	GmSSL/src/cms.c	/^int cms_content_type_from_name(const char *name)$/;"	f	signature:(const char *name)
cms_content_type_name	GmSSL/include/gmssl/cms.h	/^const char *cms_content_type_name(int oid);$/;"	p	signature:(int oid)
cms_content_type_name	GmSSL/src/cms.c	/^const char *cms_content_type_name(int oid)$/;"	f	signature:(int oid)
cms_content_type_to_der	GmSSL/include/gmssl/cms.h	/^int cms_content_type_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
cms_content_type_to_der	GmSSL/src/cms.c	/^int cms_content_type_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
cms_content_types	GmSSL/src/cms.c	/^static const ASN1_OID_INFO cms_content_types[] = {$/;"	v	file:
cms_content_types_count	GmSSL/src/cms.c	/^static const size_t cms_content_types_count =$/;"	v	file:
cms_data_from_der	GmSSL/include/gmssl/cms.h	111;"	d
cms_data_print	GmSSL/include/gmssl/cms.h	112;"	d
cms_data_to_der	GmSSL/include/gmssl/cms.h	110;"	d
cms_decrypt	GmSSL/include/gmssl/cms.h	/^int cms_decrypt($/;"	p	signature:( const uint8_t *cms, size_t cmslen, int *enc_algor, const uint8_t *key, size_t keylen, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len)
cms_decrypt	GmSSL/src/cms.c	/^int cms_decrypt(const uint8_t *cms, size_t cmslen,$/;"	f	signature:(const uint8_t *cms, size_t cmslen, int *enc_algor, const uint8_t *key, size_t keylen, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len)
cms_deenvelop	GmSSL/include/gmssl/cms.h	/^int cms_deenvelop($/;"	p	signature:( const uint8_t *cms, size_t cms_len, const SM2_KEY *rcpt_key, const uint8_t *rcpt_cert, size_t rcpt_cert_len, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len)
cms_deenvelop	GmSSL/src/cms.c	/^int cms_deenvelop(const uint8_t *cms, size_t cmslen,$/;"	f	signature:(const uint8_t *cms, size_t cmslen, const SM2_KEY *rcpt_key, const uint8_t *rcpt_cert, size_t rcpt_cert_len, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len)
cms_deenvelop_and_verify	GmSSL/include/gmssl/cms.h	/^int cms_deenvelop_and_verify($/;"	p	signature:( const uint8_t *cms, size_t cms_len, const SM2_KEY *rcpt_key, const uint8_t *rcpt_cert, size_t rcpt_cert_len, const uint8_t *extra_signer_certs, size_t extra_signer_certs_len, const uint8_t *extra_signer_crls, size_t extra_signer_crls_len, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, const uint8_t **signer_infos, size_t *signer_infos_len, const uint8_t **signer_certs, size_t *signer_certs_len, const uint8_t **signer_crls, size_t *signer_crls_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len)
cms_deenvelop_and_verify	GmSSL/src/cms.c	/^int cms_deenvelop_and_verify(const uint8_t *cms, size_t cmslen,$/;"	f	signature:(const uint8_t *cms, size_t cmslen, const SM2_KEY *rcpt_key, const uint8_t *rcpt_cert, size_t rcpt_cert_len, const uint8_t *extra_certs, size_t extra_certs_len, const uint8_t *extra_crls, size_t extra_crls_len, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, const uint8_t **signer_infos, size_t *signer_infos_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len)
cms_digest_algors_from_der	GmSSL/include/gmssl/cms.h	/^int cms_digest_algors_from_der(int *digest_algors, size_t *digest_algors_cnt, size_t max_digest_algors,$/;"	p	signature:(int *digest_algors, size_t *digest_algors_cnt, size_t max_digest_algors, const uint8_t **in, size_t *inlen)
cms_digest_algors_from_der	GmSSL/src/cms.c	/^int cms_digest_algors_from_der(int *digest_algors, size_t *digest_algors_cnt, size_t max_digest_algors,$/;"	f	signature:(int *digest_algors, size_t *digest_algors_cnt, size_t max_digest_algors, const uint8_t **in, size_t *inlen)
cms_digest_algors_print	GmSSL/include/gmssl/cms.h	/^int cms_digest_algors_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_digest_algors_print	GmSSL/src/cms.c	/^int cms_digest_algors_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_digest_algors_to_der	GmSSL/include/gmssl/cms.h	/^int cms_digest_algors_to_der(const int *digest_algors, size_t digest_algors_cnt, uint8_t **out, size_t *outlen);$/;"	p	signature:(const int *digest_algors, size_t digest_algors_cnt, uint8_t **out, size_t *outlen)
cms_digest_algors_to_der	GmSSL/src/cms.c	/^int cms_digest_algors_to_der(const int *digest_algors, size_t digest_algors_cnt,$/;"	f	signature:(const int *digest_algors, size_t digest_algors_cnt, uint8_t **out, size_t *outlen)
cms_enced_content_info_decrypt_from_der	GmSSL/include/gmssl/cms.h	/^int cms_enced_content_info_decrypt_from_der($/;"	p	signature:( int *enc_algor, const uint8_t *key, size_t keylen, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_enced_content_info_decrypt_from_der	GmSSL/src/cms.c	/^int cms_enced_content_info_decrypt_from_der($/;"	f	signature:( int *enc_algor, const uint8_t *key, size_t keylen, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_enced_content_info_encrypt_to_der	GmSSL/include/gmssl/cms.h	/^int cms_enced_content_info_encrypt_to_der($/;"	p	signature:( int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_enced_content_info_encrypt_to_der	GmSSL/src/cms.c	/^int cms_enced_content_info_encrypt_to_der($/;"	f	signature:( int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_enced_content_info_from_der	GmSSL/include/gmssl/cms.h	/^int cms_enced_content_info_from_der($/;"	p	signature:( int *content_type, int *enc_algor, const uint8_t **enc_iv, size_t *enc_iv_len, const uint8_t **enced_content, size_t *enced_content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_enced_content_info_from_der	GmSSL/src/cms.c	/^int cms_enced_content_info_from_der($/;"	f	signature:( int *content_type, int *enc_algor, const uint8_t **enc_iv, size_t *enc_iv_len, const uint8_t **enced_content, size_t *enced_content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_enced_content_info_print	GmSSL/include/gmssl/cms.h	/^int cms_enced_content_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_enced_content_info_print	GmSSL/src/cms.c	/^int cms_enced_content_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_enced_content_info_to_der	GmSSL/include/gmssl/cms.h	/^int cms_enced_content_info_to_der($/;"	p	signature:( int content_type, int enc_algor, const uint8_t *enc_iv, size_t enc_iv_len, const uint8_t *enced_content, size_t enced_content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_enced_content_info_to_der	GmSSL/src/cms.c	/^int cms_enced_content_info_to_der($/;"	f	signature:( int content_type, int enc_algor, const uint8_t *enc_iv, size_t enc_iv_len, const uint8_t *enced_content, size_t enced_content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_encrypt	GmSSL/include/gmssl/cms.h	/^int cms_encrypt($/;"	p	signature:( uint8_t *cms, size_t *cmslen, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len)
cms_encrypt	GmSSL/src/cms.c	/^int cms_encrypt(uint8_t *cms, size_t *cmslen,$/;"	f	signature:(uint8_t *cms, size_t *cmslen, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len)
cms_encrypted_data_decrypt_from_der	GmSSL/include/gmssl/cms.h	/^int cms_encrypted_data_decrypt_from_der($/;"	p	signature:( int *enc_algor, const uint8_t *key, size_t keylen, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_encrypted_data_decrypt_from_der	GmSSL/src/cms.c	/^int cms_encrypted_data_decrypt_from_der($/;"	f	signature:( int *enc_algor, const uint8_t *key, size_t keylen, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_encrypted_data_encrypt_to_der	GmSSL/include/gmssl/cms.h	/^int cms_encrypted_data_encrypt_to_der($/;"	p	signature:( int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_encrypted_data_encrypt_to_der	GmSSL/src/cms.c	/^int cms_encrypted_data_encrypt_to_der($/;"	f	signature:( int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_encrypted_data_from_der	GmSSL/include/gmssl/cms.h	/^int cms_encrypted_data_from_der($/;"	p	signature:( int *version, int *content_type, int *enc_algor, const uint8_t **iv, size_t *ivlen, const uint8_t **enced_content, size_t *enced_content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_encrypted_data_from_der	GmSSL/src/cms.c	/^int cms_encrypted_data_from_der($/;"	f	signature:( int *version, int *content_type, int *enc_algor, const uint8_t **iv, size_t *ivlen, const uint8_t **enced_content, size_t *enced_content_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_encrypted_data_print	GmSSL/include/gmssl/cms.h	/^int cms_encrypted_data_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_encrypted_data_print	GmSSL/src/cms.c	/^int cms_encrypted_data_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_encrypted_data_to_der	GmSSL/include/gmssl/cms.h	/^int cms_encrypted_data_to_der($/;"	p	signature:( int version, int content_type, int enc_algor, const uint8_t *iv, size_t ivlen, const uint8_t *enced_content, size_t enced_content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_encrypted_data_to_der	GmSSL/src/cms.c	/^int cms_encrypted_data_to_der($/;"	f	signature:( int version, int content_type, int enc_algor, const uint8_t *iv, size_t ivlen, const uint8_t *enced_content, size_t enced_content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_envelop	GmSSL/include/gmssl/cms.h	/^int cms_envelop($/;"	p	signature:( uint8_t *cms, size_t *cms_len, const uint8_t *rcpt_certs, size_t rcpt_certs_len, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len)
cms_envelop	GmSSL/src/cms.c	/^int cms_envelop($/;"	f	signature:( uint8_t *cms, size_t *cmslen, const uint8_t *rcpt_certs, size_t rcpt_certs_len, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len)
cms_enveloped_data_decrypt_from_der	GmSSL/include/gmssl/cms.h	/^int cms_enveloped_data_decrypt_from_der($/;"	p	signature:( const SM2_KEY *sm2_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_enveloped_data_decrypt_from_der	GmSSL/src/cms.c	/^int cms_enveloped_data_decrypt_from_der($/;"	f	signature:( const SM2_KEY *sm2_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **recipient_infos, size_t *recipient_infos_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **in, size_t *inlen)
cms_enveloped_data_encrypt_to_der	GmSSL/include/gmssl/cms.h	/^int cms_enveloped_data_encrypt_to_der($/;"	p	signature:( const uint8_t *rcpt_certs, size_t rcpt_certs_len, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_enveloped_data_encrypt_to_der	GmSSL/src/cms.c	/^int cms_enveloped_data_encrypt_to_der($/;"	f	signature:( const uint8_t *rcpt_certs, size_t rcpt_certs_len, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_enveloped_data_from_der	GmSSL/include/gmssl/cms.h	/^int cms_enveloped_data_from_der($/;"	p	signature:( int *version, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, const uint8_t **enced_content_info, size_t *enced_content_info_len, const uint8_t **in, size_t *inlen)
cms_enveloped_data_from_der	GmSSL/src/cms.c	/^int cms_enveloped_data_from_der($/;"	f	signature:( int *version, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, const uint8_t **enced_content_info, size_t *enced_content_info_len, const uint8_t **in, size_t *inlen)
cms_enveloped_data_print	GmSSL/include/gmssl/cms.h	/^int cms_enveloped_data_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_enveloped_data_print	GmSSL/src/cms.c	/^int cms_enveloped_data_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_enveloped_data_to_der	GmSSL/include/gmssl/cms.h	/^int cms_enveloped_data_to_der($/;"	p	signature:( int version, const uint8_t *rcpt_infos, size_t rcpt_infos_len, int content_type, int enc_algor, const uint8_t *enc_iv, size_t enc_iv_len, const uint8_t *enced_content, size_t enced_content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_enveloped_data_to_der	GmSSL/src/cms.c	/^int cms_enveloped_data_to_der($/;"	f	signature:( int version, const uint8_t *rcpt_infos, size_t rcpt_infos_len, int content_type, int enc_algor, const uint8_t *iv, size_t ivlen, const uint8_t *enced_content, size_t enced_content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_implicit_signers_certs_to_der	GmSSL/src/cms.c	/^static int cms_implicit_signers_certs_to_der(int index,$/;"	f	file:	signature:(int index, const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, uint8_t **out, size_t *outlen)
cms_issuer_and_serial_number_from_der	GmSSL/include/gmssl/cms.h	/^int cms_issuer_and_serial_number_from_der($/;"	p	signature:( const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial_number, size_t *serial_number_len, const uint8_t **in, size_t *inlen)
cms_issuer_and_serial_number_from_der	GmSSL/src/cms.c	/^int cms_issuer_and_serial_number_from_der($/;"	f	signature:( const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial_number, size_t *serial_number_len, const uint8_t **in, size_t *inlen)
cms_issuer_and_serial_number_print	GmSSL/include/gmssl/cms.h	/^int cms_issuer_and_serial_number_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_issuer_and_serial_number_print	GmSSL/src/cms.c	/^int cms_issuer_and_serial_number_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_issuer_and_serial_number_to_der	GmSSL/include/gmssl/cms.h	/^int cms_issuer_and_serial_number_to_der($/;"	p	signature:( const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, uint8_t **out, size_t *outlen)
cms_issuer_and_serial_number_to_der	GmSSL/src/cms.c	/^int cms_issuer_and_serial_number_to_der($/;"	f	signature:( const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, uint8_t **out, size_t *outlen)
cms_key_agreement_info_from_der	GmSSL/include/gmssl/cms.h	/^int cms_key_agreement_info_from_der($/;"	p	signature:( int *version, SM2_KEY *temp_public_key_r, const uint8_t **user_cert, size_t *user_cert_len, const uint8_t **user_id, size_t *user_id_len, const uint8_t **in, size_t *inlen)
cms_key_agreement_info_from_der	GmSSL/src/cms.c	/^int cms_key_agreement_info_from_der($/;"	f	signature:( int *version, SM2_KEY *temp_public_key_r, const uint8_t **user_cert, size_t *user_cert_len, const uint8_t **user_id, size_t *user_id_len, const uint8_t **in, size_t *inlen)
cms_key_agreement_info_print	GmSSL/include/gmssl/cms.h	/^int cms_key_agreement_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_key_agreement_info_print	GmSSL/src/cms.c	/^int cms_key_agreement_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_key_agreement_info_to_der	GmSSL/include/gmssl/cms.h	/^int cms_key_agreement_info_to_der($/;"	p	signature:( int version, const SM2_KEY *temp_public_key_r, const uint8_t *user_cert, size_t user_cert_len, const uint8_t *user_id, size_t user_id_len, uint8_t **out, size_t *outlen)
cms_key_agreement_info_to_der	GmSSL/src/cms.c	/^int cms_key_agreement_info_to_der($/;"	f	signature:( int version, const SM2_KEY *temp_public_key_r, const uint8_t *user_cert, size_t user_cert_len, const uint8_t *user_id, size_t user_id_len, uint8_t **out, size_t *outlen)
cms_print	GmSSL/include/gmssl/cms.h	/^int cms_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
cms_print	GmSSL/src/cms.c	/^int cms_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
cms_recipient_info_decrypt_from_der	GmSSL/include/gmssl/cms.h	/^int cms_recipient_info_decrypt_from_der($/;"	p	signature:( const SM2_KEY *sm2_key, const uint8_t *rcpt_issuer, size_t rcpt_issuer_len, const uint8_t *rcpt_serial, size_t rcpt_serial_len, uint8_t *out, size_t *outlen, size_t maxlen, const uint8_t **in, size_t *inlen)
cms_recipient_info_decrypt_from_der	GmSSL/src/cms.c	/^int cms_recipient_info_decrypt_from_der($/;"	f	signature:( const SM2_KEY *sm2_key, const uint8_t *rcpt_issuer, size_t rcpt_issuer_len, const uint8_t *rcpt_serial, size_t rcpt_serial_len, uint8_t *out, size_t *outlen, size_t maxlen, const uint8_t **in, size_t *inlen)
cms_recipient_info_encrypt_to_der	GmSSL/include/gmssl/cms.h	/^int cms_recipient_info_encrypt_to_der($/;"	p	signature:( const SM2_KEY *public_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len, const uint8_t *in, size_t inlen, uint8_t **out, size_t *outlen)
cms_recipient_info_encrypt_to_der	GmSSL/src/cms.c	/^int cms_recipient_info_encrypt_to_der($/;"	f	signature:( const SM2_KEY *public_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, const uint8_t *in, size_t inlen, uint8_t **out, size_t *outlen)
cms_recipient_info_from_der	GmSSL/include/gmssl/cms.h	/^int cms_recipient_info_from_der($/;"	p	signature:( int *version, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial_number, size_t *serial_number_len, int *pke_algor, const uint8_t **params, size_t *params_len, const uint8_t **enced_key, size_t *enced_key_len, const uint8_t **in, size_t *inlen)
cms_recipient_info_from_der	GmSSL/src/cms.c	/^int cms_recipient_info_from_der($/;"	f	signature:( int *version, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial_number, size_t *serial_number_len, int *pke_algor, const uint8_t **params, size_t *params_len, const uint8_t **enced_key, size_t *enced_key_len, const uint8_t **in, size_t *inlen)
cms_recipient_info_print	GmSSL/include/gmssl/cms.h	/^int cms_recipient_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_recipient_info_print	GmSSL/src/cms.c	/^int cms_recipient_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_recipient_info_to_der	GmSSL/include/gmssl/cms.h	/^int cms_recipient_info_to_der($/;"	p	signature:( int version, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, int public_key_enc_algor, const uint8_t *enced_key, size_t enced_key_len, uint8_t **out, size_t *outlen)
cms_recipient_info_to_der	GmSSL/src/cms.c	/^int cms_recipient_info_to_der($/;"	f	signature:( int version, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, int public_key_enc_algor, const uint8_t *enced_key, size_t enced_key_len, uint8_t **out, size_t *outlen)
cms_recipient_infos_add_recipient_info	GmSSL/include/gmssl/cms.h	/^int cms_recipient_infos_add_recipient_info($/;"	p	signature:( uint8_t *d, size_t *dlen, size_t maxlen, const SM2_KEY *public_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len, const uint8_t *in, size_t inlen)
cms_recipient_infos_add_recipient_info	GmSSL/src/cms.c	/^int cms_recipient_infos_add_recipient_info($/;"	f	signature:( uint8_t *d, size_t *dlen, size_t maxlen, const SM2_KEY *public_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len, const uint8_t *in, size_t inlen)
cms_recipient_infos_from_der	GmSSL/include/gmssl/cms.h	368;"	d
cms_recipient_infos_print	GmSSL/include/gmssl/cms.h	/^int cms_recipient_infos_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_recipient_infos_print	GmSSL/src/cms.c	/^int cms_recipient_infos_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_recipient_infos_to_der	GmSSL/include/gmssl/cms.h	367;"	d
cms_set_data	GmSSL/include/gmssl/cms.h	/^int cms_set_data(uint8_t *cms, size_t *cmslen,$/;"	p	signature:(uint8_t *cms, size_t *cmslen, const uint8_t *d, size_t dlen)
cms_set_data	GmSSL/src/cms.c	/^int cms_set_data(uint8_t *cms, size_t *cmslen, const uint8_t *d, size_t dlen)$/;"	f	signature:(uint8_t *cms, size_t *cmslen, const uint8_t *d, size_t dlen)
cms_set_key_agreement_info	GmSSL/include/gmssl/cms.h	/^int cms_set_key_agreement_info($/;"	p	signature:( uint8_t *cms, size_t *cms_len, const SM2_KEY *temp_public_key_r, const uint8_t *user_cert, size_t user_cert_len, const uint8_t *user_id, size_t user_id_len)
cms_set_key_agreement_info	GmSSL/src/cms.c	/^int cms_set_key_agreement_info($/;"	f	signature:( uint8_t *cms, size_t *cmslen, const SM2_KEY *temp_public_key_r, const uint8_t *user_cert, size_t user_cert_len, const uint8_t *user_id, size_t user_id_len)
cms_sign	GmSSL/include/gmssl/cms.h	/^int cms_sign($/;"	p	signature:( uint8_t *cms, size_t *cms_len, const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, int content_type, const uint8_t *content, size_t content_len, const uint8_t *crls, size_t crls_len)
cms_sign	GmSSL/src/cms.c	/^int cms_sign(uint8_t *cms, size_t *cmslen,$/;"	f	signature:(uint8_t *cms, size_t *cmslen, const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, int content_type, const uint8_t *content, size_t content_len, const uint8_t *crls, size_t crls_len)
cms_sign_and_envelop	GmSSL/include/gmssl/cms.h	/^int cms_sign_and_envelop($/;"	p	signature:( uint8_t *cms, size_t *cms_len, const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, const uint8_t *rcpt_certs, size_t rcpt_certs_len, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *signers_crls, size_t signers_crls_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len)
cms_sign_and_envelop	GmSSL/src/cms.c	/^int cms_sign_and_envelop(uint8_t *cms, size_t *cmslen,$/;"	f	signature:(uint8_t *cms, size_t *cmslen, const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, const uint8_t *rcpt_certs, size_t rcpt_certs_len, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *crls, size_t crls_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len)
cms_signed_and_enveloped_data_decipher_from_der	GmSSL/include/gmssl/cms.h	/^int cms_signed_and_enveloped_data_decipher_from_der($/;"	p	signature:( const SM2_KEY *rcpt_key, const uint8_t *rcpt_issuer, size_t rcpt_issuer_len, const uint8_t *rcpt_serial, size_t rcpt_serial_len, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **prcpt_infos, size_t *prcpt_infos_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **psigner_infos, size_t *psigner_infos_len, const uint8_t *extra_certs, size_t extra_certs_len, const uint8_t *extra_crls, size_t extra_crls_len, const uint8_t **in, size_t *inlen)
cms_signed_and_enveloped_data_decipher_from_der	GmSSL/src/cms.c	/^int cms_signed_and_enveloped_data_decipher_from_der($/;"	f	signature:( const SM2_KEY *rcpt_key, const uint8_t *rcpt_issuer, size_t rcpt_issuer_len, const uint8_t *rcpt_serial, size_t rcpt_serial_len, int *content_type, uint8_t *content, size_t *content_len, const uint8_t **prcpt_infos, size_t *prcpt_infos_len, const uint8_t **shared_info1, size_t *shared_info1_len, const uint8_t **shared_info2, size_t *shared_info2_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **psigner_infos, size_t *psigner_infos_len, const uint8_t *extra_certs, size_t extra_certs_len, const uint8_t *extra_crls, size_t extra_crls_len, const uint8_t **in, size_t *inlen)
cms_signed_and_enveloped_data_encipher_to_der	GmSSL/include/gmssl/cms.h	/^int cms_signed_and_enveloped_data_encipher_to_der($/;"	p	signature:( const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, const uint8_t *rcpt_certs, size_t rcpt_certs_len, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *signers_crls, size_t signers_crls_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_signed_and_enveloped_data_encipher_to_der	GmSSL/src/cms.c	/^int cms_signed_and_enveloped_data_encipher_to_der($/;"	f	signature:( const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, const uint8_t *rcpt_certs, size_t rcpt_certs_len, int enc_algor, const uint8_t *key, size_t keylen, const uint8_t *iv, size_t ivlen, int content_type, const uint8_t *content, size_t content_len, const uint8_t *signers_crls, size_t signers_crls_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, uint8_t **out, size_t *outlen)
cms_signed_and_enveloped_data_from_der	GmSSL/include/gmssl/cms.h	/^int cms_signed_and_enveloped_data_from_der($/;"	p	signature:( int *version, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, int *digest_algors, size_t *digest_algors_cnt, size_t max_digest_algors, const uint8_t **enced_content_info, size_t *enced_content_info_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **signer_infos, size_t *signer_infos_len, const uint8_t **in, size_t *inlen)
cms_signed_and_enveloped_data_from_der	GmSSL/src/cms.c	/^int cms_signed_and_enveloped_data_from_der($/;"	f	signature:( int *version, const uint8_t **rcpt_infos, size_t *rcpt_infos_len, int *digest_algors, size_t *digest_algors_cnt, size_t max_digest_algors, const uint8_t **enced_content_info, size_t *enced_content_info_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **signer_infos, size_t *signer_infos_len, const uint8_t **in, size_t *inlen)
cms_signed_and_enveloped_data_print	GmSSL/include/gmssl/cms.h	/^int cms_signed_and_enveloped_data_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_signed_and_enveloped_data_print	GmSSL/src/cms.c	/^int cms_signed_and_enveloped_data_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_signed_and_enveloped_data_to_der	GmSSL/include/gmssl/cms.h	/^int cms_signed_and_enveloped_data_to_der($/;"	p	signature:( int version, const uint8_t *rcpt_infos, size_t rcpt_infos_len, const int *digest_algors, size_t digest_algors_cnt, int content_type, int enc_algor, const uint8_t *iv, size_t ivlen, const uint8_t *enced_content, size_t enced_content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, const uint8_t *certs, size_t certs_len, const uint8_t *crls, size_t crls_len, const uint8_t *signer_infos, size_t signer_infos_len, uint8_t **out, size_t *outlen)
cms_signed_and_enveloped_data_to_der	GmSSL/src/cms.c	/^int cms_signed_and_enveloped_data_to_der($/;"	f	signature:( int version, const uint8_t *rcpt_infos, size_t rcpt_infos_len, const int *digest_algors, size_t digest_algors_cnt, int content_type, int enc_algor, const uint8_t *iv, size_t ivlen, const uint8_t *enced_content, size_t enced_content_len, const uint8_t *shared_info1, size_t shared_info1_len, const uint8_t *shared_info2, size_t shared_info2_len, const uint8_t *certs, size_t certs_len, const uint8_t *crls, size_t crls_len, const uint8_t *signer_infos, size_t signer_infos_len, uint8_t **out, size_t *outlen)
cms_signed_data_from_der	GmSSL/include/gmssl/cms.h	/^int cms_signed_data_from_der($/;"	p	signature:( int *version, int *digest_algors, size_t *digest_algors_cnt, size_t max_digest_algors, int *content_type, const uint8_t **content, size_t *content_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **signer_infos, size_t *signer_infos_len, const uint8_t **in, size_t *inlen)
cms_signed_data_from_der	GmSSL/src/cms.c	/^int cms_signed_data_from_der($/;"	f	signature:( int *version, int *digest_algors, size_t *digest_algors_cnt, size_t max_digest_algors, int *content_type, const uint8_t **content, size_t *content_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **signer_infos, size_t *signer_infos_len, const uint8_t **in, size_t *inlen)
cms_signed_data_print	GmSSL/include/gmssl/cms.h	/^int cms_signed_data_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_signed_data_print	GmSSL/src/cms.c	/^int cms_signed_data_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_signed_data_sign_to_der	GmSSL/include/gmssl/cms.h	/^int cms_signed_data_sign_to_der($/;"	p	signature:( const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, int content_type, const uint8_t *data, size_t datalen, const uint8_t *crls, size_t crls_len, uint8_t **out, size_t *outlen)
cms_signed_data_sign_to_der	GmSSL/src/cms.c	/^int cms_signed_data_sign_to_der($/;"	f	signature:( const CMS_CERTS_AND_KEY *signers, size_t signers_cnt, int content_type, const uint8_t *data, size_t datalen, const uint8_t *crls, size_t crls_len, uint8_t **out, size_t *outlen)
cms_signed_data_to_der	GmSSL/include/gmssl/cms.h	/^int cms_signed_data_to_der($/;"	p	signature:( int version, const int *digest_algors, size_t digest_algors_cnt, const int content_type, const uint8_t *content, const size_t content_len, const uint8_t *certs, size_t certs_len, const uint8_t *crls, const size_t crls_len, const uint8_t *signer_infos, size_t signer_infos_len, uint8_t **out, size_t *outlen)
cms_signed_data_to_der	GmSSL/src/cms.c	/^int cms_signed_data_to_der($/;"	f	signature:( int version, const int *digest_algors, size_t digest_algors_cnt, const int content_type, const uint8_t *content, const size_t content_len, const uint8_t *certs, size_t certs_len, const uint8_t *crls, const size_t crls_len, const uint8_t *signer_infos, size_t signer_infos_len, uint8_t **out, size_t *outlen)
cms_signed_data_verify_from_der	GmSSL/include/gmssl/cms.h	/^int cms_signed_data_verify_from_der($/;"	p	signature:( const uint8_t *extra_certs, size_t extra_certs_len, const uint8_t *extra_crls, size_t extra_crls_len, int *content_type, const uint8_t **content, size_t *content_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **signer_infos, size_t *signer_infos_len, const uint8_t **in, size_t *inlen)
cms_signed_data_verify_from_der	GmSSL/src/cms.c	/^int cms_signed_data_verify_from_der($/;"	f	signature:( const uint8_t *extra_certs, size_t extra_certs_len, const uint8_t *extra_crls, size_t extra_crls_len, int *content_type, const uint8_t **content, size_t *content_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **psigner_infos, size_t *psigner_infos_len, const uint8_t **in, size_t *inlen)
cms_signer_info_from_der	GmSSL/include/gmssl/cms.h	/^int cms_signer_info_from_der($/;"	p	signature:( int *version, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial_number, size_t *serial_number_len, int *digest_algor, const uint8_t **authed_attrs, size_t *authed_attrs_len, int *signature_algor, const uint8_t **enced_digest, size_t *enced_digest_len, const uint8_t **unauthed_attrs, size_t *unauthed_attrs_len, const uint8_t **in, size_t *inlen)
cms_signer_info_from_der	GmSSL/src/cms.c	/^int cms_signer_info_from_der($/;"	f	signature:( int *version, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial_number, size_t *serial_number_len, int *digest_algor, const uint8_t **authed_attrs, size_t *authed_attrs_len, int *signature_algor, const uint8_t **enced_digest, size_t *enced_digest_len, const uint8_t **unauthed_attrs, size_t *unauthed_attrs_len, const uint8_t **in, size_t *inlen)
cms_signer_info_print	GmSSL/include/gmssl/cms.h	/^int cms_signer_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_signer_info_print	GmSSL/src/cms.c	/^int cms_signer_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_signer_info_sign_to_der	GmSSL/include/gmssl/cms.h	/^int cms_signer_info_sign_to_der($/;"	p	signature:( const SM3_CTX *sm3_ctx, const SM2_KEY *sm2_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, const uint8_t *authed_attrs, size_t authed_attrs_len, const uint8_t *unauthed_attrs, size_t unauthed_attrs_len, uint8_t **out, size_t *outlen)
cms_signer_info_sign_to_der	GmSSL/src/cms.c	/^int cms_signer_info_sign_to_der($/;"	f	signature:( const SM3_CTX *sm3_ctx, const SM2_KEY *sign_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, const uint8_t *authed_attrs, size_t authed_attrs_len, const uint8_t *unauthed_attrs, size_t unauthed_attrs_len, uint8_t **out, size_t *outlen)
cms_signer_info_to_der	GmSSL/include/gmssl/cms.h	/^int cms_signer_info_to_der($/;"	p	signature:( int version, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, int digest_algor, const uint8_t *authed_attrs, size_t authed_attrs_len, int signature_algor, const uint8_t *enced_digest, size_t enced_digest_len, const uint8_t *unauthed_attrs, size_t unauthed_attrs_len, uint8_t **out, size_t *outlen)
cms_signer_info_to_der	GmSSL/src/cms.c	/^int cms_signer_info_to_der($/;"	f	signature:( int version, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, int digest_algor, const uint8_t *authed_attrs, size_t authed_attrs_len, int signature_algor, const uint8_t *enced_digest, size_t enced_digest_len, const uint8_t *unauthed_attrs, size_t unauthed_attrs_len, uint8_t **out, size_t *outlen)
cms_signer_info_verify_from_der	GmSSL/include/gmssl/cms.h	/^int cms_signer_info_verify_from_der($/;"	p	signature:( const SM3_CTX *sm3_ctx, const uint8_t *certs, size_t certslen, const uint8_t **cert, size_t *certlen, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial, size_t *serial_len, const uint8_t **authed_attrs, size_t *authed_attrs_len, const uint8_t **unauthed_attrs, size_t *unauthed_attrs_len, const uint8_t **in, size_t *inlen)
cms_signer_info_verify_from_der	GmSSL/src/cms.c	/^int cms_signer_info_verify_from_der($/;"	f	signature:( const SM3_CTX *ctx, const uint8_t *certs, size_t certslen, const uint8_t **cert, size_t *certlen, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial, size_t *serial_len, const uint8_t **authed_attrs, size_t *authed_attrs_len, const uint8_t **unauthed_attrs, size_t *unauthed_attrs_len, const uint8_t **in, size_t *inlen)
cms_signer_infos_add_signer_info	GmSSL/include/gmssl/cms.h	/^int cms_signer_infos_add_signer_info($/;"	p	signature:( uint8_t *d, size_t *dlen, size_t maxlen, const SM3_CTX *sm3_ctx, const SM2_KEY *sign_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, const uint8_t *authed_attrs, size_t authed_attrs_len, const uint8_t *unauthed_attrs, size_t unauthed_attrs_len)
cms_signer_infos_add_signer_info	GmSSL/src/cms.c	/^int cms_signer_infos_add_signer_info($/;"	f	signature:( uint8_t *d, size_t *dlen, size_t maxlen, const SM3_CTX *sm3_ctx, const SM2_KEY *sign_key, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial_number, size_t serial_number_len, const uint8_t *authed_attrs, size_t authed_attrs_len, const uint8_t *unauthed_attrs, size_t unauthed_attrs_len)
cms_signer_infos_from_der	GmSSL/include/gmssl/cms.h	266;"	d
cms_signer_infos_print	GmSSL/include/gmssl/cms.h	/^int cms_signer_infos_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_signer_infos_print	GmSSL/src/cms.c	/^int cms_signer_infos_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
cms_signer_infos_to_der	GmSSL/include/gmssl/cms.h	265;"	d
cms_verify	GmSSL/include/gmssl/cms.h	/^int cms_verify($/;"	p	signature:( const uint8_t *cms, size_t cms_len, const uint8_t *extra_certs, size_t extra_certs_len, const uint8_t *extra_crls, size_t extra_crls_len, int *content_type, const uint8_t **content, size_t *content_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **signer_infos, size_t *signer_infos_len)
cms_verify	GmSSL/src/cms.c	/^int cms_verify(const uint8_t *cms, size_t cmslen,$/;"	f	signature:(const uint8_t *cms, size_t cmslen, const uint8_t *extra_certs, size_t extra_certs_len, const uint8_t *extra_crls, size_t extra_crls_len, int *content_type, const uint8_t **content, size_t *content_len, const uint8_t **certs, size_t *certs_len, const uint8_t **crls, size_t *crls_len, const uint8_t **signer_infos, size_t *signer_infos_len)
cnt	GmSSL/tests/x509_exttest.c	61;"	d	file:
coef	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char coef[RSAref_MAX_PLEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
const	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
container_handle	GmSSL/include/gmssl/skf.h	/^	void *container_handle;$/;"	m	struct:__anon32	access:public
container_name	GmSSL/include/gmssl/skf.h	/^	char container_name[65];$/;"	m	struct:__anon32	access:public
conv_ascii2bin	GmSSL/src/base64.c	/^static unsigned char conv_ascii2bin(unsigned char a)$/;"	f	file:	signature:(unsigned char a)
conv_ascii2bin	GmSSL/src/base64.c	/^static unsigned char conv_ascii2bin(unsigned char a);$/;"	p	file:	signature:(unsigned char a)
conv_bin2ascii	GmSSL/src/base64.c	19;"	d	file:
count	GmSSL/tests/sha224test.c	/^	size_t count;$/;"	m	struct:__anon5	file:	access:public
count	GmSSL/tests/sha256test.c	/^	size_t count;$/;"	m	struct:__anon9	file:	access:public
count	GmSSL/tests/sha384test.c	/^	size_t count;$/;"	m	struct:__anon12	file:	access:public
count	GmSSL/tests/sha512test.c	/^	size_t count;$/;"	m	struct:__anon10	file:	access:public
crlparse_main	GmSSL/tools/crlparse.c	/^int crlparse_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
crlparse_main	GmSSL/tools/gmssl.c	/^extern int crlparse_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
ctr	GmSSL/include/gmssl/sm4.h	/^	uint8_t ctr[SM4_BLOCK_SIZE];$/;"	m	struct:__anon64	access:public
ctr	GmSSL/sm4.h	/^	uint8_t ctr[SM4_BLOCK_SIZE];$/;"	m	struct:__anon80	access:public
ctr	GmSSL/src/sm4.h	/^	uint8_t ctr[SM4_BLOCK_SIZE];$/;"	m	struct:__anon84	access:public
ctr_incr	GmSSL/sm4_modes.c	/^static void ctr_incr(uint8_t a[16])$/;"	f	file:	signature:(uint8_t a[16])
ctr_incr	GmSSL/src/aes_modes.c	/^static void ctr_incr(uint8_t a[16])$/;"	f	file:	signature:(uint8_t a[16])
ctr_incr	GmSSL/src/sm4_modes.c	/^static void ctr_incr(uint8_t a[16])$/;"	f	file:	signature:(uint8_t a[16])
ctx_size	GmSSL/include/gmssl/digest.h	/^	size_t ctx_size;$/;"	m	struct:DIGEST	access:public
d	GmSSL/include/gmssl/chacha20.h	/^	uint32_t d[16];$/;"	m	struct:__anon38	access:public
d	GmSSL/include/gmssl/rc4.h	/^	uint8_t d[RC4_STATE_NUM_WORDS];$/;"	m	struct:__anon65	access:public
d	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char d[RSAref_MAX_LEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
data	GmSSL/tests/hmactest.c	/^	char *data;$/;"	m	struct:__anon6	file:	access:public
data	GmSSL/tests/sha224test.c	/^	char *data;$/;"	m	struct:__anon5	file:	access:public
data	GmSSL/tests/sha256test.c	/^	char *data;$/;"	m	struct:__anon9	file:	access:public
data	GmSSL/tests/sha384test.c	/^	char *data;$/;"	m	struct:__anon12	file:	access:public
data	GmSSL/tests/sha512test.c	/^	char *data;$/;"	m	struct:__anon10	file:	access:public
data_ascii2bin	GmSSL/src/base64.c	/^static const unsigned char data_ascii2bin[128] = {$/;"	v	file:
data_bin2ascii	GmSSL/src/base64.c	/^static const unsigned char data_bin2ascii[65] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ\\$/;"	v	file:
dec	baseSM4.c	/^void dec(u32 c[],u32* rk)$/;"	f	signature:(u32 c[],u32* rk)
decode_ecccipher	GmSSL/tools/sdfutil/sdf_int.h	/^	int (*decode_ecccipher)(ECCCipher *a, const void *buf);$/;"	m	struct:sdf_vendor_st	access:public
decrypt	GmSSL/include/gmssl/block_cipher.h	/^	block_cipher_decrypt_func decrypt;$/;"	m	struct:BLOCK_CIPHER	access:public
des_ede_encrypt	GmSSL/include/gmssl/des.h	/^void des_ede_encrypt(DES_EDE_KEY *key, const uint8_t in[DES_BLOCK_SIZE], uint8_t out[DES_BLOCK_SIZE]);$/;"	p	signature:(DES_EDE_KEY *key, const uint8_t in[DES_BLOCK_SIZE], uint8_t out[DES_BLOCK_SIZE])
des_ede_set_decrypt_key	GmSSL/include/gmssl/des.h	/^void des_ede_set_decrypt_key(DES_EDE_KEY *key, const uint8_t raw_key[DES_EDE_KEY_SIZE]);$/;"	p	signature:(DES_EDE_KEY *key, const uint8_t raw_key[DES_EDE_KEY_SIZE])
des_ede_set_encrypt_key	GmSSL/include/gmssl/des.h	/^void des_ede_set_encrypt_key(DES_EDE_KEY *key, const uint8_t raw_key[DES_EDE_KEY_SIZE]);$/;"	p	signature:(DES_EDE_KEY *key, const uint8_t raw_key[DES_EDE_KEY_SIZE])
des_encrypt	GmSSL/include/gmssl/des.h	/^void des_encrypt(DES_KEY *key, const uint8_t in[DES_BLOCK_SIZE], uint8_t out[DES_BLOCK_SIZE]);$/;"	p	signature:(DES_KEY *key, const uint8_t in[DES_BLOCK_SIZE], uint8_t out[DES_BLOCK_SIZE])
des_encrypt	GmSSL/src/des.c	/^void des_encrypt(DES_KEY *key, const unsigned char in[DES_BLOCK_SIZE],$/;"	f	signature:(DES_KEY *key, const unsigned char in[DES_BLOCK_SIZE], unsigned char out[DES_BLOCK_SIZE])
des_set_decrypt_key	GmSSL/include/gmssl/des.h	/^void des_set_decrypt_key(DES_KEY *key, const uint8_t raw_key[DES_KEY_SIZE]);$/;"	p	signature:(DES_KEY *key, const uint8_t raw_key[DES_KEY_SIZE])
des_set_decrypt_key	GmSSL/src/des.c	/^void des_set_decrypt_key(DES_KEY *key, const unsigned char user_key[8])$/;"	f	signature:(DES_KEY *key, const unsigned char user_key[8])
des_set_encrypt_key	GmSSL/include/gmssl/des.h	/^void des_set_encrypt_key(DES_KEY *key, const uint8_t raw_key[DES_KEY_SIZE]);$/;"	p	signature:(DES_KEY *key, const uint8_t raw_key[DES_KEY_SIZE])
des_set_encrypt_key	GmSSL/src/des.c	/^void des_set_encrypt_key(DES_KEY *key, const unsigned char user_key[8])$/;"	f	signature:(DES_KEY *key, const unsigned char user_key[8])
description	GmSSL/include/gmssl/asn1.h	/^	char *description;$/;"	m	struct:__anon41	access:public
deviceHandle	GmSSL/tools/sdfutil/sdf_dummy.c	/^static char *deviceHandle = "SDF Device Handle";$/;"	v	file:
device_handle	GmSSL/include/gmssl/sdf.h	/^	void *device_handle;$/;"	m	struct:__anon67	access:public
device_issuer	GmSSL/include/gmssl/sdf.h	/^	char device_issuer[41];$/;"	m	struct:__anon67	access:public
device_name	GmSSL/include/gmssl/sdf.h	/^	char device_name[17];$/;"	m	struct:__anon67	access:public
device_serial	GmSSL/include/gmssl/sdf.h	/^	char device_serial[17];$/;"	m	struct:__anon67	access:public
dgsthex	GmSSL/tests/md5test.c	/^static char *dgsthex[] = {$/;"	v	file:
dgsthex	GmSSL/tests/sha1test.c	/^static char *dgsthex[] = {$/;"	v	file:
dgsthex	GmSSL/tests/sha224test.c	/^	char *dgsthex;$/;"	m	struct:__anon5	file:	access:public
dgsthex	GmSSL/tests/sha256test.c	/^	char *dgsthex;$/;"	m	struct:__anon9	file:	access:public
dgsthex	GmSSL/tests/sha384test.c	/^	char *dgsthex;$/;"	m	struct:__anon12	file:	access:public
dgsthex	GmSSL/tests/sha512test.c	/^	char *dgsthex;$/;"	m	struct:__anon10	file:	access:public
dgsthex	GmSSL/tests/sm3test.c	/^static char *dgsthex[] = {$/;"	v	file:
digest	GmSSL/include/gmssl/digest.h	/^	const DIGEST *digest;$/;"	m	struct:DIGEST_CTX	access:public
digest	GmSSL/include/gmssl/digest.h	/^int digest(const DIGEST *digest, const uint8_t *data, size_t datalen, uint8_t *dgst, size_t *dgstlen);$/;"	p	signature:(const DIGEST *digest, const uint8_t *data, size_t datalen, uint8_t *dgst, size_t *dgstlen)
digest	GmSSL/include/gmssl/hash_drbg.h	/^	const DIGEST *digest;$/;"	m	struct:__anon73	access:public
digest	GmSSL/include/gmssl/hmac.h	/^	const DIGEST *digest;$/;"	m	struct:hmac_ctx_st	access:public
digest	GmSSL/include/gmssl/sm3.h	/^	uint32_t digest[SM3_STATE_WORDS];$/;"	m	struct:__anon59	access:public
digest	GmSSL/src/digest.c	/^int digest(const DIGEST *digest, const uint8_t *data, size_t datalen,$/;"	f	signature:(const DIGEST *digest, const uint8_t *data, size_t datalen, uint8_t *dgst, size_t *dgstlen)
digest_cap	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*digest_cap)(unsigned int vendor_cap);$/;"	m	struct:sdf_vendor_st	access:public
digest_ctx	GmSSL/include/gmssl/hmac.h	/^	DIGEST_CTX digest_ctx;$/;"	m	struct:hmac_ctx_st	access:public
digest_finish	GmSSL/include/gmssl/digest.h	/^int digest_finish(DIGEST_CTX *ctx, uint8_t *dgst, size_t *dgstlen);$/;"	p	signature:(DIGEST_CTX *ctx, uint8_t *dgst, size_t *dgstlen)
digest_finish	GmSSL/src/digest.c	/^int digest_finish(DIGEST_CTX *ctx, uint8_t *dgst, size_t *dgstlen)$/;"	f	signature:(DIGEST_CTX *ctx, uint8_t *dgst, size_t *dgstlen)
digest_from_name	GmSSL/include/gmssl/digest.h	/^const DIGEST *digest_from_name(const char *name);$/;"	p	signature:(const char *name)
digest_from_name	GmSSL/src/digest.c	/^const DIGEST *digest_from_name(const char *name)$/;"	f	signature:(const char *name)
digest_init	GmSSL/include/gmssl/digest.h	/^int digest_init(DIGEST_CTX *ctx, const DIGEST *algor);$/;"	p	signature:(DIGEST_CTX *ctx, const DIGEST *algor)
digest_init	GmSSL/src/digest.c	/^int digest_init(DIGEST_CTX *ctx, const DIGEST *algor)$/;"	f	signature:(DIGEST_CTX *ctx, const DIGEST *algor)
digest_name	GmSSL/include/gmssl/digest.h	/^const char *digest_name(const DIGEST *digest);$/;"	p	signature:(const DIGEST *digest)
digest_name	GmSSL/src/digest.c	/^const char *digest_name(const DIGEST *digest)$/;"	f	signature:(const DIGEST *digest)
digest_size	GmSSL/include/gmssl/digest.h	/^	size_t digest_size;$/;"	m	struct:DIGEST	access:public
digest_std2vendor	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*digest_std2vendor)(unsigned int std_id);$/;"	m	struct:sdf_vendor_st	access:public
digest_table	GmSSL/src/digest.c	/^DIGEST_TABLE digest_table[] = {$/;"	v
digest_update	GmSSL/include/gmssl/digest.h	/^int digest_update(DIGEST_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(DIGEST_CTX *ctx, const uint8_t *data, size_t datalen)
digest_update	GmSSL/src/digest.c	/^int digest_update(DIGEST_CTX *ctx, const uint8_t *data, size_t datalen)$/;"	f	signature:(DIGEST_CTX *ctx, const uint8_t *data, size_t datalen)
digest_vendor2std	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*digest_vendor2std)(unsigned int vendor_id);$/;"	m	struct:sdf_vendor_st	access:public
digests	GmSSL/tests/digesttest.c	/^const char *digests[] = {$/;"	v
display_name	GmSSL/src/digest.c	/^	char *display_name;$/;"	m	struct:__anon81	file:	access:public
dk	GmSSL/tests/pbkdf2test.c	/^	char *dk;$/;"	m	struct:__anon13	file:	access:public
dklen	GmSSL/tests/pbkdf2test.c	/^	int dklen;$/;"	m	struct:__anon13	file:	access:public
do_trace	GmSSL/include/gmssl/tls.h	/^	int do_trace;$/;"	m	struct:__anon30	access:public
drbg_add	GmSSL/src/hash_drbg.c	/^static void drbg_add(uint8_t *R, const uint8_t *A, size_t seedlen)$/;"	f	file:	signature:(uint8_t *R, const uint8_t *A, size_t seedlen)
drbg_add1	GmSSL/src/hash_drbg.c	/^static void drbg_add1(uint8_t *R, size_t seedlen)$/;"	f	file:	signature:(uint8_t *R, size_t seedlen)
drbg_hashgen	GmSSL/src/hash_drbg.c	/^static int drbg_hashgen(HASH_DRBG *drbg, size_t outlen, uint8_t *out)$/;"	f	file:	signature:(HASH_DRBG *drbg, size_t outlen, uint8_t *out)
dso	GmSSL/tools/sdfutil/sdf_int.h	/^	void *dso;$/;"	m	struct:sdf_method_st	access:public
e	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char e[RSAref_MAX_LEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
e	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char e[RSAref_MAX_LEN];$/;"	m	struct:RSArefPublicKey_st	access:public
ec_named_curve_from_der	GmSSL/include/gmssl/ec.h	/^int ec_named_curve_from_der(int *curve, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *curve, const uint8_t **in, size_t *inlen)
ec_named_curve_from_der	GmSSL/src/ec.c	/^int ec_named_curve_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
ec_named_curve_from_name	GmSSL/include/gmssl/ec.h	/^int ec_named_curve_from_name(const char *name);$/;"	p	signature:(const char *name)
ec_named_curve_from_name	GmSSL/src/ec.c	/^int ec_named_curve_from_name(const char *name)$/;"	f	signature:(const char *name)
ec_named_curve_name	GmSSL/include/gmssl/ec.h	/^const char *ec_named_curve_name(int curve);$/;"	p	signature:(int curve)
ec_named_curve_name	GmSSL/src/ec.c	/^const char *ec_named_curve_name(int oid)$/;"	f	signature:(int oid)
ec_named_curve_to_der	GmSSL/include/gmssl/ec.h	/^int ec_named_curve_to_der(int curve, uint8_t **out, size_t *outlen);$/;"	p	signature:(int curve, uint8_t **out, size_t *outlen)
ec_named_curve_to_der	GmSSL/src/ec.c	/^int ec_named_curve_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
ec_named_curves	GmSSL/src/ec.c	/^static const ASN1_OID_INFO ec_named_curves[] = {$/;"	v	file:
ec_named_curves_count	GmSSL/src/ec.c	/^static const int ec_named_curves_count =$/;"	v	file:
ec_point_print	GmSSL/include/gmssl/ec.h	/^int ec_point_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
ec_point_print	GmSSL/src/ec.c	/^int ec_point_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
ec_private_key_print	GmSSL/include/gmssl/ec.h	/^int ec_private_key_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
ec_private_key_print	GmSSL/src/ec.c	/^int ec_private_key_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
eccPrivateKeyBuf	GmSSL/tools/sdfutil/sdf_dummy.c	/^unsigned char eccPrivateKeyBuf[68] = {$/;"	v
eccPublicKeyBuf	GmSSL/tools/sdfutil/sdf_dummy.c	/^unsigned char eccPublicKeyBuf[132] = {$/;"	v
enc	baseSM4.c	/^void enc(u32 m[],u32* rk)$/;"	f	signature:(u32 m[],u32* rk)
enc_data	GmSSL/include/gmssl/base64.h	/^    unsigned char enc_data[80];$/;"	m	struct:__anon40	access:public
encode_ecccipher	GmSSL/tools/sdfutil/sdf_int.h	/^	int (*encode_ecccipher)(const ECCCipher *a, void *buf);$/;"	m	struct:sdf_vendor_st	access:public
encrypt	GmSSL/include/gmssl/block_cipher.h	/^	block_cipher_encrypt_func encrypt;$/;"	m	struct:BLOCK_CIPHER	access:public
error_print	GmSSL/include/gmssl/error.h	72;"	d
error_print_msg	GmSSL/include/gmssl/error.h	75;"	d
error_puts	GmSSL/include/gmssl/error.h	78;"	d
ex_key	GmSSL/include/gmssl/tls.h	/^	SM2_KEY ex_key;$/;"	m	struct:__anon28	access:public
expect_nl	GmSSL/include/gmssl/base64.h	/^    int expect_nl;$/;"	m	struct:__anon40	access:public
ext_key_usage_set	GmSSL/tools/certgen.c	/^static int ext_key_usage_set(int *usages, const char *usage_name)$/;"	f	file:	signature:(int *usages, const char *usage_name)
ext_key_usage_set	GmSSL/tools/reqsign.c	/^static int ext_key_usage_set(int *usages, const char *usage_name)$/;"	f	file:	signature:(int *usages, const char *usage_name)
finish	GmSSL/include/gmssl/digest.h	/^	int (*finish)(DIGEST_CTX *ctx, uint8_t *dgst);$/;"	m	struct:DIGEST	access:public
firmware_version	GmSSL/include/gmssl/skf.h	/^	uint8_t firmware_version[2];$/;"	m	struct:__anon31	access:public
flags	GmSSL/include/gmssl/asn1.h	/^	int flags;$/;"	m	struct:__anon41	access:public
format_bytes	GmSSL/include/gmssl/error.h	/^int format_bytes(FILE *fp, int format, int indent, const char *str, const uint8_t *data, size_t datalen);$/;"	p	signature:(FILE *fp, int format, int indent, const char *str, const uint8_t *data, size_t datalen)
format_bytes	GmSSL/src/debug.c	/^int format_bytes(FILE *fp, int format, int indent, const char *str, const uint8_t *data, size_t datalen)$/;"	f	signature:(FILE *fp, int format, int indent, const char *str, const uint8_t *data, size_t datalen)
format_bytes	GmSSL/tools/sdfutil/sdf_ext.c	/^int format_bytes(FILE *out, int indent, int format, const uint8_t *data, size_t datalen)$/;"	f	signature:(FILE *out, int indent, int format, const uint8_t *data, size_t datalen)
format_print	GmSSL/include/gmssl/error.h	/^int format_print(FILE *fp, int format, int indent, const char *str, ...);$/;"	p	signature:(FILE *fp, int format, int indent, const char *str, ...)
format_print	GmSSL/src/debug.c	/^int format_print(FILE *fp, int format, int indent, const char *str, ...)$/;"	f	signature:(FILE *fp, int format, int indent, const char *str, ...)
format_string	GmSSL/include/gmssl/error.h	/^int format_string(FILE *fp, int format, int indent, const char *str, const uint8_t *data, size_t datalen);$/;"	p	signature:(FILE *fp, int format, int indent, const char *str, const uint8_t *data, size_t datalen)
format_string	GmSSL/src/debug.c	/^int format_string(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
gcm_decrypt	GmSSL/include/gmssl/gcm.h	/^int gcm_decrypt(const BLOCK_CIPHER_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
gcm_decrypt	GmSSL/src/gcm.c	/^int gcm_decrypt(const BLOCK_CIPHER_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
gcm_encrypt	GmSSL/include/gmssl/gcm.h	/^int gcm_encrypt(const BLOCK_CIPHER_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
gcm_encrypt	GmSSL/src/gcm.c	/^int gcm_encrypt(const BLOCK_CIPHER_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
gen_k0	oSM4.c	/^void gen_k0(uint32_t key[])$/;"	f	signature:(uint32_t key[])
gen_key	oSM4.c	/^uint32_t gen_key(uint32_t k0, uint32_t k1, uint32_t k2, uint32_t k3, uint32_t ck)$/;"	f	signature:(uint32_t k0, uint32_t k1, uint32_t k2, uint32_t k3, uint32_t ck)
general_names	GmSSL/tests/x509_exttest.c	/^uint8_t general_names[202] = {$/;"	v
get_error_reason	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned long (*get_error_reason)(int err);$/;"	m	struct:sdf_vendor_st	access:public
get_rnd_key	oSM4.c	/^void get_rnd_key(uint32_t* key) {$/;"	f	signature:(uint32_t* key)
gf128_add	GmSSL/include/gmssl/gf128.h	/^gf128_t gf128_add(gf128_t a, gf128_t b);$/;"	p	signature:(gf128_t a, gf128_t b)
gf128_add	GmSSL/src/gf128.c	/^gf128_t gf128_add(gf128_t a, gf128_t b)$/;"	f	signature:(gf128_t a, gf128_t b)
gf128_equ_hex	GmSSL/include/gmssl/gf128.h	/^int gf128_equ_hex(gf128_t a, const char *s);$/;"	p	signature:(gf128_t a, const char *s)
gf128_equ_hex	GmSSL/src/gf128.c	/^int gf128_equ_hex(gf128_t a, const char *s)$/;"	f	signature:(gf128_t a, const char *s)
gf128_from_bytes	GmSSL/include/gmssl/gf128.h	/^gf128_t gf128_from_bytes(const uint8_t p[16]);$/;"	p	signature:(const uint8_t p[16])
gf128_from_bytes	GmSSL/src/gf128.c	/^gf128_t gf128_from_bytes(const uint8_t p[16])$/;"	f	signature:(const uint8_t p[16])
gf128_from_hex	GmSSL/include/gmssl/gf128.h	/^gf128_t gf128_from_hex(const char *s);$/;"	p	signature:(const char *s)
gf128_from_hex	GmSSL/src/gf128.c	/^gf128_t gf128_from_hex(const char *s)$/;"	f	signature:(const char *s)
gf128_mul	GmSSL/include/gmssl/gf128.h	/^gf128_t gf128_mul(gf128_t a, gf128_t b);$/;"	p	signature:(gf128_t a, gf128_t b)
gf128_mul	GmSSL/src/gf128.c	/^gf128_t gf128_mul(gf128_t a, gf128_t b)$/;"	f	signature:(gf128_t a, gf128_t b)
gf128_mul2	GmSSL/include/gmssl/gf128.h	/^gf128_t gf128_mul2(gf128_t a);$/;"	p	signature:(gf128_t a)
gf128_mul2	GmSSL/src/gf128.c	/^gf128_t gf128_mul2(gf128_t a)$/;"	f	signature:(gf128_t a)
gf128_print	GmSSL/include/gmssl/gf128.h	/^int gf128_print(FILE *fp, int fmt ,int ind, const char *label, gf128_t a);$/;"	p	signature:(FILE *fp, int fmt ,int ind, const char *label, gf128_t a)
gf128_print	GmSSL/src/gf128.c	/^int gf128_print(FILE *fp, int fmt, int ind, const char *label, gf128_t a)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, gf128_t a)
gf128_print_bits	GmSSL/src/gf128.c	/^void gf128_print_bits(gf128_t a)$/;"	f	signature:(gf128_t a)
gf128_t	GmSSL/include/gmssl/gf128.h	/^} gf128_t;$/;"	t	typeref:struct:__anon56
gf128_to_bytes	GmSSL/include/gmssl/gf128.h	/^void gf128_to_bytes(gf128_t a, uint8_t p[16]);$/;"	p	signature:(gf128_t a, uint8_t p[16])
gf128_to_bytes	GmSSL/src/gf128.c	/^void gf128_to_bytes(gf128_t a, uint8_t p[16])$/;"	f	signature:(gf128_t a, uint8_t p[16])
gf128_zero	GmSSL/include/gmssl/gf128.h	/^gf128_t gf128_zero(void);$/;"	p	signature:(void)
gf128_zero	GmSSL/src/gf128.c	/^gf128_t gf128_zero(void)$/;"	f	signature:(void)
ghash	GmSSL/include/gmssl/gcm.h	/^void ghash(const uint8_t h[16], const uint8_t *aad, size_t aadlen,$/;"	p	signature:(const uint8_t h[16], const uint8_t *aad, size_t aadlen, const uint8_t *c, size_t clen, uint8_t out[16])
ghash	GmSSL/src/gcm.c	/^void ghash(const uint8_t h[16], const uint8_t *aad, size_t aadlen, const uint8_t *c, size_t clen, uint8_t out[16])$/;"	f	signature:(const uint8_t h[16], const uint8_t *aad, size_t aadlen, const uint8_t *c, size_t clen, uint8_t out[16])
ghash_tests	GmSSL/tests/gcmtest.c	/^} ghash_tests[] = {$/;"	v	typeref:struct:__anon7
gmssl_memxor	GmSSL/include/gmssl/mem.h	/^void gmssl_memxor(void *r, const void *a, const void *b, size_t len);$/;"	p	signature:(void *r, const void *a, const void *b, size_t len)
gmssl_memxor	GmSSL/src/hex.c	/^void gmssl_memxor(void *r, const void *a, const void *b, size_t len)$/;"	f	signature:(void *r, const void *a, const void *b, size_t len)
gmssl_secure_clear	GmSSL/include/gmssl/mem.h	/^void gmssl_secure_clear(void *ptr, size_t len);$/;"	p	signature:(void *ptr, size_t len)
gmssl_secure_clear	GmSSL/src/hex.c	/^void gmssl_secure_clear(void *ptr, size_t len)$/;"	f	signature:(void *ptr, size_t len)
gmssl_secure_memcmp	GmSSL/include/gmssl/mem.h	/^int gmssl_secure_memcmp(const volatile void * volatile in_a, const volatile void * volatile in_b, size_t len);$/;"	p	signature:(const volatile void * volatile in_a, const volatile void * volatile in_b, size_t len)
gmssl_secure_memcmp	GmSSL/src/hex.c	/^int gmssl_secure_memcmp(const volatile void * volatile in_a, const volatile void * volatile in_b, size_t len)$/;"	f	signature:(const volatile void * volatile in_a, const volatile void * volatile in_b, size_t len)
gmssl_version_num	GmSSL/include/gmssl/version.h	/^int gmssl_version_num(void);$/;"	p	signature:(void)
gmssl_version_num	GmSSL/src/version.c	/^int gmssl_version_num(void)$/;"	f	signature:(void)
gmssl_version_str	GmSSL/include/gmssl/version.h	/^const char *gmssl_version_str(void);$/;"	p	signature:(void)
gmssl_version_str	GmSSL/src/version.c	/^const char *gmssl_version_str(void)$/;"	f	signature:(void)
handle	GmSSL/include/gmssl/skf.h	/^	void *handle;$/;"	m	struct:__anon31	access:public
handshakes	GmSSL/include/gmssl/tls.h	/^	uint8_t handshakes[TLS_MAX_HANDSHAKES_SIZE];$/;"	m	struct:__anon30	access:public
handshakes_len	GmSSL/include/gmssl/tls.h	/^	size_t handshakes_len;$/;"	m	struct:__anon30	access:public
hardware_version	GmSSL/include/gmssl/skf.h	/^	uint8_t hardware_version[2];$/;"	m	struct:__anon31	access:public
hash	GmSSL/include/gmssl/sm2.h	/^	uint8_t hash[32];$/;"	m	struct:__anon50	access:public
hash_df	GmSSL/src/hash_drbg.c	/^static int hash_df(const DIGEST *digest, const uint8_t *in, size_t inlen,$/;"	f	file:	signature:(const DIGEST *digest, const uint8_t *in, size_t inlen, size_t outlen, uint8_t *out)
hash_drbg_generate	GmSSL/include/gmssl/hash_drbg.h	/^int hash_drbg_generate(HASH_DRBG *drbg,$/;"	p	signature:(HASH_DRBG *drbg, const uint8_t *additional, size_t additional_len, size_t outlen, uint8_t *out)
hash_drbg_generate	GmSSL/src/hash_drbg.c	/^int hash_drbg_generate(HASH_DRBG *drbg,$/;"	f	signature:(HASH_DRBG *drbg, const uint8_t *additional, size_t additional_len, size_t outlen, uint8_t *out)
hash_drbg_init	GmSSL/include/gmssl/hash_drbg.h	/^int hash_drbg_init(HASH_DRBG *drbg,$/;"	p	signature:(HASH_DRBG *drbg, const DIGEST *digest, const uint8_t *entropy, size_t entropy_len, const uint8_t *nonce, size_t nonce_len, const uint8_t *personalstr, size_t personalstr_len)
hash_drbg_init	GmSSL/src/hash_drbg.c	/^int hash_drbg_init(HASH_DRBG *drbg, const DIGEST *digest,$/;"	f	signature:(HASH_DRBG *drbg, const DIGEST *digest, const uint8_t *entropy, size_t entropy_len, const uint8_t *nonce, size_t nonce_len, const uint8_t *personalstr, size_t personalstr_len)
hash_drbg_reseed	GmSSL/include/gmssl/hash_drbg.h	/^int hash_drbg_reseed(HASH_DRBG *drbg,$/;"	p	signature:(HASH_DRBG *drbg, const uint8_t *entropy, size_t entropy_len, const uint8_t *additional, size_t additional_len)
hash_drbg_reseed	GmSSL/src/hash_drbg.c	/^int hash_drbg_reseed(HASH_DRBG *drbg,$/;"	f	signature:(HASH_DRBG *drbg, const uint8_t *entropy, size_t entropy_len, const uint8_t *additional, size_t additional_len)
hex2bin	GmSSL/src/hex.c	/^int hex2bin(const char *in, size_t inlen, uint8_t *out)$/;"	f	signature:(const char *in, size_t inlen, uint8_t *out)
hex2bin	GmSSL/src/sm2_alg.c	/^static int hex2bin(const char *in, size_t inlen, uint8_t *out)$/;"	f	file:	signature:(const char *in, size_t inlen, uint8_t *out)
hex_10G	GmSSL/tests/sm2test.c	210;"	d	file:
hex_2G	GmSSL/tests/sm2test.c	201;"	d	file:
hex_2P	GmSSL/tests/sm2test.c	220;"	d	file:
hex_3G	GmSSL/tests/sm2test.c	204;"	d	file:
hex_G	GmSSL/tests/sm2test.c	198;"	d	file:
hex_P	GmSSL/tests/sm2test.c	217;"	d	file:
hex_bG	GmSSL/tests/sm2test.c	213;"	d	file:
hex_d	GmSSL/tests/sm2test.c	278;"	d	file:
hex_di	GmSSL/tests/sm2test.c	284;"	d	file:
hex_e	GmSSL/tests/sm2test.c	279;"	d	file:
hex_fn_add_x_y	GmSSL/tests/sm2test.c	69;"	d	file:
hex_fn_exp_x_y	GmSSL/tests/sm2test.c	75;"	d	file:
hex_fn_inv_x	GmSSL/tests/sm2test.c	76;"	d	file:
hex_fn_mul_x_v	GmSSL/tests/sm2test.c	78;"	d	file:
hex_fn_mul_x_y	GmSSL/tests/sm2test.c	73;"	d	file:
hex_fn_neg_x	GmSSL/tests/sm2test.c	72;"	d	file:
hex_fn_sqr_x	GmSSL/tests/sm2test.c	74;"	d	file:
hex_fn_sub_x_y	GmSSL/tests/sm2test.c	70;"	d	file:
hex_fn_sub_y_x	GmSSL/tests/sm2test.c	71;"	d	file:
hex_fp_add_x_y	GmSSL/tests/sm2test.c	60;"	d	file:
hex_fp_exp_x_y	GmSSL/tests/sm2test.c	66;"	d	file:
hex_fp_inv_x	GmSSL/tests/sm2test.c	67;"	d	file:
hex_fp_mul_x_y	GmSSL/tests/sm2test.c	64;"	d	file:
hex_fp_neg_x	GmSSL/tests/sm2test.c	63;"	d	file:
hex_fp_squ_x	GmSSL/tests/sm2test.c	65;"	d	file:
hex_fp_sub_x_y	GmSSL/tests/sm2test.c	61;"	d	file:
hex_fp_sub_y_x	GmSSL/tests/sm2test.c	62;"	d	file:
hex_k	GmSSL/tests/sm2test.c	280;"	d	file:
hex_krd	GmSSL/tests/sm2test.c	285;"	d	file:
hex_negG	GmSSL/tests/sm2test.c	207;"	d	file:
hex_r	GmSSL/tests/sm2test.c	282;"	d	file:
hex_rd	GmSSL/tests/sm2test.c	283;"	d	file:
hex_s	GmSSL/tests/sm2test.c	286;"	d	file:
hex_t	GmSSL/tests/sm2test.c	80;"	d	file:
hex_tP	GmSSL/tests/sm2test.c	224;"	d	file:
hex_to_bytes	GmSSL/include/gmssl/hex.h	/^int hex_to_bytes(const char *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(const char *in, size_t inlen, uint8_t *out, size_t *outlen)
hex_to_bytes	GmSSL/src/hex.c	/^int hex_to_bytes(const char *in, size_t inlen, uint8_t *out, size_t *outlen)$/;"	f	signature:(const char *in, size_t inlen, uint8_t *out, size_t *outlen)
hex_v	GmSSL/tests/sm2test.c	77;"	d	file:
hex_x1	GmSSL/tests/sm2test.c	281;"	d	file:
hexchar2int	GmSSL/src/hex.c	/^static int hexchar2int(char c)$/;"	f	file:	signature:(char c)
hexchar2int	GmSSL/src/sm2_alg.c	/^static int hexchar2int(char c)$/;"	f	file:	signature:(char c)
hi	GmSSL/include/gmssl/gf128.h	/^	uint64_t hi;$/;"	m	struct:__anon56	access:public
hkdf_expand	GmSSL/include/gmssl/hkdf.h	/^int hkdf_expand(const DIGEST *digest, const uint8_t *prk, size_t prklen,$/;"	p	signature:(const DIGEST *digest, const uint8_t *prk, size_t prklen, const uint8_t *opt_info, size_t opt_infolen, size_t L, uint8_t *okm)
hkdf_expand	GmSSL/src/hkdf.c	/^int hkdf_expand(const DIGEST *digest, const uint8_t *prk, size_t prklen,$/;"	f	signature:(const DIGEST *digest, const uint8_t *prk, size_t prklen, const uint8_t *opt_info, size_t opt_infolen, size_t L, uint8_t *okm)
hkdf_extract	GmSSL/include/gmssl/hkdf.h	/^int hkdf_extract(const DIGEST *digest, const uint8_t *salt, size_t saltlen,$/;"	p	signature:(const DIGEST *digest, const uint8_t *salt, size_t saltlen, const uint8_t *ikm, size_t ikmlen, uint8_t *prk, size_t *prklen)
hkdf_extract	GmSSL/src/hkdf.c	/^int hkdf_extract(const DIGEST *digest, const uint8_t *salt, size_t saltlen,$/;"	f	signature:(const DIGEST *digest, const uint8_t *salt, size_t saltlen, const uint8_t *ikm, size_t ikmlen, uint8_t *prk, size_t *prklen)
hkdf_tests	GmSSL/tests/hkdftest.c	/^} hkdf_tests[] = {$/;"	v	typeref:struct:__anon8	file:
hmac	GmSSL/include/gmssl/hmac.h	/^int hmac(const DIGEST *md, const uint8_t *key, size_t keylen,$/;"	p	signature:(const DIGEST *md, const uint8_t *key, size_t keylen, const uint8_t *data, size_t dlen, uint8_t *mac, size_t *maclen)
hmac	GmSSL/src/hmac.c	/^int hmac(const DIGEST *digest, const uint8_t *key, size_t keylen,$/;"	f	signature:(const DIGEST *digest, const uint8_t *key, size_t keylen, const uint8_t *data, size_t datalen, uint8_t *mac, size_t *maclen)
hmac_ctx_st	GmSSL/include/gmssl/hmac.h	/^typedef struct hmac_ctx_st {$/;"	s
hmac_ctx_st::digest	GmSSL/include/gmssl/hmac.h	/^	const DIGEST *digest;$/;"	m	struct:hmac_ctx_st	access:public
hmac_ctx_st::digest_ctx	GmSSL/include/gmssl/hmac.h	/^	DIGEST_CTX digest_ctx;$/;"	m	struct:hmac_ctx_st	access:public
hmac_ctx_st::i_ctx	GmSSL/include/gmssl/hmac.h	/^	DIGEST_CTX i_ctx;$/;"	m	struct:hmac_ctx_st	access:public
hmac_ctx_st::o_ctx	GmSSL/include/gmssl/hmac.h	/^	DIGEST_CTX o_ctx;$/;"	m	struct:hmac_ctx_st	access:public
hmac_finish	GmSSL/include/gmssl/hmac.h	/^int hmac_finish(HMAC_CTX *ctx, uint8_t *mac, size_t *maclen);$/;"	p	signature:(HMAC_CTX *ctx, uint8_t *mac, size_t *maclen)
hmac_finish	GmSSL/src/hmac.c	/^int hmac_finish(HMAC_CTX *ctx, uint8_t *mac, size_t *maclen)$/;"	f	signature:(HMAC_CTX *ctx, uint8_t *mac, size_t *maclen)
hmac_finish_and_verify	GmSSL/src/hmac.c	/^int hmac_finish_and_verify(HMAC_CTX *ctx, const uint8_t *mac, size_t maclen)$/;"	f	signature:(HMAC_CTX *ctx, const uint8_t *mac, size_t maclen)
hmac_init	GmSSL/include/gmssl/hmac.h	/^int hmac_init(HMAC_CTX *ctx, const DIGEST *digest, const uint8_t *key, size_t keylen);$/;"	p	signature:(HMAC_CTX *ctx, const DIGEST *digest, const uint8_t *key, size_t keylen)
hmac_init	GmSSL/src/hmac.c	/^int hmac_init(HMAC_CTX *ctx, const DIGEST *digest, const uint8_t *key, size_t keylen)$/;"	f	signature:(HMAC_CTX *ctx, const DIGEST *digest, const uint8_t *key, size_t keylen)
hmac_sha224	GmSSL/tests/hmactest.c	/^	char *hmac_sha224;$/;"	m	struct:__anon6	file:	access:public
hmac_sha256	GmSSL/tests/hmactest.c	/^	char *hmac_sha256;$/;"	m	struct:__anon6	file:	access:public
hmac_sha384	GmSSL/tests/hmactest.c	/^	char *hmac_sha384;$/;"	m	struct:__anon6	file:	access:public
hmac_sha512	GmSSL/tests/hmactest.c	/^	char *hmac_sha512;$/;"	m	struct:__anon6	file:	access:public
hmac_size	GmSSL/include/gmssl/hmac.h	/^size_t hmac_size(const HMAC_CTX *ctx);$/;"	p	signature:(const HMAC_CTX *ctx)
hmac_tests	GmSSL/tests/hmactest.c	/^} hmac_tests[] = {$/;"	v	typeref:struct:__anon6
hmac_update	GmSSL/include/gmssl/hmac.h	/^int hmac_update(HMAC_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(HMAC_CTX *ctx, const uint8_t *data, size_t datalen)
hmac_update	GmSSL/src/hmac.c	/^int hmac_update(HMAC_CTX *ctx, const uint8_t *data, size_t datalen)$/;"	f	signature:(HMAC_CTX *ctx, const uint8_t *data, size_t datalen)
http_get	GmSSL/tools/tlcp_client.c	/^static const char *http_get =$/;"	v	file:
http_get	GmSSL/tools/tls12_client.c	/^const char *http_get =$/;"	v
http_get	GmSSL/tools/tls13_client.c	/^static const char *http_get =$/;"	v	file:
i_ctx	GmSSL/include/gmssl/hmac.h	/^	DIGEST_CTX i_ctx;$/;"	m	struct:hmac_ctx_st	access:public
id	GmSSL/tools/sdfutil/sdf_ext.c	/^	ULONG id;$/;"	m	struct:__anon2	file:	access:public
ikm	GmSSL/tests/hkdftest.c	/^	char *ikm;$/;"	m	struct:__anon8	file:	access:public
info	GmSSL/tests/hkdftest.c	/^	char *info;$/;"	m	struct:__anon8	file:	access:public
info_arch	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v
info_version	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v
info_version_internal	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";$/;"	v
info_version_internal	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
info_version_internal	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INTERNAL_STR "]";$/;"	v
inh	test_bs.c	/^unsigned long long inh[16]={0x0000000000000000,0x2222222222222222,0x4444444444444444,0x6666666666666666,0x8888888888888888,0xAAAAAAAAAAAAAAAA,0xCCCCCCCCCCCCCCCC,0xEEEEEEEEEEEEEEEE,0xFFFFFFFFFFFFFFFF,0xDDDDDDDDDDDDDDDD,0xBBBBBBBBBBBBBBBB,0x9999999999999999,0x7777777777777777,0x5555555555555555,0x3333333333333333,0x1111111111111111};$/;"	v
init	GmSSL/include/gmssl/digest.h	/^	int (*init)(DIGEST_CTX *ctx);$/;"	m	struct:DIGEST	access:public
inl	test_bs.c	/^unsigned long long inl[16]={0x1111111111111111,0x3333333333333333,0x5555555555555555,0x7777777777777777,0x9999999999999999,0xBBBBBBBBBBBBBBBB,0xDDDDDDDDDDDDDDDD,0xFFFFFFFFFFFFFFFF,0xEEEEEEEEEEEEEEEE,0xCCCCCCCCCCCCCCCC,0xAAAAAAAAAAAAAAAA,0x8888888888888888,0x6666666666666666,0x4444444444444444,0x2222222222222222,0x0000000000000000};$/;"	v
inv_mix_columns	GmSSL/src/aes.c	/^static void inv_mix_columns(uint8_t S[4][4])$/;"	f	file:	signature:(uint8_t S[4][4])
inv_shift_rows	GmSSL/src/aes.c	/^static void inv_shift_rows(uint8_t state[4][4])$/;"	f	file:	signature:(uint8_t state[4][4])
inv_sub_bytes	GmSSL/src/aes.c	/^static void inv_sub_bytes(uint8_t state[4][4])$/;"	f	file:	signature:(uint8_t state[4][4])
is_client	GmSSL/include/gmssl/tls.h	/^	int is_client;$/;"	m	struct:__anon30	access:public
is_printable_string_only	GmSSL/src/x509_cer.c	/^	int is_printable_string_only;$/;"	m	struct:__anon85	file:	access:public
issuer	GmSSL/include/gmssl/skf.h	/^	char issuer[65];$/;"	m	struct:__anon31	access:public
iter	GmSSL/tests/pbkdf2test.c	/^	int iter;$/;"	m	struct:__anon13	file:	access:public
iv	GmSSL/include/gmssl/sm4.h	/^	uint8_t iv[SM4_BLOCK_SIZE];$/;"	m	struct:__anon63	access:public
iv	GmSSL/sm4.h	/^	uint8_t iv[SM4_BLOCK_SIZE];$/;"	m	struct:__anon79	access:public
iv	GmSSL/src/sm4.h	/^	uint8_t iv[SM4_BLOCK_SIZE];$/;"	m	struct:__anon83	access:public
k	baseSM4.c	/^u32 k[36]={0};$/;"	v
key	GmSSL/include/gmssl/sm2.h	/^	SM2_KEY key;$/;"	m	struct:__anon49	access:public
key	GmSSL/include/gmssl/sm3.h	/^	unsigned char key[SM3_BLOCK_SIZE];$/;"	m	struct:__anon60	access:public
key	GmSSL/include/gmssl/tls.h	/^	SM2_KEY key;$/;"	m	struct:__anon28	access:public
key	GmSSL/tests/hmactest.c	/^	char *key;$/;"	m	struct:__anon6	file:	access:public
key1	GmSSL/tests/rc4test.c	/^unsigned char key1[] = {$/;"	v
key2	GmSSL/tests/rc4test.c	/^unsigned char key2[] = {$/;"	v
keyHandle	GmSSL/tools/sdfutil/sdf_dummy.c	/^static char *keyHandle = "SDF Key Handle";$/;"	v	file:
key_block	GmSSL/include/gmssl/tls.h	/^	uint8_t key_block[96]; \/\/ 这个似乎不应该放在这里$/;"	m	struct:__anon30	access:public
key_index	GmSSL/include/gmssl/sdf.h	/^	int key_index;$/;"	m	struct:__anon68	access:public
key_size	GmSSL/include/gmssl/block_cipher.h	/^	size_t key_size;$/;"	m	struct:BLOCK_CIPHER	access:public
keybits	GmSSL/tests/rc4test.c	/^int keybits[] = {$/;"	v
keygen	baseSM4.c	/^u32* keygen(u32 key[])$/;"	f	signature:(u32 key[])
label	GmSSL/include/gmssl/skf.h	/^	char label[33];$/;"	m	struct:__anon31	access:public
left_move	oSM4.c	/^uint32_t left_move(uint32_t data, int length)$/;"	f	signature:(uint32_t data, int length)
length	GmSSL/include/gmssl/base64.h	/^    int length;$/;"	m	struct:__anon40	access:public
length	GmSSL/tests/sha224test.c	/^	size_t length;$/;"	m	struct:__anon5	file:	access:public
length	GmSSL/tests/sha256test.c	/^	size_t length;$/;"	m	struct:__anon9	file:	access:public
length	GmSSL/tests/sha384test.c	/^	size_t length;$/;"	m	struct:__anon12	file:	access:public
length	GmSSL/tests/sha512test.c	/^	size_t length;$/;"	m	struct:__anon10	file:	access:public
line_num	GmSSL/include/gmssl/base64.h	/^    int line_num;$/;"	m	struct:__anon40	access:public
lo	GmSSL/include/gmssl/gf128.h	/^	uint64_t lo;$/;"	m	struct:__anon56	access:public
m	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char m[RSAref_MAX_LEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
m	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char m[RSAref_MAX_LEN];$/;"	m	struct:RSArefPublicKey_st	access:public
macbits	GmSSL/include/gmssl/zuc.h	/^	int macbits;$/;"	m	struct:ZUC256_MAC_CTX_st	access:public
main	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	GmSSL/tests/aestest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/asn1test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/base64test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/block_ciphertest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/chacha20test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/cmstest.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tests/destest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/digesttest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/ectest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/gcmtest.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tests/gf128test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/hash_drbgtest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/hextest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/hkdftest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/hmactest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/md5test.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tests/pbkdf2test.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tests/pemtest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/pkcs8test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/rc4test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/sha1test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/sha224test.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tests/sha256test.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tests/sha384test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/sha512test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/sm2test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/sm3test.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tests/sm4test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/sm9test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/tlstest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/x509_algtest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/x509_crltest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/x509_exttest.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tests/x509_oidtest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/x509_reqtest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/x509_strtest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/x509test.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tests/zuctest.c	/^int main(void)$/;"	f	signature:(void)
main	GmSSL/tools/gmssl.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	GmSSL/tools/sdfutil/sdfutil.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	baseSM4.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
main	oSM4.c	/^int main() {$/;"	f
main	test_bs.c	/^int main()$/;"	f
manufacturer	GmSSL/include/gmssl/skf.h	/^	char manufacturer[65];$/;"	m	struct:__anon31	access:public
master_secret	GmSSL/include/gmssl/tls.h	/^	uint8_t master_secret[48];$/;"	m	struct:__anon29	access:public
master_secret	GmSSL/include/gmssl/tls.h	/^	uint8_t master_secret[48];$/;"	m	struct:__anon30	access:public
maxlen	GmSSL/src/x509_cer.c	/^	int maxlen;$/;"	m	struct:__anon85	file:	access:public
md5_compress_blocks	GmSSL/src/md5.c	/^static void md5_compress_blocks(uint32_t state[4],$/;"	f	file:	signature:(uint32_t state[4], const unsigned char *data, size_t blocks)
md5_ctx	GmSSL/include/gmssl/digest.h	/^		MD5_CTX md5_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
md5_digest	GmSSL/include/gmssl/md5.h	/^void md5_digest(const uint8_t *data, size_t datalen, uint8_t dgst[MD5_DIGEST_SIZE]);$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t dgst[MD5_DIGEST_SIZE])
md5_digest	GmSSL/src/md5.c	/^void md5_digest(const unsigned char *data, size_t datalen,$/;"	f	signature:(const unsigned char *data, size_t datalen, unsigned char dgst[MD5_DIGEST_SIZE])
md5_digest_finish	GmSSL/src/digest.c	/^static int md5_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
md5_digest_init	GmSSL/src/digest.c	/^static int md5_digest_init(DIGEST_CTX *ctx)$/;"	f	file:	signature:(DIGEST_CTX *ctx)
md5_digest_object	GmSSL/src/digest.c	/^static const DIGEST md5_digest_object = {$/;"	v	file:
md5_digest_update	GmSSL/src/digest.c	/^static int md5_digest_update(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)$/;"	f	file:	signature:(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)
md5_finish	GmSSL/include/gmssl/md5.h	/^void md5_finish(MD5_CTX *ctx, uint8_t dgst[MD5_DIGEST_SIZE]);$/;"	p	signature:(MD5_CTX *ctx, uint8_t dgst[MD5_DIGEST_SIZE])
md5_finish	GmSSL/src/md5.c	/^void md5_finish(MD5_CTX *ctx, unsigned char *dgst)$/;"	f	signature:(MD5_CTX *ctx, unsigned char *dgst)
md5_init	GmSSL/include/gmssl/md5.h	/^void md5_init(MD5_CTX *ctx);$/;"	p	signature:(MD5_CTX *ctx)
md5_init	GmSSL/src/md5.c	/^void md5_init(MD5_CTX *ctx)$/;"	f	signature:(MD5_CTX *ctx)
md5_update	GmSSL/include/gmssl/md5.h	/^void md5_update(MD5_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(MD5_CTX *ctx, const uint8_t *data, size_t datalen)
md5_update	GmSSL/src/md5.c	/^void md5_update(MD5_CTX *ctx, const unsigned char *data, size_t datalen)$/;"	f	signature:(MD5_CTX *ctx, const unsigned char *data, size_t datalen)
memset_func	GmSSL/src/hex.c	/^static volatile memset_t memset_func = memset;$/;"	v	file:
memset_t	GmSSL/src/hex.c	/^typedef void *(*memset_t)(void *, int, size_t);$/;"	t	file:
memxor	GmSSL/include/gmssl/mem.h	/^void memxor(void *r, const void *a, size_t len);$/;"	p	signature:(void *r, const void *a, size_t len)
memxor	GmSSL/src/hex.c	/^void memxor(void *r, const void *a, size_t len)$/;"	f	signature:(void *r, const void *a, size_t len)
minlen	GmSSL/src/x509_cer.c	/^	int minlen;$/;"	m	struct:__anon85	file:	access:public
mix_columns	GmSSL/src/aes.c	/^static void mix_columns(uint8_t S[4][4])$/;"	f	file:	signature:(uint8_t S[4][4])
name	GmSSL/include/gmssl/asn1.h	/^	char *name;$/;"	m	struct:__anon41	access:public
name	GmSSL/tools/sdfutil/sdf_ext.c	/^	char *name;$/;"	m	struct:__anon2	file:	access:public
name	GmSSL/tools/sdfutil/sdf_int.h	/^	char *name;$/;"	m	struct:sdf_method_st	access:public
name	GmSSL/tools/sdfutil/sdf_int.h	/^	char *name;$/;"	m	struct:sdf_vendor_st	access:public
nblocks	GmSSL/include/gmssl/md5.h	/^	uint64_t nblocks;$/;"	m	struct:__anon66	access:public
nblocks	GmSSL/include/gmssl/sha1.h	/^	uint64_t nblocks;$/;"	m	struct:__anon39	access:public
nblocks	GmSSL/include/gmssl/sha2.h	/^	uint64_t nblocks;$/;"	m	struct:__anon52	access:public
nblocks	GmSSL/include/gmssl/sha2.h	/^	uint64_t nblocks;$/;"	m	struct:__anon53	access:public
nblocks	GmSSL/include/gmssl/sha2.h	/^	uint64_t nblocks;$/;"	m	struct:__anon54	access:public
nblocks	GmSSL/include/gmssl/sha2.h	/^	uint64_t nblocks;$/;"	m	struct:__anon55	access:public
nblocks	GmSSL/include/gmssl/sm3.h	/^	uint64_t nblocks;$/;"	m	struct:__anon59	access:public
nodes	GmSSL/include/gmssl/asn1.h	/^	uint32_t *nodes;$/;"	m	struct:__anon41	access:public
nodes_cnt	GmSSL/include/gmssl/asn1.h	/^	size_t nodes_cnt;$/;"	m	struct:__anon41	access:public
num	GmSSL/include/gmssl/base64.h	/^    int num;$/;"	m	struct:__anon40	access:public
num	GmSSL/include/gmssl/md5.h	/^	size_t num;$/;"	m	struct:__anon66	access:public
num	GmSSL/include/gmssl/sha1.h	/^	size_t num;$/;"	m	struct:__anon39	access:public
num	GmSSL/include/gmssl/sha2.h	/^	int num;$/;"	m	struct:__anon52	access:public
num	GmSSL/include/gmssl/sha2.h	/^	int num;$/;"	m	struct:__anon53	access:public
num	GmSSL/include/gmssl/sha2.h	/^	int num;$/;"	m	struct:__anon54	access:public
num	GmSSL/include/gmssl/sha2.h	/^	int num;$/;"	m	struct:__anon55	access:public
num	GmSSL/include/gmssl/sha3.h	/^	int num;$/;"	m	struct:__anon74	access:public
num	GmSSL/include/gmssl/sha3.h	/^	int num;$/;"	m	struct:__anon75	access:public
num	GmSSL/include/gmssl/sha3.h	/^	int num;$/;"	m	struct:__anon76	access:public
num	GmSSL/include/gmssl/sha3.h	/^	int num;$/;"	m	struct:__anon77	access:public
num	GmSSL/include/gmssl/sm3.h	/^	size_t num;$/;"	m	struct:__anon59	access:public
o_ctx	GmSSL/include/gmssl/hmac.h	/^	DIGEST_CTX o_ctx;$/;"	m	struct:hmac_ctx_st	access:public
oid	GmSSL/include/gmssl/asn1.h	/^	int oid;$/;"	m	struct:__anon41	access:public
oid	GmSSL/include/gmssl/block_cipher.h	/^	int oid;$/;"	m	struct:BLOCK_CIPHER	access:public
oid	GmSSL/include/gmssl/digest.h	/^	int oid;$/;"	m	struct:DIGEST	access:public
oid	GmSSL/src/digest.c	/^	int oid;$/;"	m	struct:__anon81	file:	access:public
oid	GmSSL/src/x509_cer.c	/^	int oid;$/;"	m	struct:__anon85	file:	access:public
oid_ad	GmSSL/include/gmssl/oid.h	217;"	d
oid_aes128_cbc	GmSSL/src/x509_alg.c	/^static uint32_t oid_aes128_cbc[] = { 2,16,840,1,101,3,4,1,2 };$/;"	v	file:
oid_aes192_cbc	GmSSL/src/x509_alg.c	/^static uint32_t oid_aes192_cbc[] = { 2,16,840,1,101,3,4,1,22 };$/;"	v	file:
oid_aes256_cbc	GmSSL/src/x509_alg.c	/^static uint32_t oid_aes256_cbc[] = { 2,16,840,1,101,3,4,1,42 };$/;"	v	file:
oid_any_policy	GmSSL/src/x509_oid.c	/^static uint32_t oid_any_policy[] = { oid_ce,32,0 };$/;"	v	file:
oid_at	GmSSL/include/gmssl/oid.h	220;"	d
oid_at_cnt	GmSSL/src/x509_oid.c	/^static const size_t oid_at_cnt = sizeof(oid_at_name)\/sizeof(int);$/;"	v	file:
oid_at_common_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_common_name[] = { oid_at,3 };$/;"	v	file:
oid_at_country_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_country_name[] = { oid_at,6 };$/;"	v	file:
oid_at_dn_qualifier	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_dn_qualifier[] = { oid_at,46 };$/;"	v	file:
oid_at_generation_qualifier	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_generation_qualifier[] = { oid_at,44 };$/;"	v	file:
oid_at_given_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_given_name[] = { oid_at,42 };$/;"	v	file:
oid_at_initials	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_initials[] = { oid_at,43 };$/;"	v	file:
oid_at_locality_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_locality_name[] = { oid_at,7 };$/;"	v	file:
oid_at_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_name[] = { oid_at,41 };$/;"	v	file:
oid_at_organization_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_organization_name[] = { oid_at,10 };$/;"	v	file:
oid_at_organizational_unit_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_organizational_unit_name[] = { oid_at,11 };$/;"	v	file:
oid_at_pseudonym	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_pseudonym[] = { oid_at,65 };$/;"	v	file:
oid_at_serial_number	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_serial_number[] = { oid_at,5 };$/;"	v	file:
oid_at_state_or_province_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_state_or_province_name[] = { oid_at,8 };$/;"	v	file:
oid_at_surname	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_surname[] = { oid_at,4 };$/;"	v	file:
oid_at_title	GmSSL/src/x509_oid.c	/^static uint32_t oid_at_title[] = { oid_at,12 };$/;"	v	file:
oid_ce	GmSSL/include/gmssl/oid.h	221;"	d
oid_ce_authority_key_identifier	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_authority_key_identifier[] = { oid_ce,35 };$/;"	v	file:
oid_ce_authority_key_identifier	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_authority_key_identifier[] = { oid_ce,35 };$/;"	v	file:
oid_ce_basic_constraints	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_basic_constraints[] = { oid_ce,19 };$/;"	v	file:
oid_ce_certificate_issuer	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_certificate_issuer[] = { oid_ce,29 };$/;"	v	file:
oid_ce_certificate_issuer	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_certificate_issuer[] = { oid_ce,29 }; \/\/ crl_entry_ext$/;"	v	file:
oid_ce_certificate_policies	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_certificate_policies[] = { oid_ce,32 };$/;"	v	file:
oid_ce_cnt	GmSSL/src/x509_oid.c	/^static const size_t oid_ce_cnt = sizeof(oid_ce_subject_directory_attributes)\/sizeof(int);$/;"	v	file:
oid_ce_crl_distribution_points	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_crl_distribution_points[] = { oid_ce,31 };$/;"	v	file:
oid_ce_crl_number	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_crl_number[] = { oid_ce,20 };$/;"	v	file:
oid_ce_crl_reasons	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_crl_reasons[] = { oid_ce,21 };$/;"	v	file:
oid_ce_crl_reasons	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_crl_reasons[] = { oid_ce,21 }; \/\/ crl_entry_ext$/;"	v	file:
oid_ce_delta_crl_indicator	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_delta_crl_indicator[] = { oid_ce,27 };$/;"	v	file:
oid_ce_ext_key_usage	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_ext_key_usage[] = { oid_ce,37 };$/;"	v	file:
oid_ce_freshest_crl	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_freshest_crl[] = { oid_ce,46 };$/;"	v	file:
oid_ce_freshest_crl	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_freshest_crl[] = { oid_ce,46 };$/;"	v	file:
oid_ce_inhibit_any_policy	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_inhibit_any_policy[] = { oid_ce,54 };$/;"	v	file:
oid_ce_invalidity_date	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_invalidity_date[] = { oid_ce,24 };$/;"	v	file:
oid_ce_invalidity_date	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_invalidity_date[] = { oid_ce,24 }; \/\/ crl_entry_ext$/;"	v	file:
oid_ce_issuer_alt_name	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_issuer_alt_name[] = { oid_ce,18 };$/;"	v	file:
oid_ce_issuer_alt_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_issuer_alt_name[] = { oid_ce,18 };$/;"	v	file:
oid_ce_issuing_distribution_point	GmSSL/src/x509_crl.c	/^static uint32_t oid_ce_issuing_distribution_point[] = { oid_ce,28 };$/;"	v	file:
oid_ce_key_usage	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_key_usage[] = { oid_ce,15 };$/;"	v	file:
oid_ce_name_constraints	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_name_constraints[] = { oid_ce,30 };$/;"	v	file:
oid_ce_policy_constraints	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_policy_constraints[] = { oid_ce,36 };$/;"	v	file:
oid_ce_policy_mappings	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_policy_mappings[] = { oid_ce,33 };$/;"	v	file:
oid_ce_subject_alt_name	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_subject_alt_name[] = { oid_ce,17 };$/;"	v	file:
oid_ce_subject_directory_attributes	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_subject_directory_attributes[] = { oid_ce,9 };$/;"	v	file:
oid_ce_subject_key_identifier	GmSSL/src/x509_oid.c	/^static uint32_t oid_ce_subject_key_identifier[] = { oid_ce,14 };$/;"	v	file:
oid_cert_authority_info_access	GmSSL/src/x509_oid.c	/^static uint32_t oid_cert_authority_info_access[] = { 1,3,6,1,5,5,7,1,1 };$/;"	v	file:
oid_cms_data	GmSSL/src/cms.c	/^static uint32_t oid_cms_data[] = { oid_sm2_cms,1 };$/;"	v	file:
oid_cms_encrypted_data	GmSSL/src/cms.c	/^static uint32_t oid_cms_encrypted_data[] = { oid_sm2_cms,5 };$/;"	v	file:
oid_cms_enveloped_data	GmSSL/src/cms.c	/^static uint32_t oid_cms_enveloped_data[] = { oid_sm2_cms,3 };$/;"	v	file:
oid_cms_key_agreement_info	GmSSL/src/cms.c	/^static uint32_t oid_cms_key_agreement_info[] = { oid_sm2_cms,6 };$/;"	v	file:
oid_cms_signed_and_enveloped_data	GmSSL/src/cms.c	/^static uint32_t oid_cms_signed_and_enveloped_data[] = { oid_sm2_cms,4 };$/;"	v	file:
oid_cms_signed_data	GmSSL/src/cms.c	/^static uint32_t oid_cms_signed_data[] = { oid_sm2_cms,2 };$/;"	v	file:
oid_cnt	GmSSL/include/gmssl/oid.h	243;"	d
oid_ct_precertificate_scts	GmSSL/src/x509_oid.c	/^static uint32_t oid_ct_precertificate_scts[] = { 1,3,6,1,4,1,11129,2,4,2 };$/;"	v	file:
oid_domain_component	GmSSL/src/x509_oid.c	/^static uint32_t oid_domain_component[] = { 0,9,2342,19200300,100,1,25 };$/;"	v	file:
oid_ec_public_key	GmSSL/src/x509_alg.c	/^static uint32_t oid_ec_public_key[] = { oid_x9_62,2,1 };$/;"	v	file:
oid_ecdsa_with_sha1	GmSSL/src/x509_alg.c	/^static uint32_t oid_ecdsa_with_sha1[] = { 1,2,840,10045,4,1 };$/;"	v	file:
oid_ecdsa_with_sha224	GmSSL/src/x509_alg.c	/^static uint32_t oid_ecdsa_with_sha224[] = { 1,2,840,10045,4,3,1 };$/;"	v	file:
oid_ecdsa_with_sha256	GmSSL/src/x509_alg.c	/^static uint32_t oid_ecdsa_with_sha256[] = { 1,2,840,10045,4,3,2 };$/;"	v	file:
oid_ecdsa_with_sha384	GmSSL/src/x509_alg.c	/^static uint32_t oid_ecdsa_with_sha384[] = { 1,2,840,10045,4,3,3 };$/;"	v	file:
oid_ecdsa_with_sha512	GmSSL/src/x509_alg.c	/^static uint32_t oid_ecdsa_with_sha512[] = { 1,2,840,10045,4,3,4 };$/;"	v	file:
oid_hmac_sm3	GmSSL/src/pkcs8.c	/^static const uint32_t oid_hmac_sm3[] = { oid_sm_algors,401,2 };$/;"	v	file:
oid_hmac_sm3_cnt	GmSSL/src/pkcs8.c	/^static const size_t oid_hmac_sm3_cnt = sizeof(oid_hmac_sm3)\/sizeof(oid_hmac_sm3[0]);$/;"	v	file:
oid_kp	GmSSL/include/gmssl/oid.h	216;"	d
oid_kp	GmSSL/src/x509_oid.c	369;"	d	file:
oid_kp_client_auth	GmSSL/src/x509_oid.c	/^static uint32_t oid_kp_client_auth[] = { oid_kp,2 };$/;"	v	file:
oid_kp_cnt	GmSSL/src/x509_oid.c	/^static const size_t oid_kp_cnt = sizeof(oid_kp_server_auth)\/sizeof(int);$/;"	v	file:
oid_kp_code_signing	GmSSL/src/x509_oid.c	/^static uint32_t oid_kp_code_signing[] = { oid_kp,3 };$/;"	v	file:
oid_kp_email_protection	GmSSL/src/x509_oid.c	/^static uint32_t oid_kp_email_protection[] = { oid_kp,4 };$/;"	v	file:
oid_kp_ocsp_signing	GmSSL/src/x509_oid.c	/^static uint32_t oid_kp_ocsp_signing[] = { oid_kp,9 };$/;"	v	file:
oid_kp_server_auth	GmSSL/src/x509_oid.c	/^static uint32_t oid_kp_server_auth[] = { oid_kp,1 };$/;"	v	file:
oid_kp_time_stamping	GmSSL/src/x509_oid.c	/^static uint32_t oid_kp_time_stamping[] = { oid_kp,8 };$/;"	v	file:
oid_md5	GmSSL/src/x509_alg.c	/^static uint32_t oid_md5[] = { 1,2,840,113549,2,5 };$/;"	v	file:
oid_netscape_cert_comment	GmSSL/src/x509_oid.c	/^static uint32_t oid_netscape_cert_comment[] = { 2,16,840,1,113730,1,13 };$/;"	v	file:
oid_pbes2	GmSSL/src/pkcs8.c	/^static const uint32_t oid_pbes2[] = { oid_pkcs5,13 };$/;"	v	file:
oid_pbes2_cnt	GmSSL/src/pkcs8.c	/^static const size_t oid_pbes2_cnt = sizeof(oid_pbes2)\/sizeof(oid_pbes2[0]);$/;"	v	file:
oid_pbkdf2	GmSSL/src/pkcs8.c	/^static const uint32_t oid_pbkdf2[] = { oid_pkcs5,12 };$/;"	v	file:
oid_pbkdf2_cnt	GmSSL/src/pkcs8.c	/^static const size_t oid_pbkdf2_cnt = sizeof(oid_pbkdf2)\/sizeof(oid_pbkdf2[0]);$/;"	v	file:
oid_pe	GmSSL/include/gmssl/oid.h	214;"	d
oid_pe_authority_info_access	GmSSL/src/x509_crl.c	/^static uint32_t oid_pe_authority_info_access[] = { oid_pe,1 };$/;"	v	file:
oid_pkcs	GmSSL/include/gmssl/oid.h	239;"	d
oid_pkcs5	GmSSL/include/gmssl/oid.h	240;"	d
oid_pkix	GmSSL/include/gmssl/oid.h	212;"	d
oid_prime192v1	GmSSL/src/ec.c	/^static uint32_t oid_prime192v1[] = { oid_x9_62_prime_curves,1 };$/;"	v	file:
oid_prime256v1	GmSSL/src/ec.c	/^static uint32_t oid_prime256v1[] = { oid_x9_62_prime_curves,7 }; \/\/ NIST P-256$/;"	v	file:
oid_qt	GmSSL/include/gmssl/oid.h	215;"	d
oid_qt_cps	GmSSL/src/x509_oid.c	/^static uint32_t oid_qt_cps[] = { oid_qt,1 };$/;"	v	file:
oid_qt_unotice	GmSSL/src/x509_oid.c	/^static uint32_t oid_qt_unotice[] = {oid_qt,2 };$/;"	v	file:
oid_rsa_encryption	GmSSL/src/x509_alg.c	/^static uint32_t oid_rsa_encryption[] = { 1,2,840,113549,1,1,1 };$/;"	v	file:
oid_rsadsi	GmSSL/include/gmssl/oid.h	238;"	d
oid_rsaes_oaep	GmSSL/src/x509_alg.c	/^static uint32_t oid_rsaes_oaep[] = { 1,2,840,113549,1,1,7 };$/;"	v	file:
oid_rsasign_with_sha1	GmSSL/src/x509_alg.c	/^static uint32_t oid_rsasign_with_sha1[] = { 1,2,840,113549,1,1,5 };$/;"	v	file:
oid_rsasign_with_sha224	GmSSL/src/x509_alg.c	/^static uint32_t oid_rsasign_with_sha224[] = { 1,2,840,113549,1,1,14 };$/;"	v	file:
oid_rsasign_with_sha256	GmSSL/src/x509_alg.c	/^static uint32_t oid_rsasign_with_sha256[] = { 1,2,840,113549,1,1,11 };$/;"	v	file:
oid_rsasign_with_sha384	GmSSL/src/x509_alg.c	/^static uint32_t oid_rsasign_with_sha384[] = { 1,2,840,113549,1,1,12 };$/;"	v	file:
oid_rsasign_with_sha512	GmSSL/src/x509_alg.c	/^static uint32_t oid_rsasign_with_sha512[] = { 1,2,840,113549,1,1,13 };$/;"	v	file:
oid_rsasign_with_sm3	GmSSL/src/x509_alg.c	/^static uint32_t oid_rsasign_with_sm3[] = { 1,2,156,10197,1,504 };$/;"	v	file:
oid_secg_curve	GmSSL/src/ec.c	64;"	d	file:
oid_secp256k1	GmSSL/src/ec.c	/^static uint32_t oid_secp256k1[] = { oid_secg_curve,10 };$/;"	v	file:
oid_secp384r1	GmSSL/src/ec.c	/^static uint32_t oid_secp384r1[] = { oid_secg_curve,34 }; \/\/ NIST P-384$/;"	v	file:
oid_secp521r1	GmSSL/src/ec.c	/^static uint32_t oid_secp521r1[] = { oid_secg_curve,35 }; \/\/ NIST P-521$/;"	v	file:
oid_sha1	GmSSL/src/x509_alg.c	/^static uint32_t oid_sha1[] = { 1,3,14,3,2,26 };$/;"	v	file:
oid_sha224	GmSSL/src/x509_alg.c	/^static uint32_t oid_sha224[] = { 2,16,840,1,101,3,4,2,4 };$/;"	v	file:
oid_sha256	GmSSL/src/x509_alg.c	/^static uint32_t oid_sha256[] = { 2,16,840,1,101,3,4,2,1 };$/;"	v	file:
oid_sha384	GmSSL/src/x509_alg.c	/^static uint32_t oid_sha384[] = { 2,16,840,1,101,3,4,2,2 };$/;"	v	file:
oid_sha512	GmSSL/src/x509_alg.c	/^static uint32_t oid_sha512[] = { 2,16,840,1,101,3,4,2,3 };$/;"	v	file:
oid_sm	GmSSL/include/gmssl/oid.h	224;"	d
oid_sm2	GmSSL/src/ec.c	/^static uint32_t oid_sm2[] = { oid_sm_scheme,301 };$/;"	v	file:
oid_sm2_cms	GmSSL/include/gmssl/oid.h	228;"	d
oid_sm2encrypt	GmSSL/src/x509_alg.c	/^static uint32_t oid_sm2encrypt[] = { 1,2,156,10197,1,301,2 };$/;"	v	file:
oid_sm2sign_with_sm3	GmSSL/src/x509_alg.c	/^static uint32_t oid_sm2sign_with_sm3[] = { 1,2,156,10197,1,501 };$/;"	v	file:
oid_sm3	GmSSL/src/x509_alg.c	/^static uint32_t oid_sm3[] = { 1,2,156,10197,1,401 };$/;"	v	file:
oid_sm4_cbc	GmSSL/src/x509_alg.c	/^static uint32_t oid_sm4_cbc[] =  { 1,2,156,10197,1,104,2 };$/;"	v	file:
oid_sm_algors	GmSSL/include/gmssl/oid.h	225;"	d
oid_sm_scheme	GmSSL/src/ec.c	56;"	d	file:
oid_x9_62	GmSSL/include/gmssl/oid.h	246;"	d
oid_x9_62_curves	GmSSL/src/ec.c	59;"	d	file:
oid_x9_62_prime_curves	GmSSL/src/ec.c	60;"	d	file:
okm	GmSSL/tests/hkdftest.c	/^	char *okm;$/;"	m	struct:__anon8	file:	access:public
options	GmSSL/tools/certgen.c	/^static const char *options =$/;"	v	file:
options	GmSSL/tools/certparse.c	/^static const char *options = "[-in file]";$/;"	v	file:
options	GmSSL/tools/crlparse.c	/^static const char *options = "[-in file]";$/;"	v	file:
options	GmSSL/tools/gmssl.c	/^static const char *options =$/;"	v	file:
options	GmSSL/tools/pbkdf2.c	/^static const char *options = "-salt hex -iter num [-pass str] -outlen num";$/;"	v	file:
options	GmSSL/tools/rand.c	/^static const char *options = "[-hex] [-rdrand] -outlen num";$/;"	v	file:
options	GmSSL/tools/reqgen.c	/^static const char *options =$/;"	v	file:
options	GmSSL/tools/sm3.c	/^static const char *options = "[-hex|-bin] [-pubkey pem [-id str]] [-in file]";$/;"	v	file:
options	GmSSL/tools/sm4.c	/^static const char *options = "{-cbc|-ctr} {-encrypt|-decrypt} -key hex -iv hex [-in file] [-out file]";$/;"	v	file:
options	GmSSL/tools/tlcp_client.c	/^static const char *options = "-host str [-port num] [-cacert file] [-cert file -key file [-pass str]]";$/;"	v	file:
options	GmSSL/tools/tlcp_server.c	/^static const char *options = "[-port num] -cert file -key file [-pass str] -ex_key file [-ex_pass str] [-cacert file]";$/;"	v	file:
options	GmSSL/tools/tls12_client.c	/^static const char *options = "-host str [-port num] [-cacert file] [-cert file -key file [-pass str]]";$/;"	v	file:
options	GmSSL/tools/tls12_server.c	/^static const char *options = " [-port num] -cert file -key file [-pass str] [-cacert file]";$/;"	v	file:
options	GmSSL/tools/zuc.c	/^static const char *options = "-key hex -iv hex [-in file] [-out file]";$/;"	v	file:
pass	GmSSL/tests/pbkdf2test.c	/^	char *pass;$/;"	m	struct:__anon13	file:	access:public
pbes2_algor_from_der	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_algor_from_der($/;"	p	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, int *cipher, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)
pbes2_algor_from_der	GmSSL/src/pkcs8.c	/^int pbes2_algor_from_der($/;"	f	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, int *cipher, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)
pbes2_algor_print	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbes2_algor_print	GmSSL/src/pkcs8.c	/^int pbes2_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbes2_algor_to_der	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_algor_to_der($/;"	p	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, int cipher, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)
pbes2_algor_to_der	GmSSL/src/pkcs8.c	/^int pbes2_algor_to_der($/;"	f	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, int cipher, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)
pbes2_enc_algor_from_der	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_enc_algor_from_der($/;"	p	signature:( int *cipher, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)
pbes2_enc_algor_from_der	GmSSL/src/pkcs8.c	/^int pbes2_enc_algor_from_der(int *oid, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)
pbes2_enc_algor_print	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_enc_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbes2_enc_algor_print	GmSSL/src/pkcs8.c	/^int pbes2_enc_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbes2_enc_algor_to_der	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_enc_algor_to_der($/;"	p	signature:( int cipher, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)
pbes2_enc_algor_to_der	GmSSL/src/pkcs8.c	/^int pbes2_enc_algor_to_der(int oid, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)
pbes2_params_from_der	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_params_from_der($/;"	p	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, int *cipher, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)
pbes2_params_from_der	GmSSL/src/pkcs8.c	/^int pbes2_params_from_der($/;"	f	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, int *cipher, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)
pbes2_params_print	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_params_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbes2_params_print	GmSSL/src/pkcs8.c	/^int pbes2_params_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbes2_params_to_der	GmSSL/include/gmssl/pkcs8.h	/^int pbes2_params_to_der($/;"	p	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, int cipher, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)
pbes2_params_to_der	GmSSL/src/pkcs8.c	/^int pbes2_params_to_der($/;"	f	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, int cipher, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)
pbkdf2_algor_from_der	GmSSL/include/gmssl/pkcs8.h	/^int pbkdf2_algor_from_der($/;"	p	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, const uint8_t **in, size_t *inlen)
pbkdf2_algor_from_der	GmSSL/src/pkcs8.c	/^int pbkdf2_algor_from_der($/;"	f	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, const uint8_t **in, size_t *inlen)
pbkdf2_algor_print	GmSSL/include/gmssl/pkcs8.h	/^int pbkdf2_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbkdf2_algor_print	GmSSL/src/pkcs8.c	/^int pbkdf2_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbkdf2_algor_to_der	GmSSL/include/gmssl/pkcs8.h	/^int pbkdf2_algor_to_der($/;"	p	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, uint8_t **out, size_t *outlen)
pbkdf2_algor_to_der	GmSSL/src/pkcs8.c	/^int pbkdf2_algor_to_der($/;"	f	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, uint8_t **out, size_t *outlen)
pbkdf2_genkey	GmSSL/include/gmssl/pbkdf2.h	/^int pbkdf2_genkey(const DIGEST *digest,$/;"	p	signature:(const DIGEST *digest, const char *pass, size_t passlen, const uint8_t *salt, size_t saltlen, size_t iter, size_t outlen, uint8_t *out)
pbkdf2_genkey	GmSSL/src/pbkdf2.c	/^int pbkdf2_genkey(const DIGEST *digest,$/;"	f	signature:(const DIGEST *digest, const char *pass, size_t passlen, const uint8_t *salt, size_t saltlen, size_t count, size_t outlen, uint8_t *out)
pbkdf2_hmac_sha1_tests	GmSSL/tests/pbkdf2test.c	/^} pbkdf2_hmac_sha1_tests[] = {$/;"	v	typeref:struct:__anon13
pbkdf2_hmac_sm3_genkey	GmSSL/include/gmssl/pbkdf2.h	/^int pbkdf2_hmac_sm3_genkey($/;"	p	signature:( const char *pass, size_t passlen, const uint8_t *salt, size_t saltlen, size_t iter, size_t outlen, uint8_t *out)
pbkdf2_hmac_sm3_genkey	GmSSL/src/pbkdf2.c	/^int pbkdf2_hmac_sm3_genkey($/;"	f	signature:( const char *pass, size_t passlen, const uint8_t *salt, size_t saltlen, size_t count, size_t outlen, uint8_t *out)
pbkdf2_main	GmSSL/tools/gmssl.c	/^extern int pbkdf2_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
pbkdf2_main	GmSSL/tools/pbkdf2.c	/^int pbkdf2_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
pbkdf2_params_from_der	GmSSL/include/gmssl/pkcs8.h	/^int pbkdf2_params_from_der(const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf,$/;"	p	signature:(const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, const uint8_t **in, size_t *inlen)
pbkdf2_params_from_der	GmSSL/src/pkcs8.c	/^int pbkdf2_params_from_der($/;"	f	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, const uint8_t **in, size_t *inlen)
pbkdf2_params_print	GmSSL/include/gmssl/pkcs8.h	/^int pbkdf2_params_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbkdf2_params_print	GmSSL/src/pkcs8.c	/^int pbkdf2_params_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pbkdf2_params_to_der	GmSSL/include/gmssl/pkcs8.h	/^int pbkdf2_params_to_der(const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf,$/;"	p	signature:(const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, uint8_t **out, size_t *outlen)
pbkdf2_params_to_der	GmSSL/src/pkcs8.c	/^int pbkdf2_params_to_der($/;"	f	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, uint8_t **out, size_t *outlen)
pbkdf2_prf_from_der	GmSSL/src/pkcs8.c	/^int pbkdf2_prf_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
pbkdf2_prf_from_name	GmSSL/src/pkcs8.c	/^int pbkdf2_prf_from_name(const char *name)$/;"	f	signature:(const char *name)
pbkdf2_prf_name	GmSSL/src/pkcs8.c	/^char *pbkdf2_prf_name(int oid)$/;"	f	signature:(int oid)
pbkdf2_prf_to_der	GmSSL/src/pkcs8.c	/^int pbkdf2_prf_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
peer_certs	GmSSL/include/gmssl/tls.h	/^	uint8_t peer_certs[1600];$/;"	m	struct:__anon29	access:public
peer_certs_len	GmSSL/include/gmssl/tls.h	/^	size_t peer_certs_len;$/;"	m	struct:__anon29	access:public
pem_read	GmSSL/include/gmssl/pem.h	/^int pem_read(FILE *fp, const char *name, uint8_t *out, size_t *outlen, size_t maxlen);$/;"	p	signature:(FILE *fp, const char *name, uint8_t *out, size_t *outlen, size_t maxlen)
pem_read	GmSSL/src/pem.c	/^int pem_read(FILE *fp, const char *name, uint8_t *data, size_t *datalen, size_t maxlen)$/;"	f	signature:(FILE *fp, const char *name, uint8_t *data, size_t *datalen, size_t maxlen)
pem_write	GmSSL/include/gmssl/pem.h	/^int pem_write(FILE *fp, const char *name, const uint8_t *in, size_t inlen);$/;"	p	signature:(FILE *fp, const char *name, const uint8_t *in, size_t inlen)
pem_write	GmSSL/src/pem.c	/^int pem_write(FILE *fp, const char *name, const uint8_t *data, size_t datalen)$/;"	f	signature:(FILE *fp, const char *name, const uint8_t *data, size_t datalen)
permute	GmSSL/src/des.c	/^static uint64_t permute(const unsigned char *table, size_t n, uint64_t A)$/;"	f	file:	signature:(const unsigned char *table, size_t n, uint64_t A)
pexp	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char pexp[2][RSAref_MAX_PLEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
pkcs8_enced_private_key_info_from_der	GmSSL/include/gmssl/pkcs8.h	/^int pkcs8_enced_private_key_info_from_der($/;"	p	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, int *cipher, const uint8_t **iv, size_t *ivlen, const uint8_t **enced, size_t *encedlen, const uint8_t **in, size_t *inlen)
pkcs8_enced_private_key_info_from_der	GmSSL/src/pkcs8.c	/^int pkcs8_enced_private_key_info_from_der($/;"	f	signature:( const uint8_t **salt, size_t *saltlen, int *iter, int *keylen, int *prf, int *cipher, const uint8_t **iv, size_t *ivlen, const uint8_t **enced, size_t *encedlen, const uint8_t **in, size_t *inlen)
pkcs8_enced_private_key_info_print	GmSSL/include/gmssl/pkcs8.h	/^int pkcs8_enced_private_key_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pkcs8_enced_private_key_info_print	GmSSL/src/pkcs8.c	/^int pkcs8_enced_private_key_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
pkcs8_enced_private_key_info_to_der	GmSSL/include/gmssl/pkcs8.h	/^int pkcs8_enced_private_key_info_to_der($/;"	p	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, int cipher, const uint8_t *iv, size_t ivlen, const uint8_t *enced, size_t encedlen, uint8_t **out, size_t *outlen)
pkcs8_enced_private_key_info_to_der	GmSSL/src/pkcs8.c	/^int pkcs8_enced_private_key_info_to_der($/;"	f	signature:( const uint8_t *salt, size_t saltlen, int iter, int keylen, int prf, int cipher, const uint8_t *iv, size_t ivlen, const uint8_t *enced, size_t encedlen, uint8_t **out, size_t *outlen)
pkey_cap	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*pkey_cap)(unsigned int vendor_cap);$/;"	m	struct:sdf_vendor_st	access:public
pkey_std2vendor	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*pkey_std2vendor)(unsigned int std_id);$/;"	m	struct:sdf_vendor_st	access:public
pkey_vendor2std	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*pkey_vendor2std)(unsigned int vendor_id);$/;"	m	struct:sdf_vendor_st	access:public
point	GmSSL/include/gmssl/sm2.h	/^	SM2_POINT point;$/;"	m	struct:__anon50	access:public
prime	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char prime[2][RSAref_MAX_PLEN];$/;"	m	struct:RSArefPrivateKey_st	access:public
print_bit	sm4_bs.c	/^void print_bit(unsigned long long x)$/;"	f	signature:(unsigned long long x)
print_bits	GmSSL/tests/asn1test.c	/^static void print_bits(const uint8_t *bits, size_t nbits)$/;"	f	file:	signature:(const uint8_t *bits, size_t nbits)
print_bn	GmSSL/src/sm2_lib.c	59;"	d	file:
print_buf	GmSSL/tests/asn1test.c	/^static void print_buf(const uint8_t *a, size_t len)$/;"	f	file:	signature:(const uint8_t *a, size_t len)
print_bytes	GmSSL/include/gmssl/error.h	/^void print_bytes(const uint8_t *in, size_t inlen);$/;"	p	signature:(const uint8_t *in, size_t inlen)
print_bytes	GmSSL/src/debug.c	/^void print_bytes(const uint8_t *data, size_t datalen)$/;"	f	signature:(const uint8_t *data, size_t datalen)
print_der	GmSSL/include/gmssl/error.h	/^void print_der(const uint8_t *in, size_t inlen);$/;"	p	signature:(const uint8_t *in, size_t inlen)
print_der	GmSSL/src/debug.c	/^void print_der(const uint8_t *in, size_t inlen)$/;"	f	signature:(const uint8_t *in, size_t inlen)
print_int	sm4_bs.c	/^void print_int(unsigned long long PH[4],unsigned long long PL[4],long long id)$/;"	f	signature:(unsigned long long PH[4],unsigned long long PL[4],long long id)
print_integer	GmSSL/tests/asn1test.c	/^static void print_integer(const uint8_t *a, size_t alen)$/;"	f	file:	signature:(const uint8_t *a, size_t alen)
print_nodes	GmSSL/include/gmssl/error.h	/^void print_nodes(const uint32_t *in, size_t inlen);$/;"	p	signature:(const uint32_t *in, size_t inlen)
print_nodes	GmSSL/src/debug.c	/^void print_nodes(const uint32_t *in, size_t inlen)$/;"	f	signature:(const uint32_t *in, size_t inlen)
print_octets	GmSSL/tests/asn1test.c	/^static void print_octets(const uint8_t *o, size_t olen)$/;"	f	file:	signature:(const uint8_t *o, size_t olen)
print_rk	GmSSL/src/aes.c	/^static void print_rk(const AES_KEY *aes_key)$/;"	f	file:	signature:(const AES_KEY *aes_key)
print_state	GmSSL/src/aes.c	/^static void print_state(const uint8_t S[4][4])$/;"	f	file:	signature:(const uint8_t S[4][4])
print_usage	GmSSL/tools/sdfutil/sdfutil.c	/^void print_usage(FILE *out, const char *prog)$/;"	f	signature:(FILE *out, const char *prog)
print_usage	GmSSL/tools/tls13_client.c	/^void print_usage(const char *prog)$/;"	f	signature:(const char *prog)
print_usage	GmSSL/tools/tls13_server.c	/^static void print_usage(const char *prog)$/;"	f	file:	signature:(const char *prog)
private_key	GmSSL/include/gmssl/sm2.h	/^	uint8_t private_key[32];$/;"	m	struct:__anon46	access:public
prk	GmSSL/tests/hkdftest.c	/^	char *prk;$/;"	m	struct:__anon8	file:	access:public
protocol_versions	GmSSL/include/gmssl/tls.h	/^	int protocol_versions[4];$/;"	m	struct:__anon28	access:public
protocol_versions_cnt	GmSSL/include/gmssl/tls.h	/^	size_t protocol_versions_cnt;$/;"	m	struct:__anon28	access:public
public_key	GmSSL/include/gmssl/sdf.h	/^	SM2_KEY public_key;$/;"	m	struct:__anon68	access:public
public_key	GmSSL/include/gmssl/skf.h	/^	SM2_KEY public_key;$/;"	m	struct:__anon32	access:public
public_key	GmSSL/include/gmssl/sm2.h	/^	SM2_POINT public_key;$/;"	m	struct:__anon46	access:public
qnxnto	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	GmSSL/build/CMakeFiles/3.21.3/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
r	GmSSL/include/gmssl/sm2.h	/^	uint8_t r[32];$/;"	m	struct:__anon48	access:public
r	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char r[ECCref_MAX_LEN];$/;"	m	struct:ECCSignature_st	access:public
rand_bytes	GmSSL/include/gmssl/rand.h	/^int rand_bytes(uint8_t *buf, size_t buflen);$/;"	p	signature:(uint8_t *buf, size_t buflen)
rand_bytes	GmSSL/src/rand.c	/^int rand_bytes(uint8_t *buf, size_t len)$/;"	f	signature:(uint8_t *buf, size_t len)
rand_main	GmSSL/tools/gmssl.c	/^extern int rand_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
rand_main	GmSSL/tools/rand.c	/^int rand_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
rc4_generate_keybyte	GmSSL/src/rc4.c	/^uint8_t rc4_generate_keybyte(RC4_STATE *state)$/;"	f	signature:(RC4_STATE *state)
rc4_generate_keystream	GmSSL/include/gmssl/rc4.h	/^void rc4_generate_keystream(RC4_STATE *state, size_t outlen, uint8_t *out);$/;"	p	signature:(RC4_STATE *state, size_t outlen, uint8_t *out)
rc4_generate_keystream	GmSSL/src/rc4.c	/^void rc4_generate_keystream(RC4_STATE *state, size_t outlen, uint8_t *out)$/;"	f	signature:(RC4_STATE *state, size_t outlen, uint8_t *out)
rc4_init	GmSSL/include/gmssl/rc4.h	/^void rc4_init(RC4_STATE *state, const uint8_t *key, size_t keylen);$/;"	p	signature:(RC4_STATE *state, const uint8_t *key, size_t keylen)
rc4_init	GmSSL/src/rc4.c	/^void rc4_init(RC4_STATE *state, const uint8_t *key, size_t keylen)$/;"	f	signature:(RC4_STATE *state, const uint8_t *key, size_t keylen)
rdrand_bytes	GmSSL/include/gmssl/rand.h	/^int rdrand_bytes(uint8_t *buf, size_t buflen);$/;"	p	signature:(uint8_t *buf, size_t buflen)
rdrand_bytes	GmSSL/src/rdrand.c	/^int rdrand_bytes(uint8_t *buf, size_t buflen)$/;"	f	signature:(uint8_t *buf, size_t buflen)
rdseed_bytes	GmSSL/include/gmssl/rand.h	/^int rdseed_bytes(uint8_t *buf, size_t buflen);$/;"	p	signature:(uint8_t *buf, size_t buflen)
rdseed_bytes	GmSSL/src/rdrand.c	/^int rdseed_bytes(uint8_t *buf, size_t buflen)$/;"	f	signature:(uint8_t *buf, size_t buflen)
record	GmSSL/include/gmssl/tls.h	/^	uint8_t record[TLS_MAX_RECORD_SIZE];$/;"	m	struct:__anon30	access:public
reqgen_main	GmSSL/tools/gmssl.c	/^extern int reqgen_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
reqgen_main	GmSSL/tools/reqgen.c	/^int reqgen_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
reqparse_main	GmSSL/tools/gmssl.c	/^extern int reqparse_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
reqparse_main	GmSSL/tools/reqparse.c	/^int reqparse_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
reqsign_main	GmSSL/tools/gmssl.c	/^extern int reqsign_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
reqsign_main	GmSSL/tools/reqsign.c	/^int reqsign_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
reseed_counter	GmSSL/include/gmssl/hash_drbg.h	/^	uint64_t reseed_counter;$/;"	m	struct:__anon73	access:public
rk	GmSSL/include/gmssl/aes.h	/^	uint32_t rk[4 * (AES_MAX_ROUNDS + 1)];$/;"	m	struct:__anon33	access:public
rk	GmSSL/include/gmssl/des.h	/^	uint64_t rk[DES_ROUNDS];$/;"	m	struct:__anon36	access:public
rk	GmSSL/include/gmssl/sm4.h	/^	uint32_t rk[SM4_NUM_ROUNDS];$/;"	m	struct:__anon62	access:public
rk	GmSSL/sm4.h	/^	uint32_t rk[SM4_NUM_ROUNDS];$/;"	m	struct:__anon78	access:public
rk	GmSSL/src/sm4.h	/^	uint32_t rk[SM4_NUM_ROUNDS];$/;"	m	struct:__anon82	access:public
rkh	sm4_bs.h	/^	unsigned long long rkh[SMS4_NUM_ROUNDS_BS][4];$/;"	m	struct:__anon1	access:public
rkl	sm4_bs.h	/^	unsigned long long rkl[SMS4_NUM_ROUNDS_BS][4];$/;"	m	struct:__anon1	access:public
rot	baseSM4.c	4;"	d	file:
rot_word	GmSSL/src/aes.c	/^static uint32_t rot_word(uint32_t A)$/;"	f	file:	signature:(uint32_t A)
round_fun	oSM4.c	/^void round_fun(uint32_t* x, uint32_t k) {$/;"	f	signature:(uint32_t* x, uint32_t k)
roundkey	oSM4.c	/^uint32_t roundkey[36] = { 0 };$/;"	v
rounds	GmSSL/include/gmssl/aes.h	/^	size_t rounds;$/;"	m	struct:__anon33	access:public
rsaPrivateKeyBuf	GmSSL/tools/sdfutil/sdf_dummy.c	/^unsigned char rsaPrivateKeyBuf[1412] = {$/;"	v
rsaPublicKeyBuf	GmSSL/tools/sdfutil/sdf_dummy.c	/^unsigned char rsaPublicKeyBuf[516] = {$/;"	v
rsa_public_key_print	GmSSL/include/gmssl/rsa.h	/^int rsa_public_key_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
rsa_public_key_print	GmSSL/src/rsa.c	/^int rsa_public_key_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
s	GmSSL/include/gmssl/sm2.h	/^	uint8_t s[32];$/;"	m	struct:__anon48	access:public
s	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char s[ECCref_MAX_LEN];$/;"	m	struct:ECCSignature_st	access:public
salt	GmSSL/tests/hkdftest.c	/^	char *salt;$/;"	m	struct:__anon8	file:	access:public
salt	GmSSL/tests/pbkdf2test.c	/^	char *salt;$/;"	m	struct:__anon13	file:	access:public
sansec_cipher_cap	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_cipher_cap(unsigned int vendor_cap)$/;"	f	file:	signature:(unsigned int vendor_cap)
sansec_cipher_std2vendor	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_cipher_std2vendor(unsigned int std_id)$/;"	f	file:	signature:(unsigned int std_id)
sansec_cipher_vendor2std	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_cipher_vendor2std(unsigned int vendor_id)$/;"	f	file:	signature:(unsigned int vendor_id)
sansec_ciphers	GmSSL/tools/sdfutil/sdf_sansec.c	/^static SDF_ALGOR_PAIR sansec_ciphers[] = {$/;"	v	file:
sansec_decode_ecccipher	GmSSL/tools/sdfutil/sdf_sansec.c	/^static int sansec_decode_ecccipher(ECCCipher *ec, const void *vendor)$/;"	f	file:	signature:(ECCCipher *ec, const void *vendor)
sansec_digest_cap	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_digest_cap(unsigned int vendor_cap)$/;"	f	file:	signature:(unsigned int vendor_cap)
sansec_digest_std2vendor	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_digest_std2vendor(unsigned int std_id)$/;"	f	file:	signature:(unsigned int std_id)
sansec_digest_vendor2std	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_digest_vendor2std(unsigned int vendor_id)$/;"	f	file:	signature:(unsigned int vendor_id)
sansec_digests	GmSSL/tools/sdfutil/sdf_sansec.c	/^static SDF_ALGOR_PAIR sansec_digests[] = {$/;"	v	file:
sansec_encode_ecccipher	GmSSL/tools/sdfutil/sdf_sansec.c	/^static int sansec_encode_ecccipher(const ECCCipher *ec, void *vendor)$/;"	f	file:	signature:(const ECCCipher *ec, void *vendor)
sansec_get_error_reason	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned long sansec_get_error_reason(int err)$/;"	f	file:	signature:(int err)
sansec_pkey_cap	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_pkey_cap(unsigned int vendor_cap)$/;"	f	file:	signature:(unsigned int vendor_cap)
sansec_pkey_std2vendor	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_pkey_std2vendor(unsigned int std_id)$/;"	f	file:	signature:(unsigned int std_id)
sansec_pkey_vendor2std	GmSSL/tools/sdfutil/sdf_sansec.c	/^static unsigned int sansec_pkey_vendor2std(unsigned int vendor_id)$/;"	f	file:	signature:(unsigned int vendor_id)
sansec_pkeys	GmSSL/tools/sdfutil/sdf_sansec.c	/^static SDF_ALGOR_PAIR sansec_pkeys[] = {$/;"	v	file:
sdf_cipher_caps	GmSSL/tools/sdfutil/sdf_ext.c	/^static table_item_t sdf_cipher_caps[] = {$/;"	v	file:
sdf_close_device	GmSSL/include/gmssl/sdf.h	/^int sdf_close_device(SDF_DEVICE *dev);$/;"	p	signature:(SDF_DEVICE *dev)
sdf_digest_caps	GmSSL/tools/sdfutil/sdf_ext.c	/^static table_item_t sdf_digest_caps[] = {$/;"	v	file:
sdf_load_key	GmSSL/include/gmssl/sdf.h	/^int sdf_load_key(SDF_DEVICE *dev, SDF_KEY *key, int index, const char *pass);$/;"	p	signature:(SDF_DEVICE *dev, SDF_KEY *key, int index, const char *pass)
sdf_load_key	GmSSL/include/gmssl/skf.h	/^int sdf_load_key(SKF_DEVICE *dev, const char *appname, const char *pass, const char *container_name, SKF_KEY *key);$/;"	p	signature:(SKF_DEVICE *dev, const char *appname, const char *pass, const char *container_name, SKF_KEY *key)
sdf_method	GmSSL/tools/sdfutil/sdf_lib.c	/^SDF_METHOD *sdf_method = NULL;$/;"	v
sdf_method_st	GmSSL/tools/sdfutil/sdf_int.h	/^typedef struct sdf_method_st {$/;"	s
sdf_method_st::CalculateMAC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_CalculateMAC_FuncPtr CalculateMAC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::CloseDevice	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_CloseDevice_FuncPtr CloseDevice;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::CloseSession	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_CloseSession_FuncPtr CloseSession;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::CreateObject	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_CreateObject_FuncPtr CreateObject;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::Decrypt	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_Decrypt_FuncPtr Decrypt;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::DeleteObject	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_DeleteObject_FuncPtr DeleteObject;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::DestroyKey	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_DestroyKey_FuncPtr DestroyKey;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::Encrypt	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_Encrypt_FuncPtr Encrypt;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExchangeDigitEnvelopeBaseOnECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExchangeDigitEnvelopeBaseOnECC_FuncPtr ExchangeDigitEnvelopeBaseOnECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExchangeDigitEnvelopeBaseOnRSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExchangeDigitEnvelopeBaseOnRSA_FuncPtr ExchangeDigitEnvelopeBaseOnRSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExportEncPublicKey_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExportEncPublicKey_ECC_FuncPtr ExportEncPublicKey_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExportEncPublicKey_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExportEncPublicKey_RSA_FuncPtr ExportEncPublicKey_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExportSignPublicKey_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExportSignPublicKey_ECC_FuncPtr ExportSignPublicKey_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExportSignPublicKey_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExportSignPublicKey_RSA_FuncPtr ExportSignPublicKey_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExternalDecrypt_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExternalDecrypt_ECC_FuncPtr ExternalDecrypt_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExternalEncrypt_ECC_FuncPtr ExternalEncrypt_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExternalPublicKeyOperation_RSA_FuncPtr ExternalPublicKeyOperation_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ExternalVerify_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ExternalVerify_ECC_FuncPtr ExternalVerify_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateAgreementDataAndKeyWithECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateAgreementDataAndKeyWithECC_FuncPtr GenerateAgreementDataAndKeyWithECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateAgreementDataWithECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateAgreementDataWithECC_FuncPtr GenerateAgreementDataWithECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateKeyPair_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyPair_ECC_FuncPtr GenerateKeyPair_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateKeyPair_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyPair_RSA_FuncPtr GenerateKeyPair_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateKeyWithECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithECC_FuncPtr GenerateKeyWithECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateKeyWithEPK_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithEPK_ECC_FuncPtr GenerateKeyWithEPK_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateKeyWithEPK_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithEPK_RSA_FuncPtr GenerateKeyWithEPK_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateKeyWithIPK_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithIPK_ECC_FuncPtr GenerateKeyWithIPK_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateKeyWithIPK_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithIPK_RSA_FuncPtr GenerateKeyWithIPK_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateKeyWithKEK	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateKeyWithKEK_FuncPtr GenerateKeyWithKEK;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GenerateRandom	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GenerateRandom_FuncPtr GenerateRandom;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GetDeviceInfo	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GetDeviceInfo_FuncPtr GetDeviceInfo;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::GetPrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_GetPrivateKeyAccessRight_FuncPtr GetPrivateKeyAccessRight;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::HashFinal	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_HashFinal_FuncPtr HashFinal;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::HashInit	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_HashInit_FuncPtr HashInit;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::HashUpdate	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_HashUpdate_FuncPtr HashUpdate;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ImportKeyWithISK_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ImportKeyWithISK_ECC_FuncPtr ImportKeyWithISK_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ImportKeyWithISK_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ImportKeyWithISK_RSA_FuncPtr ImportKeyWithISK_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ImportKeyWithKEK	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ImportKeyWithKEK_FuncPtr ImportKeyWithKEK;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::InternalDecrypt_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalDecrypt_ECC_FuncPtr InternalDecrypt_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::InternalEncrypt_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalEncrypt_ECC_FuncPtr InternalEncrypt_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::InternalPrivateKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalPrivateKeyOperation_RSA_FuncPtr InternalPrivateKeyOperation_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::InternalPublicKeyOperation_RSA	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalPublicKeyOperation_RSA_FuncPtr InternalPublicKeyOperation_RSA;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::InternalSign_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalSign_ECC_FuncPtr InternalSign_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::InternalVerify_ECC	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_InternalVerify_ECC_FuncPtr InternalVerify_ECC;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::OpenDevice	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_OpenDevice_FuncPtr OpenDevice;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::OpenSession	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_OpenSession_FuncPtr OpenSession;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ReadObject	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ReadObject_FuncPtr ReadObject;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::ReleasePrivateKeyAccessRight	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_ReleasePrivateKeyAccessRight_FuncPtr ReleasePrivateKeyAccessRight;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::WriteObject	GmSSL/tools/sdfutil/sdf_int.h	/^	SDF_WriteObject_FuncPtr WriteObject;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::dso	GmSSL/tools/sdfutil/sdf_int.h	/^	void *dso;$/;"	m	struct:sdf_method_st	access:public
sdf_method_st::name	GmSSL/tools/sdfutil/sdf_int.h	/^	char *name;$/;"	m	struct:sdf_method_st	access:public
sdf_open_device	GmSSL/include/gmssl/sdf.h	/^int sdf_open_device(SDF_DEVICE *dev);$/;"	p	signature:(SDF_DEVICE *dev)
sdf_pkey_caps	GmSSL/tools/sdfutil/sdf_ext.c	/^static table_item_t sdf_pkey_caps[] = {$/;"	v	file:
sdf_print_device_info	GmSSL/include/gmssl/sdf.h	/^int sdf_print_device_info(FILE *fp, int fmt, int ind, const char *lable, SDF_DEVICE *dev);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *lable, SDF_DEVICE *dev)
sdf_rand_bytes	GmSSL/include/gmssl/sdf.h	/^int sdf_rand_bytes(SDF_DEVICE *dev, uint8_t *buf, size_t len);$/;"	p	signature:(SDF_DEVICE *dev, uint8_t *buf, size_t len)
sdf_release_key	GmSSL/include/gmssl/sdf.h	/^int sdf_release_key(SDF_KEY *key);$/;"	p	signature:(SDF_KEY *key)
sdf_sansec	GmSSL/tools/sdfutil/sdf_sansec.c	/^SDF_VENDOR sdf_sansec = {$/;"	v
sdf_sign	GmSSL/include/gmssl/sdf.h	/^int sdf_sign(SDF_KEY *key, const uint8_t dgst[32], uint8_t *sig, size_t *siglen);$/;"	p	signature:(SDF_KEY *key, const uint8_t dgst[32], uint8_t *sig, size_t *siglen)
sdf_vendor	GmSSL/tools/sdfutil/sdf_lib.c	/^SDF_VENDOR *sdf_vendor = NULL;$/;"	v
sdf_vendor_st	GmSSL/tools/sdfutil/sdf_int.h	/^typedef struct sdf_vendor_st {$/;"	s
sdf_vendor_st::cipher_cap	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*cipher_cap)(unsigned int vendor_cap);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::cipher_std2vendor	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*cipher_std2vendor)(unsigned int std_id);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::cipher_vendor2std	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*cipher_vendor2std)(unsigned int vendor_id);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::decode_ecccipher	GmSSL/tools/sdfutil/sdf_int.h	/^	int (*decode_ecccipher)(ECCCipher *a, const void *buf);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::digest_cap	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*digest_cap)(unsigned int vendor_cap);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::digest_std2vendor	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*digest_std2vendor)(unsigned int std_id);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::digest_vendor2std	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*digest_vendor2std)(unsigned int vendor_id);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::encode_ecccipher	GmSSL/tools/sdfutil/sdf_int.h	/^	int (*encode_ecccipher)(const ECCCipher *a, void *buf);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::get_error_reason	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned long (*get_error_reason)(int err);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::name	GmSSL/tools/sdfutil/sdf_int.h	/^	char *name;$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::pkey_cap	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*pkey_cap)(unsigned int vendor_cap);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::pkey_std2vendor	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*pkey_std2vendor)(unsigned int std_id);$/;"	m	struct:sdf_vendor_st	access:public
sdf_vendor_st::pkey_vendor2std	GmSSL/tools/sdfutil/sdf_int.h	/^	unsigned int (*pkey_vendor2std)(unsigned int vendor_id);$/;"	m	struct:sdf_vendor_st	access:public
seedlen	GmSSL/include/gmssl/hash_drbg.h	/^	size_t seedlen;$/;"	m	struct:__anon73	access:public
serial	GmSSL/include/gmssl/skf.h	/^	char serial[33];$/;"	m	struct:__anon31	access:public
server_certs	GmSSL/include/gmssl/tls.h	/^	uint8_t server_certs[TLS_MAX_CERTIFICATES_SIZE]; \/\/$/;"	m	struct:__anon30	access:public
server_certs_len	GmSSL/include/gmssl/tls.h	/^	size_t server_certs_len;$/;"	m	struct:__anon30	access:public
server_seq_num	GmSSL/include/gmssl/tls.h	/^	uint8_t server_seq_num[8];$/;"	m	struct:__anon30	access:public
server_write_enc_key	GmSSL/include/gmssl/tls.h	/^	SM4_KEY server_write_enc_key;$/;"	m	struct:__anon30	access:public
server_write_iv	GmSSL/include/gmssl/tls.h	/^	uint8_t server_write_iv[12];$/;"	m	struct:__anon30	access:public
server_write_key	GmSSL/include/gmssl/tls.h	/^	BLOCK_CIPHER_KEY server_write_key; \/\/ used in tls13.c$/;"	m	struct:__anon30	access:public
server_write_mac_ctx	GmSSL/include/gmssl/tls.h	/^	SM3_HMAC_CTX server_write_mac_ctx;$/;"	m	struct:__anon30	access:public
sessionHandle	GmSSL/tools/sdfutil/sdf_dummy.c	/^static char *sessionHandle = "SDF Session Handle";$/;"	v	file:
session_handle	GmSSL/include/gmssl/sdf.h	/^	void *session_handle;$/;"	m	struct:__anon68	access:public
session_id	GmSSL/include/gmssl/tls.h	/^	uint8_t session_id[32];$/;"	m	struct:__anon29	access:public
session_id	GmSSL/include/gmssl/tls.h	/^	uint8_t session_id[32];$/;"	m	struct:__anon30	access:public
session_id_len	GmSSL/include/gmssl/tls.h	/^	size_t session_id_len;$/;"	m	struct:__anon29	access:public
session_id_len	GmSSL/include/gmssl/tls.h	/^	size_t session_id_len;$/;"	m	struct:__anon30	access:public
set_decrypt_key	GmSSL/include/gmssl/block_cipher.h	/^	block_cipher_set_decrypt_key_func set_decrypt_key;$/;"	m	struct:BLOCK_CIPHER	access:public
set_encrypt_key	GmSSL/include/gmssl/block_cipher.h	/^	block_cipher_set_encrypt_key_func set_encrypt_key;$/;"	m	struct:BLOCK_CIPHER	access:public
set_x509_name	GmSSL/tests/x509test.c	/^static int set_x509_name(uint8_t *name, size_t *namelen, size_t maxlen)$/;"	f	file:	signature:(uint8_t *name, size_t *namelen, size_t maxlen)
sha1_compress_blocks	GmSSL/src/sha1.c	/^static void sha1_compress_blocks(uint32_t state[5],$/;"	f	file:	signature:(uint32_t state[5], const unsigned char *data, size_t blocks)
sha1_ctx	GmSSL/include/gmssl/digest.h	/^		SHA1_CTX sha1_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
sha1_digest	GmSSL/include/gmssl/sha1.h	/^void sha1_digest(const uint8_t *data, size_t datalen, uint8_t dgst[SHA1_DIGEST_SIZE]);$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t dgst[SHA1_DIGEST_SIZE])
sha1_digest	GmSSL/src/sha1.c	/^void sha1_digest(const unsigned char *data, size_t datalen,$/;"	f	signature:(const unsigned char *data, size_t datalen, unsigned char dgst[SHA1_DIGEST_SIZE])
sha1_digest_finish	GmSSL/src/digest.c	/^static int sha1_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
sha1_digest_init	GmSSL/src/digest.c	/^static int sha1_digest_init(DIGEST_CTX *ctx)$/;"	f	file:	signature:(DIGEST_CTX *ctx)
sha1_digest_object	GmSSL/src/digest.c	/^static const DIGEST sha1_digest_object = {$/;"	v	file:
sha1_digest_update	GmSSL/src/digest.c	/^static int sha1_digest_update(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)$/;"	f	file:	signature:(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)
sha1_finish	GmSSL/include/gmssl/sha1.h	/^void sha1_finish(SHA1_CTX *ctx, uint8_t dgst[SHA1_DIGEST_SIZE]);$/;"	p	signature:(SHA1_CTX *ctx, uint8_t dgst[SHA1_DIGEST_SIZE])
sha1_finish	GmSSL/src/sha1.c	/^void sha1_finish(SHA1_CTX *ctx, unsigned char *dgst)$/;"	f	signature:(SHA1_CTX *ctx, unsigned char *dgst)
sha1_init	GmSSL/include/gmssl/sha1.h	/^void sha1_init(SHA1_CTX *ctx);$/;"	p	signature:(SHA1_CTX *ctx)
sha1_init	GmSSL/src/sha1.c	/^void sha1_init(SHA1_CTX *ctx)$/;"	f	signature:(SHA1_CTX *ctx)
sha1_update	GmSSL/include/gmssl/sha1.h	/^void sha1_update(SHA1_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SHA1_CTX *ctx, const uint8_t *data, size_t datalen)
sha1_update	GmSSL/src/sha1.c	/^void sha1_update(SHA1_CTX *ctx, const unsigned char *data, size_t datalen)$/;"	f	signature:(SHA1_CTX *ctx, const unsigned char *data, size_t datalen)
sha224_ctx	GmSSL/include/gmssl/digest.h	/^		SHA224_CTX sha224_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
sha224_digest	GmSSL/include/gmssl/sha2.h	/^void sha224_digest(const uint8_t *data, size_t datalen,$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t dgst[SHA224_DIGEST_SIZE])
sha224_digest	GmSSL/src/sha256.c	/^void sha224_digest(const unsigned char *data, size_t datalen,$/;"	f	signature:(const unsigned char *data, size_t datalen, unsigned char dgst[SHA224_DIGEST_SIZE])
sha224_digest_finish	GmSSL/src/digest.c	/^static int sha224_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
sha224_digest_init	GmSSL/src/digest.c	/^static int sha224_digest_init(DIGEST_CTX *ctx)$/;"	f	file:	signature:(DIGEST_CTX *ctx)
sha224_digest_object	GmSSL/src/digest.c	/^static const DIGEST sha224_digest_object = {$/;"	v	file:
sha224_digest_update	GmSSL/src/digest.c	/^static int sha224_digest_update(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)$/;"	f	file:	signature:(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)
sha224_finish	GmSSL/include/gmssl/sha2.h	/^void sha224_finish(SHA224_CTX *ctx, uint8_t dgst[SHA224_DIGEST_SIZE]);$/;"	p	signature:(SHA224_CTX *ctx, uint8_t dgst[SHA224_DIGEST_SIZE])
sha224_finish	GmSSL/src/sha256.c	/^void sha224_finish(SHA224_CTX *ctx, unsigned char dgst[SHA224_DIGEST_SIZE])$/;"	f	signature:(SHA224_CTX *ctx, unsigned char dgst[SHA224_DIGEST_SIZE])
sha224_init	GmSSL/include/gmssl/sha2.h	/^void sha224_init(SHA224_CTX *ctx);$/;"	p	signature:(SHA224_CTX *ctx)
sha224_init	GmSSL/src/sha256.c	/^void sha224_init(SHA224_CTX *ctx)$/;"	f	signature:(SHA224_CTX *ctx)
sha224_update	GmSSL/include/gmssl/sha2.h	/^void sha224_update(SHA224_CTX *ctx, const uint8_t* data, size_t datalen);$/;"	p	signature:(SHA224_CTX *ctx, const uint8_t* data, size_t datalen)
sha224_update	GmSSL/src/sha256.c	/^void sha224_update(SHA224_CTX *ctx, const unsigned char *data, size_t datalen)$/;"	f	signature:(SHA224_CTX *ctx, const unsigned char *data, size_t datalen)
sha256_compress_blocks	GmSSL/src/sha256.c	/^static void sha256_compress_blocks(uint32_t state[8],$/;"	f	file:	signature:(uint32_t state[8], const unsigned char *data, size_t blocks)
sha256_ctx	GmSSL/include/gmssl/digest.h	/^		SHA256_CTX sha256_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
sha256_digest	GmSSL/include/gmssl/sha2.h	/^void sha256_digest(const uint8_t *data, size_t datalen,$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t dgst[SHA256_DIGEST_SIZE])
sha256_digest	GmSSL/src/sha256.c	/^void sha256_digest(const unsigned char *data, size_t datalen,$/;"	f	signature:(const unsigned char *data, size_t datalen, unsigned char dgst[SHA256_DIGEST_SIZE])
sha256_digest_finish	GmSSL/src/digest.c	/^static int sha256_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
sha256_digest_init	GmSSL/src/digest.c	/^static int sha256_digest_init(DIGEST_CTX *ctx)$/;"	f	file:	signature:(DIGEST_CTX *ctx)
sha256_digest_object	GmSSL/src/digest.c	/^static const DIGEST sha256_digest_object = {$/;"	v	file:
sha256_digest_update	GmSSL/src/digest.c	/^static int sha256_digest_update(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)$/;"	f	file:	signature:(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)
sha256_finish	GmSSL/include/gmssl/sha2.h	/^void sha256_finish(SHA256_CTX *ctx, uint8_t dgst[SHA256_DIGEST_SIZE]);$/;"	p	signature:(SHA256_CTX *ctx, uint8_t dgst[SHA256_DIGEST_SIZE])
sha256_finish	GmSSL/src/sha256.c	/^void sha256_finish(SHA256_CTX *ctx, unsigned char dgst[SHA256_DIGEST_SIZE])$/;"	f	signature:(SHA256_CTX *ctx, unsigned char dgst[SHA256_DIGEST_SIZE])
sha256_init	GmSSL/include/gmssl/sha2.h	/^void sha256_init(SHA256_CTX *ctx);$/;"	p	signature:(SHA256_CTX *ctx)
sha256_init	GmSSL/src/sha256.c	/^void sha256_init(SHA256_CTX *ctx)$/;"	f	signature:(SHA256_CTX *ctx)
sha256_update	GmSSL/include/gmssl/sha2.h	/^void sha256_update(SHA256_CTX *ctx, const uint8_t* data, size_t datalen);$/;"	p	signature:(SHA256_CTX *ctx, const uint8_t* data, size_t datalen)
sha256_update	GmSSL/src/sha256.c	/^void sha256_update(SHA256_CTX *ctx, const unsigned char *data, size_t datalen)$/;"	f	signature:(SHA256_CTX *ctx, const unsigned char *data, size_t datalen)
sha384_compress	GmSSL/src/sha512.c	/^void sha384_compress(uint64_t state[8], const unsigned char block[64])$/;"	f	signature:(uint64_t state[8], const unsigned char block[64])
sha384_ctx	GmSSL/include/gmssl/digest.h	/^		SHA384_CTX sha384_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
sha384_digest	GmSSL/include/gmssl/sha2.h	/^void sha384_digest(const uint8_t *data, size_t datalen,$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t dgst[SHA384_DIGEST_SIZE])
sha384_digest	GmSSL/src/sha512.c	/^void sha384_digest(const unsigned char *data, size_t datalen,$/;"	f	signature:(const unsigned char *data, size_t datalen, unsigned char dgst[SHA384_DIGEST_SIZE])
sha384_digest_finish	GmSSL/src/digest.c	/^static int sha384_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
sha384_digest_init	GmSSL/src/digest.c	/^static int sha384_digest_init(DIGEST_CTX *ctx)$/;"	f	file:	signature:(DIGEST_CTX *ctx)
sha384_digest_object	GmSSL/src/digest.c	/^static const DIGEST sha384_digest_object = {$/;"	v	file:
sha384_digest_update	GmSSL/src/digest.c	/^static int sha384_digest_update(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)$/;"	f	file:	signature:(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)
sha384_finish	GmSSL/include/gmssl/sha2.h	/^void sha384_finish(SHA384_CTX *ctx, uint8_t dgst[SHA384_DIGEST_SIZE]);$/;"	p	signature:(SHA384_CTX *ctx, uint8_t dgst[SHA384_DIGEST_SIZE])
sha384_finish	GmSSL/src/sha512.c	/^void sha384_finish(SHA384_CTX *ctx, unsigned char dgst[SHA384_DIGEST_SIZE])$/;"	f	signature:(SHA384_CTX *ctx, unsigned char dgst[SHA384_DIGEST_SIZE])
sha384_init	GmSSL/include/gmssl/sha2.h	/^void sha384_init(SHA384_CTX *ctx);$/;"	p	signature:(SHA384_CTX *ctx)
sha384_init	GmSSL/src/sha512.c	/^void sha384_init(SHA384_CTX *ctx)$/;"	f	signature:(SHA384_CTX *ctx)
sha384_update	GmSSL/include/gmssl/sha2.h	/^void sha384_update(SHA384_CTX *ctx, const uint8_t* data, size_t datalen);$/;"	p	signature:(SHA384_CTX *ctx, const uint8_t* data, size_t datalen)
sha384_update	GmSSL/src/sha512.c	/^void sha384_update(SHA384_CTX *ctx, const unsigned char *data, size_t datalen)$/;"	f	signature:(SHA384_CTX *ctx, const unsigned char *data, size_t datalen)
sha3_224_finish	GmSSL/include/gmssl/sha3.h	/^void sha3_224_finish(SHA3_224_CTX *ctx, uint8_t dgst[SHA3_224_DIGEST_SIZE]);$/;"	p	signature:(SHA3_224_CTX *ctx, uint8_t dgst[SHA3_224_DIGEST_SIZE])
sha3_224_init	GmSSL/include/gmssl/sha3.h	/^void sha3_224_init(SHA3_224_CTX *ctx);$/;"	p	signature:(SHA3_224_CTX *ctx)
sha3_224_update	GmSSL/include/gmssl/sha3.h	/^void sha3_224_update(SHA3_224_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SHA3_224_CTX *ctx, const uint8_t *data, size_t datalen)
sha3_256_finish	GmSSL/include/gmssl/sha3.h	/^void sha3_256_finish(SHA3_256_CTX *ctx, uint8_t dgst[SHA3_256_DIGEST_SIZE]);$/;"	p	signature:(SHA3_256_CTX *ctx, uint8_t dgst[SHA3_256_DIGEST_SIZE])
sha3_256_init	GmSSL/include/gmssl/sha3.h	/^void sha3_256_init(SHA3_256_CTX *ctx);$/;"	p	signature:(SHA3_256_CTX *ctx)
sha3_256_update	GmSSL/include/gmssl/sha3.h	/^void sha3_256_update(SHA3_256_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SHA3_256_CTX *ctx, const uint8_t *data, size_t datalen)
sha3_384_finish	GmSSL/include/gmssl/sha3.h	/^void sha3_384_finish(SHA3_384_CTX *ctx, uint8_t dgst[SHA3_384_DIGEST_SIZE]);$/;"	p	signature:(SHA3_384_CTX *ctx, uint8_t dgst[SHA3_384_DIGEST_SIZE])
sha3_384_init	GmSSL/include/gmssl/sha3.h	/^void sha3_384_init(SHA3_384_CTX *ctx);$/;"	p	signature:(SHA3_384_CTX *ctx)
sha3_384_update	GmSSL/include/gmssl/sha3.h	/^void sha3_384_update(SHA3_384_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SHA3_384_CTX *ctx, const uint8_t *data, size_t datalen)
sha3_512_finish	GmSSL/include/gmssl/sha3.h	/^void sha3_512_finish(SHA3_512_CTX *ctx, uint8_t dgst[SHA3_512_DIGEST_SIZE]);$/;"	p	signature:(SHA3_512_CTX *ctx, uint8_t dgst[SHA3_512_DIGEST_SIZE])
sha3_512_init	GmSSL/include/gmssl/sha3.h	/^void sha3_512_init(SHA3_512_CTX *ctx);$/;"	p	signature:(SHA3_512_CTX *ctx)
sha3_512_update	GmSSL/include/gmssl/sha3.h	/^void sha3_512_update(SHA3_512_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SHA3_512_CTX *ctx, const uint8_t *data, size_t datalen)
sha3_keccak_p	GmSSL/include/gmssl/sha3.h	/^void sha3_keccak_p(uint8_t state[SHA3_KECCAK_P_SIZE]);$/;"	p	signature:(uint8_t state[SHA3_KECCAK_P_SIZE])
sha3_shake128	GmSSL/include/gmssl/sha3.h	/^void sha3_shake128(const uint8_t *in, size_t *inlen, size_t outlen, uint8_t *out);$/;"	p	signature:(const uint8_t *in, size_t *inlen, size_t outlen, uint8_t *out)
sha3_shake256	GmSSL/include/gmssl/sha3.h	/^void sha3_shake256(const uint8_t *in, size_t *inlen, size_t outlen, uint8_t *out);$/;"	p	signature:(const uint8_t *in, size_t *inlen, size_t outlen, uint8_t *out)
sha512_224_digest_finish	GmSSL/src/digest.c	/^static int sha512_224_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
sha512_224_digest_object	GmSSL/src/digest.c	/^static const DIGEST sha512_224_digest_object = {$/;"	v	file:
sha512_256_digest_finish	GmSSL/src/digest.c	/^static int sha512_256_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
sha512_256_digest_object	GmSSL/src/digest.c	/^static const DIGEST sha512_256_digest_object = {$/;"	v	file:
sha512_compress	GmSSL/src/sha512.c	/^void sha512_compress(uint64_t state[8], const unsigned char block[64])$/;"	f	signature:(uint64_t state[8], const unsigned char block[64])
sha512_compress_blocks	GmSSL/src/sha512.c	/^static void sha512_compress_blocks(uint64_t state[8],$/;"	f	file:	signature:(uint64_t state[8], const unsigned char *data, size_t blocks)
sha512_compress_blocks	GmSSL/src/sha512.c	/^static void sha512_compress_blocks(uint64_t state[8],$/;"	p	file:	signature:(uint64_t state[8], const unsigned char *data, size_t blocks)
sha512_ctx	GmSSL/include/gmssl/digest.h	/^		SHA512_CTX sha512_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
sha512_digest	GmSSL/include/gmssl/sha2.h	/^void sha512_digest(const uint8_t *data, size_t datalen,$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t dgst[SHA512_DIGEST_SIZE])
sha512_digest	GmSSL/src/sha512.c	/^void sha512_digest(const unsigned char *data, size_t datalen,$/;"	f	signature:(const unsigned char *data, size_t datalen, unsigned char dgst[SHA512_DIGEST_SIZE])
sha512_digest_finish	GmSSL/src/digest.c	/^static int sha512_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
sha512_digest_init	GmSSL/src/digest.c	/^static int sha512_digest_init(DIGEST_CTX *ctx)$/;"	f	file:	signature:(DIGEST_CTX *ctx)
sha512_digest_object	GmSSL/src/digest.c	/^static const DIGEST sha512_digest_object = {$/;"	v	file:
sha512_digest_update	GmSSL/src/digest.c	/^static int sha512_digest_update(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)$/;"	f	file:	signature:(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)
sha512_finish	GmSSL/include/gmssl/sha2.h	/^void sha512_finish(SHA512_CTX *ctx, uint8_t dgst[SHA512_DIGEST_SIZE]);$/;"	p	signature:(SHA512_CTX *ctx, uint8_t dgst[SHA512_DIGEST_SIZE])
sha512_finish	GmSSL/src/sha512.c	/^void sha512_finish(SHA512_CTX *ctx, unsigned char dgst[SHA512_DIGEST_SIZE])$/;"	f	signature:(SHA512_CTX *ctx, unsigned char dgst[SHA512_DIGEST_SIZE])
sha512_init	GmSSL/include/gmssl/sha2.h	/^void sha512_init(SHA512_CTX *ctx);$/;"	p	signature:(SHA512_CTX *ctx)
sha512_init	GmSSL/src/sha512.c	/^void sha512_init(SHA512_CTX *ctx)$/;"	f	signature:(SHA512_CTX *ctx)
sha512_update	GmSSL/include/gmssl/sha2.h	/^void sha512_update(SHA512_CTX *ctx, const uint8_t* data, size_t datalen);$/;"	p	signature:(SHA512_CTX *ctx, const uint8_t* data, size_t datalen)
sha512_update	GmSSL/src/sha512.c	/^void sha512_update(SHA512_CTX *ctx, const unsigned char *data, size_t datalen)$/;"	f	signature:(SHA512_CTX *ctx, const unsigned char *data, size_t datalen)
shift_rows	GmSSL/src/aes.c	/^static void shift_rows(uint8_t state[4][4])$/;"	f	file:	signature:(uint8_t state[4][4])
short_name	GmSSL/src/digest.c	/^	char *short_name;$/;"	m	struct:__anon81	file:	access:public
shutdown_mode	GmSSL/include/gmssl/tls.h	/^	int shutdown_mode;$/;"	m	struct:__anon28	access:public
sigma0	GmSSL/src/sha256.c	58;"	d	file:
sigma0	GmSSL/src/sha512.c	132;"	d	file:
sigma1	GmSSL/src/sha256.c	59;"	d	file:
sigma1	GmSSL/src/sha512.c	133;"	d	file:
sign_key	GmSSL/include/gmssl/cms.h	/^	SM2_KEY *sign_key;$/;"	m	struct:__anon71	access:public
skf_close_deivce	GmSSL/include/gmssl/skf.h	/^int skf_close_deivce(SKF_DEVICE *dev);$/;"	p	signature:(SKF_DEVICE *dev)
skf_open_device	GmSSL/include/gmssl/skf.h	/^int skf_open_device(SKF_DEVICE *dev, const char *devname, const uint8_t *authkey, size_t authkeylen);$/;"	p	signature:(SKF_DEVICE *dev, const char *devname, const uint8_t *authkey, size_t authkeylen)
skf_print_device_info	GmSSL/include/gmssl/skf.h	/^int skf_print_device_info(FILE *fp, int fmt, int ind, const char *lable, SKF_DEVICE *dev);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *lable, SKF_DEVICE *dev)
skf_rand_bytes	GmSSL/include/gmssl/skf.h	/^int skf_rand_bytes(SKF_DEVICE *dev, uint8_t *buf, size_t len);$/;"	p	signature:(SKF_DEVICE *dev, uint8_t *buf, size_t len)
skf_release_key	GmSSL/include/gmssl/skf.h	/^int skf_release_key(SKF_KEY *key);$/;"	p	signature:(SKF_KEY *key)
skf_sign	GmSSL/include/gmssl/skf.h	/^int skf_sign(SKF_KEY *key, const uint8_t dgst[32], uint8_t *sig, size_t *siglen);$/;"	p	signature:(SKF_KEY *key, const uint8_t dgst[32], uint8_t *sig, size_t *siglen)
sm2_bn288_add	GmSSL/src/sm2_alg.c	/^static void sm2_bn288_add(uint64_t r[9], const uint64_t a[9], const uint64_t b[9])$/;"	f	file:	signature:(uint64_t r[9], const uint64_t a[9], const uint64_t b[9])
sm2_bn288_cmp	GmSSL/src/sm2_alg.c	/^static int sm2_bn288_cmp(const uint64_t a[9], const uint64_t b[9])$/;"	f	file:	signature:(const uint64_t a[9], const uint64_t b[9])
sm2_bn288_sub	GmSSL/src/sm2_alg.c	/^static void sm2_bn288_sub(uint64_t ret[9], const uint64_t a[9], const uint64_t b[9])$/;"	f	file:	signature:(uint64_t ret[9], const uint64_t a[9], const uint64_t b[9])
sm2_bn_add	GmSSL/include/gmssl/sm2.h	/^void sm2_bn_add(SM2_BN r, const SM2_BN a, const SM2_BN b);$/;"	p	signature:(SM2_BN r, const SM2_BN a, const SM2_BN b)
sm2_bn_add	GmSSL/src/sm2_alg.c	/^void sm2_bn_add(SM2_BN r, const SM2_BN a, const SM2_BN b)$/;"	f	signature:(SM2_BN r, const SM2_BN a, const SM2_BN b)
sm2_bn_check	GmSSL/src/sm2_alg.c	/^int sm2_bn_check(const SM2_BN a)$/;"	f	signature:(const SM2_BN a)
sm2_bn_clean	GmSSL/include/gmssl/sm2.h	89;"	d
sm2_bn_cmp	GmSSL/include/gmssl/sm2.h	/^int sm2_bn_cmp(const SM2_BN a, const SM2_BN b);$/;"	p	signature:(const SM2_BN a, const SM2_BN b)
sm2_bn_cmp	GmSSL/src/sm2_alg.c	/^int sm2_bn_cmp(const SM2_BN a, const SM2_BN b)$/;"	f	signature:(const SM2_BN a, const SM2_BN b)
sm2_bn_copy	GmSSL/include/gmssl/sm2.h	88;"	d
sm2_bn_equ_hex	GmSSL/include/gmssl/sm2.h	/^int sm2_bn_equ_hex(const SM2_BN a, const char *hex);$/;"	p	signature:(const SM2_BN a, const char *hex)
sm2_bn_equ_hex	GmSSL/src/sm2_alg.c	/^int sm2_bn_equ_hex(const SM2_BN a, const char *hex)$/;"	f	signature:(const SM2_BN a, const char *hex)
sm2_bn_from_asn1_integer	GmSSL/include/gmssl/sm2.h	/^int sm2_bn_from_asn1_integer(SM2_BN r, const uint8_t *d, size_t dlen);$/;"	p	signature:(SM2_BN r, const uint8_t *d, size_t dlen)
sm2_bn_from_asn1_integer	GmSSL/src/sm2_alg.c	/^int sm2_bn_from_asn1_integer(SM2_BN r, const uint8_t *d, size_t dlen)$/;"	f	signature:(SM2_BN r, const uint8_t *d, size_t dlen)
sm2_bn_from_bytes	GmSSL/include/gmssl/sm2.h	/^void sm2_bn_from_bytes(SM2_BN r, const uint8_t in[32]);$/;"	p	signature:(SM2_BN r, const uint8_t in[32])
sm2_bn_from_bytes	GmSSL/src/sm2_alg.c	/^void sm2_bn_from_bytes(SM2_BN r, const uint8_t in[32])$/;"	f	signature:(SM2_BN r, const uint8_t in[32])
sm2_bn_from_hex	GmSSL/include/gmssl/sm2.h	/^int sm2_bn_from_hex(SM2_BN r, const char hex[64]);$/;"	p	signature:(SM2_BN r, const char hex[64])
sm2_bn_from_hex	GmSSL/src/sm2_alg.c	/^int sm2_bn_from_hex(SM2_BN r, const char hex[64])$/;"	f	signature:(SM2_BN r, const char hex[64])
sm2_bn_init	GmSSL/include/gmssl/sm2.h	85;"	d
sm2_bn_is_odd	GmSSL/include/gmssl/sm2.h	/^int sm2_bn_is_odd(const SM2_BN a);$/;"	p	signature:(const SM2_BN a)
sm2_bn_is_odd	GmSSL/src/sm2_alg.c	/^int sm2_bn_is_odd(const SM2_BN a)$/;"	f	signature:(const SM2_BN a)
sm2_bn_is_one	GmSSL/include/gmssl/sm2.h	/^int sm2_bn_is_one(const SM2_BN a);$/;"	p	signature:(const SM2_BN a)
sm2_bn_is_one	GmSSL/src/sm2_alg.c	/^int sm2_bn_is_one(const SM2_BN a)$/;"	f	signature:(const SM2_BN a)
sm2_bn_is_zero	GmSSL/include/gmssl/sm2.h	/^int sm2_bn_is_zero(const SM2_BN a);$/;"	p	signature:(const SM2_BN a)
sm2_bn_is_zero	GmSSL/src/sm2_alg.c	/^int sm2_bn_is_zero(const SM2_BN a)$/;"	f	signature:(const SM2_BN a)
sm2_bn_print	GmSSL/include/gmssl/sm2.h	/^int sm2_bn_print(FILE *fp, int fmt, int ind, const char *label, const SM2_BN a);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_BN a)
sm2_bn_print	GmSSL/src/sm2_alg.c	/^int sm2_bn_print(FILE *fp, int fmt, int ind, const char *label, const SM2_BN a)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_BN a)
sm2_bn_rand_range	GmSSL/include/gmssl/sm2.h	/^void sm2_bn_rand_range(SM2_BN r, const SM2_BN range); \/\/ 这个函数需要修改一下，从外部引入随机数$/;"	p	signature:(SM2_BN r, const SM2_BN range)
sm2_bn_rand_range	GmSSL/src/sm2_alg.c	/^void sm2_bn_rand_range(SM2_BN r, const SM2_BN range)$/;"	f	signature:(SM2_BN r, const SM2_BN range)
sm2_bn_set_one	GmSSL/include/gmssl/sm2.h	87;"	d
sm2_bn_set_word	GmSSL/include/gmssl/sm2.h	/^void sm2_bn_set_word(SM2_BN r, uint32_t a);$/;"	p	signature:(SM2_BN r, uint32_t a)
sm2_bn_set_word	GmSSL/src/sm2_alg.c	/^void sm2_bn_set_word(SM2_BN r, uint32_t a)$/;"	f	signature:(SM2_BN r, uint32_t a)
sm2_bn_set_zero	GmSSL/include/gmssl/sm2.h	86;"	d
sm2_bn_sub	GmSSL/include/gmssl/sm2.h	/^void sm2_bn_sub(SM2_BN ret, const SM2_BN a, const SM2_BN b);$/;"	p	signature:(SM2_BN ret, const SM2_BN a, const SM2_BN b)
sm2_bn_sub	GmSSL/src/sm2_alg.c	/^void sm2_bn_sub(SM2_BN ret, const SM2_BN a, const SM2_BN b)$/;"	f	signature:(SM2_BN ret, const SM2_BN a, const SM2_BN b)
sm2_bn_to_bits	GmSSL/include/gmssl/sm2.h	/^void sm2_bn_to_bits(const SM2_BN a, char bits[256]);$/;"	p	signature:(const SM2_BN a, char bits[256])
sm2_bn_to_bits	GmSSL/src/sm2_alg.c	/^void sm2_bn_to_bits(const SM2_BN a, char bits[256])$/;"	f	signature:(const SM2_BN a, char bits[256])
sm2_bn_to_bytes	GmSSL/include/gmssl/sm2.h	/^void sm2_bn_to_bytes(const SM2_BN a, uint8_t out[32]);$/;"	p	signature:(const SM2_BN a, uint8_t out[32])
sm2_bn_to_bytes	GmSSL/src/sm2_alg.c	/^void sm2_bn_to_bytes(const SM2_BN a, uint8_t out[32])$/;"	f	signature:(const SM2_BN a, uint8_t out[32])
sm2_bn_to_hex	GmSSL/include/gmssl/sm2.h	/^void sm2_bn_to_hex(const SM2_BN a, char hex[64]);$/;"	p	signature:(const SM2_BN a, char hex[64])
sm2_bn_to_hex	GmSSL/src/sm2_alg.c	/^void sm2_bn_to_hex(const SM2_BN a, char hex[64])$/;"	f	signature:(const SM2_BN a, char hex[64])
sm2_ciphertext_from_der	GmSSL/include/gmssl/sm2.h	/^int sm2_ciphertext_from_der(SM2_CIPHERTEXT *c, const uint8_t **in, size_t *inlen);$/;"	p	signature:(SM2_CIPHERTEXT *c, const uint8_t **in, size_t *inlen)
sm2_ciphertext_from_der	GmSSL/src/sm2_lib.c	/^int sm2_ciphertext_from_der(SM2_CIPHERTEXT *C, const uint8_t **in, size_t *inlen)$/;"	f	signature:(SM2_CIPHERTEXT *C, const uint8_t **in, size_t *inlen)
sm2_ciphertext_print	GmSSL/include/gmssl/sm2.h	/^int sm2_ciphertext_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
sm2_ciphertext_print	GmSSL/src/sm2_lib.c	/^int sm2_ciphertext_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
sm2_ciphertext_to_der	GmSSL/include/gmssl/sm2.h	/^int sm2_ciphertext_to_der(const SM2_CIPHERTEXT *c, uint8_t **out, size_t *outlen);$/;"	p	signature:(const SM2_CIPHERTEXT *c, uint8_t **out, size_t *outlen)
sm2_ciphertext_to_der	GmSSL/src/sm2_lib.c	/^int sm2_ciphertext_to_der(const SM2_CIPHERTEXT *C, uint8_t **out, size_t *outlen)$/;"	f	signature:(const SM2_CIPHERTEXT *C, uint8_t **out, size_t *outlen)
sm2_compute_z	GmSSL/include/gmssl/sm2.h	/^int sm2_compute_z(uint8_t z[32], const SM2_POINT *pub, const char *id, size_t idlen);$/;"	p	signature:(uint8_t z[32], const SM2_POINT *pub, const char *id, size_t idlen)
sm2_compute_z	GmSSL/src/sm2_lib.c	/^int sm2_compute_z(uint8_t z[32], const SM2_POINT *pub, const char *id, size_t idlen)$/;"	f	signature:(uint8_t z[32], const SM2_POINT *pub, const char *id, size_t idlen)
sm2_decrypt	GmSSL/include/gmssl/sm2.h	/^int sm2_decrypt(const SM2_KEY *key, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(const SM2_KEY *key, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm2_decrypt	GmSSL/src/sm2_lib.c	/^int sm2_decrypt(const SM2_KEY *key, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)$/;"	f	signature:(const SM2_KEY *key, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm2_do_decrypt	GmSSL/include/gmssl/sm2.h	/^int sm2_do_decrypt(const SM2_KEY *key, const SM2_CIPHERTEXT *in, uint8_t *out, size_t *outlen);$/;"	p	signature:(const SM2_KEY *key, const SM2_CIPHERTEXT *in, uint8_t *out, size_t *outlen)
sm2_do_decrypt	GmSSL/src/sm2_lib.c	/^int sm2_do_decrypt(const SM2_KEY *key, const SM2_CIPHERTEXT *in, uint8_t *out, size_t *outlen)$/;"	f	signature:(const SM2_KEY *key, const SM2_CIPHERTEXT *in, uint8_t *out, size_t *outlen)
sm2_do_encrypt	GmSSL/include/gmssl/sm2.h	/^int sm2_do_encrypt(const SM2_KEY *key, const uint8_t *in, size_t inlen, SM2_CIPHERTEXT *out);$/;"	p	signature:(const SM2_KEY *key, const uint8_t *in, size_t inlen, SM2_CIPHERTEXT *out)
sm2_do_encrypt	GmSSL/src/sm2_lib.c	/^int sm2_do_encrypt(const SM2_KEY *key, const uint8_t *in, size_t inlen, SM2_CIPHERTEXT *out)$/;"	f	signature:(const SM2_KEY *key, const uint8_t *in, size_t inlen, SM2_CIPHERTEXT *out)
sm2_do_sign	GmSSL/include/gmssl/sm2.h	/^int sm2_do_sign(const SM2_KEY *key, const uint8_t dgst[32], SM2_SIGNATURE *sig);$/;"	p	signature:(const SM2_KEY *key, const uint8_t dgst[32], SM2_SIGNATURE *sig)
sm2_do_sign	GmSSL/src/sm2_lib.c	/^int sm2_do_sign(const SM2_KEY *key, const uint8_t dgst[32], SM2_SIGNATURE *sig)$/;"	f	signature:(const SM2_KEY *key, const uint8_t dgst[32], SM2_SIGNATURE *sig)
sm2_do_verify	GmSSL/include/gmssl/sm2.h	/^int sm2_do_verify(const SM2_KEY *key, const uint8_t dgst[32], const SM2_SIGNATURE *sig);$/;"	p	signature:(const SM2_KEY *key, const uint8_t dgst[32], const SM2_SIGNATURE *sig)
sm2_do_verify	GmSSL/src/sm2_lib.c	/^int sm2_do_verify(const SM2_KEY *key, const uint8_t dgst[32], const SM2_SIGNATURE *sig)$/;"	f	signature:(const SM2_KEY *key, const uint8_t dgst[32], const SM2_SIGNATURE *sig)
sm2_ecdh	GmSSL/include/gmssl/sm2.h	/^int sm2_ecdh(const SM2_KEY *key, const SM2_POINT *peer_public, SM2_POINT *out);$/;"	p	signature:(const SM2_KEY *key, const SM2_POINT *peer_public, SM2_POINT *out)
sm2_ecdh	GmSSL/src/sm2_lib.c	/^int sm2_ecdh(const SM2_KEY *key, const SM2_POINT *peer_public, SM2_POINT *out)$/;"	f	signature:(const SM2_KEY *key, const SM2_POINT *peer_public, SM2_POINT *out)
sm2_encrypt	GmSSL/include/gmssl/sm2.h	/^int sm2_encrypt(const SM2_KEY *key, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(const SM2_KEY *key, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm2_encrypt	GmSSL/src/sm2_lib.c	/^int sm2_encrypt(const SM2_KEY *key, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)$/;"	f	signature:(const SM2_KEY *key, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm2_fn_add	GmSSL/include/gmssl/sm2.h	/^void sm2_fn_add(SM2_Fn r, const SM2_Fn a, const SM2_Fn b);$/;"	p	signature:(SM2_Fn r, const SM2_Fn a, const SM2_Fn b)
sm2_fn_add	GmSSL/src/sm2_alg.c	/^void sm2_fn_add(SM2_Fn r, const SM2_Fn a, const SM2_Fn b)$/;"	f	signature:(SM2_Fn r, const SM2_Fn a, const SM2_Fn b)
sm2_fn_clean	GmSSL/include/gmssl/sm2.h	129;"	d
sm2_fn_copy	GmSSL/include/gmssl/sm2.h	128;"	d
sm2_fn_exp	GmSSL/include/gmssl/sm2.h	/^void sm2_fn_exp(SM2_Fn r, const SM2_Fn a, const SM2_Fn e);$/;"	p	signature:(SM2_Fn r, const SM2_Fn a, const SM2_Fn e)
sm2_fn_exp	GmSSL/src/sm2_alg.c	/^void sm2_fn_exp(SM2_BN r, const SM2_BN a, const SM2_BN e)$/;"	f	signature:(SM2_BN r, const SM2_BN a, const SM2_BN e)
sm2_fn_init	GmSSL/include/gmssl/sm2.h	125;"	d
sm2_fn_inv	GmSSL/include/gmssl/sm2.h	/^void sm2_fn_inv(SM2_Fn r, const SM2_Fn a);$/;"	p	signature:(SM2_Fn r, const SM2_Fn a)
sm2_fn_inv	GmSSL/src/sm2_alg.c	/^void sm2_fn_inv(SM2_BN r, const SM2_BN a)$/;"	f	signature:(SM2_BN r, const SM2_BN a)
sm2_fn_mul	GmSSL/include/gmssl/sm2.h	/^void sm2_fn_mul(SM2_Fn r, const SM2_Fn a, const SM2_Fn b);$/;"	p	signature:(SM2_Fn r, const SM2_Fn a, const SM2_Fn b)
sm2_fn_mul	GmSSL/src/sm2_alg.c	/^void sm2_fn_mul(SM2_BN r, const SM2_BN a, const SM2_BN b)$/;"	f	signature:(SM2_BN r, const SM2_BN a, const SM2_BN b)
sm2_fn_neg	GmSSL/include/gmssl/sm2.h	/^void sm2_fn_neg(SM2_Fn r, const SM2_Fn a);$/;"	p	signature:(SM2_Fn r, const SM2_Fn a)
sm2_fn_neg	GmSSL/src/sm2_alg.c	/^void sm2_fn_neg(SM2_Fn r, const SM2_Fn a)$/;"	f	signature:(SM2_Fn r, const SM2_Fn a)
sm2_fn_rand	GmSSL/include/gmssl/sm2.h	/^void sm2_fn_rand(SM2_Fn r);$/;"	p	signature:(SM2_Fn r)
sm2_fn_rand	GmSSL/src/sm2_alg.c	/^void sm2_fn_rand(SM2_BN r)$/;"	f	signature:(SM2_BN r)
sm2_fn_set_one	GmSSL/include/gmssl/sm2.h	127;"	d
sm2_fn_set_zero	GmSSL/include/gmssl/sm2.h	126;"	d
sm2_fn_sqr	GmSSL/include/gmssl/sm2.h	/^void sm2_fn_sqr(SM2_Fn r, const SM2_Fn a);$/;"	p	signature:(SM2_Fn r, const SM2_Fn a)
sm2_fn_sqr	GmSSL/src/sm2_alg.c	/^void sm2_fn_sqr(SM2_BN r, const SM2_BN a)$/;"	f	signature:(SM2_BN r, const SM2_BN a)
sm2_fn_sub	GmSSL/include/gmssl/sm2.h	/^void sm2_fn_sub(SM2_Fn r, const SM2_Fn a, const SM2_Fn b);$/;"	p	signature:(SM2_Fn r, const SM2_Fn a, const SM2_Fn b)
sm2_fn_sub	GmSSL/src/sm2_alg.c	/^void sm2_fn_sub(SM2_Fn r, const SM2_Fn a, const SM2_Fn b)$/;"	f	signature:(SM2_Fn r, const SM2_Fn a, const SM2_Fn b)
sm2_fp_add	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_add(SM2_Fp r, const SM2_Fp a, const SM2_Fp b);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)
sm2_fp_add	GmSSL/src/sm2_alg.c	/^void sm2_fp_add(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)
sm2_fp_clean	GmSSL/include/gmssl/sm2.h	111;"	d
sm2_fp_copy	GmSSL/include/gmssl/sm2.h	110;"	d
sm2_fp_dbl	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_dbl(SM2_Fp r, const SM2_Fp a);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_dbl	GmSSL/src/sm2_alg.c	/^void sm2_fp_dbl(SM2_Fp r, const SM2_Fp a)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_div2	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_div2(SM2_Fp r, const SM2_Fp a);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_div2	GmSSL/src/sm2_alg.c	/^void sm2_fp_div2(SM2_Fp r, const SM2_Fp a)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_exp	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_exp(SM2_Fp r, const SM2_Fp a, const SM2_Fp e);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a, const SM2_Fp e)
sm2_fp_exp	GmSSL/src/sm2_alg.c	/^void sm2_fp_exp(SM2_Fp r, const SM2_Fp a, const SM2_Fp e)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a, const SM2_Fp e)
sm2_fp_init	GmSSL/include/gmssl/sm2.h	107;"	d
sm2_fp_inv	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_inv(SM2_Fp r, const SM2_Fp a);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_inv	GmSSL/src/sm2_alg.c	/^void sm2_fp_inv(SM2_Fp r, const SM2_Fp a)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_mul	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_mul(SM2_Fp r, const SM2_Fp a, const SM2_Fp b);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)
sm2_fp_mul	GmSSL/src/sm2_alg.c	/^void sm2_fp_mul(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)
sm2_fp_neg	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_neg(SM2_Fp r, const SM2_Fp a);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_neg	GmSSL/src/sm2_alg.c	/^void sm2_fp_neg(SM2_Fp r, const SM2_Fp a)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_rand	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_rand(SM2_Fp r); \/\/ 外部提供随机性，如果满足条件就输出，如果不满足条件就哈希一下再输出$/;"	p	signature:(SM2_Fp r)
sm2_fp_set_one	GmSSL/include/gmssl/sm2.h	109;"	d
sm2_fp_set_zero	GmSSL/include/gmssl/sm2.h	108;"	d
sm2_fp_sqr	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_sqr(SM2_Fp r, const SM2_Fp a);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_sqr	GmSSL/src/sm2_alg.c	/^void sm2_fp_sqr(SM2_Fp r, const SM2_Fp a)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_sub	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_sub(SM2_Fp r, const SM2_Fp a, const SM2_Fp b);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)
sm2_fp_sub	GmSSL/src/sm2_alg.c	/^void sm2_fp_sub(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a, const SM2_Fp b)
sm2_fp_tri	GmSSL/include/gmssl/sm2.h	/^void sm2_fp_tri(SM2_Fp r, const SM2_Fp a);$/;"	p	signature:(SM2_Fp r, const SM2_Fp a)
sm2_fp_tri	GmSSL/src/sm2_alg.c	/^void sm2_fp_tri(SM2_Fp r, const SM2_Fp a)$/;"	f	signature:(SM2_Fp r, const SM2_Fp a)
sm2_jacobian_point_add	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_add(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P, const SM2_JACOBIAN_POINT *Q);$/;"	p	signature:(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P, const SM2_JACOBIAN_POINT *Q)
sm2_jacobian_point_add	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_add(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P, const SM2_JACOBIAN_POINT *Q)$/;"	f	signature:(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P, const SM2_JACOBIAN_POINT *Q)
sm2_jacobian_point_copy	GmSSL/include/gmssl/sm2.h	158;"	d
sm2_jacobian_point_dbl	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_dbl(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P);$/;"	p	signature:(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_dbl	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_dbl(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P)$/;"	f	signature:(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_equ_hex	GmSSL/include/gmssl/sm2.h	/^int sm2_jacobian_point_equ_hex(const SM2_JACOBIAN_POINT *P, const char hex[128]);$/;"	p	signature:(const SM2_JACOBIAN_POINT *P, const char hex[128])
sm2_jacobian_point_equ_hex	GmSSL/src/sm2_alg.c	/^int sm2_jacobian_point_equ_hex(const SM2_JACOBIAN_POINT *P, const char hex[128])$/;"	f	signature:(const SM2_JACOBIAN_POINT *P, const char hex[128])
sm2_jacobian_point_from_bytes	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_from_bytes(SM2_JACOBIAN_POINT *P, const uint8_t in[64]);$/;"	p	signature:(SM2_JACOBIAN_POINT *P, const uint8_t in[64])
sm2_jacobian_point_from_bytes	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_from_bytes(SM2_JACOBIAN_POINT *P, const uint8_t in[64])$/;"	f	signature:(SM2_JACOBIAN_POINT *P, const uint8_t in[64])
sm2_jacobian_point_from_hex	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_from_hex(SM2_JACOBIAN_POINT *P, const char hex[64 * 2]); \/\/ 应该返回错误$/;"	p	signature:(SM2_JACOBIAN_POINT *P, const char hex[64 * 2])
sm2_jacobian_point_from_hex	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_from_hex(SM2_JACOBIAN_POINT *P, const char hex[64 * 2])$/;"	f	signature:(SM2_JACOBIAN_POINT *P, const char hex[64 * 2])
sm2_jacobian_point_get_xy	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_get_xy(const SM2_JACOBIAN_POINT *P, SM2_BN x, SM2_BN y);$/;"	p	signature:(const SM2_JACOBIAN_POINT *P, SM2_BN x, SM2_BN y)
sm2_jacobian_point_get_xy	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_get_xy(const SM2_JACOBIAN_POINT *P, SM2_BN x, SM2_BN y)$/;"	f	signature:(const SM2_JACOBIAN_POINT *P, SM2_BN x, SM2_BN y)
sm2_jacobian_point_init	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_init(SM2_JACOBIAN_POINT *R);$/;"	p	signature:(SM2_JACOBIAN_POINT *R)
sm2_jacobian_point_init	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_init(SM2_JACOBIAN_POINT *R)$/;"	f	signature:(SM2_JACOBIAN_POINT *R)
sm2_jacobian_point_is_at_infinity	GmSSL/include/gmssl/sm2.h	/^int sm2_jacobian_point_is_at_infinity(const SM2_JACOBIAN_POINT *P);$/;"	p	signature:(const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_is_at_infinity	GmSSL/src/sm2_alg.c	/^int sm2_jacobian_point_is_at_infinity(const SM2_JACOBIAN_POINT *P)$/;"	f	signature:(const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_is_on_curve	GmSSL/include/gmssl/sm2.h	/^int sm2_jacobian_point_is_on_curve(const SM2_JACOBIAN_POINT *P);$/;"	p	signature:(const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_is_on_curve	GmSSL/src/sm2_alg.c	/^int sm2_jacobian_point_is_on_curve(const SM2_JACOBIAN_POINT *P)$/;"	f	signature:(const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_mul	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_mul(SM2_JACOBIAN_POINT *R, const SM2_BN k, const SM2_JACOBIAN_POINT *P);$/;"	p	signature:(SM2_JACOBIAN_POINT *R, const SM2_BN k, const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_mul	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_mul(SM2_JACOBIAN_POINT *R, const SM2_BN k, const SM2_JACOBIAN_POINT *P)$/;"	f	signature:(SM2_JACOBIAN_POINT *R, const SM2_BN k, const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_mul_generator	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_mul_generator(SM2_JACOBIAN_POINT *R, const SM2_BN k);$/;"	p	signature:(SM2_JACOBIAN_POINT *R, const SM2_BN k)
sm2_jacobian_point_mul_generator	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_mul_generator(SM2_JACOBIAN_POINT *R, const SM2_BN k)$/;"	f	signature:(SM2_JACOBIAN_POINT *R, const SM2_BN k)
sm2_jacobian_point_mul_sum	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_mul_sum(SM2_JACOBIAN_POINT *R, const SM2_BN t, const SM2_JACOBIAN_POINT *P, const SM2_BN s); \/\/ 应该返回错误$/;"	p	signature:(SM2_JACOBIAN_POINT *R, const SM2_BN t, const SM2_JACOBIAN_POINT *P, const SM2_BN s)
sm2_jacobian_point_mul_sum	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_mul_sum(SM2_JACOBIAN_POINT *R, const SM2_BN t, const SM2_JACOBIAN_POINT *P, const SM2_BN s)$/;"	f	signature:(SM2_JACOBIAN_POINT *R, const SM2_BN t, const SM2_JACOBIAN_POINT *P, const SM2_BN s)
sm2_jacobian_point_neg	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_neg(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P);$/;"	p	signature:(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_neg	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_neg(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P)$/;"	f	signature:(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_print	GmSSL/include/gmssl/sm2.h	/^int sm2_jacobian_point_print(FILE *fp, int fmt, int ind, const char *label, const SM2_JACOBIAN_POINT *P);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_JACOBIAN_POINT *P)
sm2_jacobian_point_set_infinity	GmSSL/include/gmssl/sm2.h	157;"	d
sm2_jacobian_point_set_xy	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_set_xy(SM2_JACOBIAN_POINT *R, const SM2_BN x, const SM2_BN y); \/\/ 应该返回错误$/;"	p	signature:(SM2_JACOBIAN_POINT *R, const SM2_BN x, const SM2_BN y)
sm2_jacobian_point_set_xy	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_set_xy(SM2_JACOBIAN_POINT *R, const SM2_BN x, const SM2_BN y)$/;"	f	signature:(SM2_JACOBIAN_POINT *R, const SM2_BN x, const SM2_BN y)
sm2_jacobian_point_sub	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_sub(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P, const SM2_JACOBIAN_POINT *Q);$/;"	p	signature:(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P, const SM2_JACOBIAN_POINT *Q)
sm2_jacobian_point_sub	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_sub(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P, const SM2_JACOBIAN_POINT *Q)$/;"	f	signature:(SM2_JACOBIAN_POINT *R, const SM2_JACOBIAN_POINT *P, const SM2_JACOBIAN_POINT *Q)
sm2_jacobian_point_to_bytes	GmSSL/include/gmssl/sm2.h	/^void sm2_jacobian_point_to_bytes(const SM2_JACOBIAN_POINT *P, uint8_t out[64]);$/;"	p	signature:(const SM2_JACOBIAN_POINT *P, uint8_t out[64])
sm2_jacobian_point_to_bytes	GmSSL/src/sm2_alg.c	/^void sm2_jacobian_point_to_bytes(const SM2_JACOBIAN_POINT *P, uint8_t out[64])$/;"	f	signature:(const SM2_JACOBIAN_POINT *P, uint8_t out[64])
sm2_jacobian_pointpoint_print	GmSSL/src/sm2_alg.c	/^int sm2_jacobian_pointpoint_print(FILE *fp, int fmt, int ind, const char *label, const SM2_JACOBIAN_POINT *P)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_JACOBIAN_POINT *P)
sm2_kdf	GmSSL/src/sm2_lib.c	/^int sm2_kdf(const uint8_t *in, size_t inlen, size_t outlen, uint8_t *out)$/;"	f	signature:(const uint8_t *in, size_t inlen, size_t outlen, uint8_t *out)
sm2_key_generate	GmSSL/include/gmssl/sm2.h	/^int sm2_key_generate(SM2_KEY *key);$/;"	p	signature:(SM2_KEY *key)
sm2_key_generate	GmSSL/src/sm2_key.c	/^int sm2_key_generate(SM2_KEY *key)$/;"	f	signature:(SM2_KEY *key)
sm2_key_print	GmSSL/include/gmssl/sm2.h	/^int sm2_key_print(FILE *fp, int fmt, int ind, const char *label, const SM2_KEY *key);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_KEY *key)
sm2_key_print	GmSSL/src/sm2_key.c	/^int sm2_key_print(FILE *fp, int fmt, int ind, const char *label, const SM2_KEY *key)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_KEY *key)
sm2_key_set_private_key	GmSSL/include/gmssl/sm2.h	/^int sm2_key_set_private_key(SM2_KEY *key, const uint8_t private_key[32]); \/\/ 自动生成公钥$/;"	p	signature:(SM2_KEY *key, const uint8_t private_key[32])
sm2_key_set_private_key	GmSSL/src/sm2_key.c	/^int sm2_key_set_private_key(SM2_KEY *key, const uint8_t private_key[32])$/;"	f	signature:(SM2_KEY *key, const uint8_t private_key[32])
sm2_key_set_public_key	GmSSL/include/gmssl/sm2.h	/^int sm2_key_set_public_key(SM2_KEY *key, const SM2_POINT *public_key); \/\/ 自动清空私钥，不要和set_private_key同时用$/;"	p	signature:(SM2_KEY *key, const SM2_POINT *public_key)
sm2_key_set_public_key	GmSSL/src/sm2_key.c	/^int sm2_key_set_public_key(SM2_KEY *key, const SM2_POINT *public_key)$/;"	f	signature:(SM2_KEY *key, const SM2_POINT *public_key)
sm2_point_from_der	GmSSL/include/gmssl/sm2.h	/^int sm2_point_from_der(SM2_POINT *P, const uint8_t **in, size_t *inlen);$/;"	p	signature:(SM2_POINT *P, const uint8_t **in, size_t *inlen)
sm2_point_from_der	GmSSL/src/sm2_alg.c	/^int sm2_point_from_der(SM2_POINT *P, const uint8_t **in, size_t *inlen)$/;"	f	signature:(SM2_POINT *P, const uint8_t **in, size_t *inlen)
sm2_point_from_octets	GmSSL/include/gmssl/sm2.h	/^int sm2_point_from_octets(SM2_POINT *P, const uint8_t *in, size_t inlen);$/;"	p	signature:(SM2_POINT *P, const uint8_t *in, size_t inlen)
sm2_point_from_octets	GmSSL/src/sm2_alg.c	/^int sm2_point_from_octets(SM2_POINT *P, const uint8_t *in, size_t inlen)$/;"	f	signature:(SM2_POINT *P, const uint8_t *in, size_t inlen)
sm2_point_from_x	GmSSL/include/gmssl/sm2.h	/^int sm2_point_from_x(SM2_POINT *P, const uint8_t x[32], int y);$/;"	p	signature:(SM2_POINT *P, const uint8_t x[32], int y)
sm2_point_from_x	GmSSL/src/sm2_alg.c	/^int sm2_point_from_x(SM2_POINT *P, const uint8_t x[32], int y)$/;"	f	signature:(SM2_POINT *P, const uint8_t x[32], int y)
sm2_point_from_xy	GmSSL/include/gmssl/sm2.h	/^int sm2_point_from_xy(SM2_POINT *P, const uint8_t x[32], const uint8_t y[32]);$/;"	p	signature:(SM2_POINT *P, const uint8_t x[32], const uint8_t y[32])
sm2_point_from_xy	GmSSL/src/sm2_alg.c	/^int sm2_point_from_xy(SM2_POINT *P, const uint8_t x[32], const uint8_t y[32])$/;"	f	signature:(SM2_POINT *P, const uint8_t x[32], const uint8_t y[32])
sm2_point_is_on_curve	GmSSL/include/gmssl/sm2.h	/^int sm2_point_is_on_curve(const SM2_POINT *P);$/;"	p	signature:(const SM2_POINT *P)
sm2_point_is_on_curve	GmSSL/src/sm2_alg.c	/^int sm2_point_is_on_curve(const SM2_POINT *P)$/;"	f	signature:(const SM2_POINT *P)
sm2_point_mul	GmSSL/include/gmssl/sm2.h	/^int sm2_point_mul(SM2_POINT *R, const uint8_t k[32], const SM2_POINT *P);$/;"	p	signature:(SM2_POINT *R, const uint8_t k[32], const SM2_POINT *P)
sm2_point_mul	GmSSL/src/sm2_alg.c	/^int sm2_point_mul(SM2_POINT *R, const uint8_t k[32], const SM2_POINT *P)$/;"	f	signature:(SM2_POINT *R, const uint8_t k[32], const SM2_POINT *P)
sm2_point_mul_generator	GmSSL/include/gmssl/sm2.h	/^int sm2_point_mul_generator(SM2_POINT *R, const uint8_t k[32]);$/;"	p	signature:(SM2_POINT *R, const uint8_t k[32])
sm2_point_mul_generator	GmSSL/src/sm2_alg.c	/^int sm2_point_mul_generator(SM2_POINT *R, const uint8_t k[32])$/;"	f	signature:(SM2_POINT *R, const uint8_t k[32])
sm2_point_mul_sum	GmSSL/include/gmssl/sm2.h	/^int sm2_point_mul_sum(SM2_POINT *R, const uint8_t k[32], const SM2_POINT *P, const uint8_t s[32]); \/\/ R = k * P + s * G$/;"	p	signature:(SM2_POINT *R, const uint8_t k[32], const SM2_POINT *P, const uint8_t s[32])
sm2_point_mul_sum	GmSSL/src/sm2_alg.c	/^int sm2_point_mul_sum(SM2_POINT *R, const uint8_t k[32], const SM2_POINT *P, const uint8_t s[32])$/;"	f	signature:(SM2_POINT *R, const uint8_t k[32], const SM2_POINT *P, const uint8_t s[32])
sm2_point_print	GmSSL/include/gmssl/sm2.h	/^int sm2_point_print(FILE *fp, int fmt, int ind, const char *label, const SM2_POINT *P);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_POINT *P)
sm2_point_print	GmSSL/src/sm2_alg.c	/^int sm2_point_print(FILE *fp, int fmt, int ind, const char *label, const SM2_POINT *P)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_POINT *P)
sm2_point_to_compressed_octets	GmSSL/include/gmssl/sm2.h	/^void sm2_point_to_compressed_octets(const SM2_POINT *P, uint8_t out[33]);$/;"	p	signature:(const SM2_POINT *P, uint8_t out[33])
sm2_point_to_compressed_octets	GmSSL/src/sm2_alg.c	/^void sm2_point_to_compressed_octets(const SM2_POINT *P, uint8_t out[33])$/;"	f	signature:(const SM2_POINT *P, uint8_t out[33])
sm2_point_to_der	GmSSL/include/gmssl/sm2.h	/^int sm2_point_to_der(const SM2_POINT *P, uint8_t **out, size_t *outlen);$/;"	p	signature:(const SM2_POINT *P, uint8_t **out, size_t *outlen)
sm2_point_to_der	GmSSL/src/sm2_alg.c	/^int sm2_point_to_der(const SM2_POINT *P, uint8_t **out, size_t *outlen)$/;"	f	signature:(const SM2_POINT *P, uint8_t **out, size_t *outlen)
sm2_point_to_uncompressed_octets	GmSSL/include/gmssl/sm2.h	/^void sm2_point_to_uncompressed_octets(const SM2_POINT *P, uint8_t out[65]);$/;"	p	signature:(const SM2_POINT *P, uint8_t out[65])
sm2_point_to_uncompressed_octets	GmSSL/src/sm2_alg.c	/^void sm2_point_to_uncompressed_octets(const SM2_POINT *P, uint8_t out[65])$/;"	f	signature:(const SM2_POINT *P, uint8_t out[65])
sm2_print_bn	GmSSL/src/sm2_alg.c	59;"	d	file:
sm2_print_bn	GmSSL/tests/sm2test.c	57;"	d	file:
sm2_private_key_from_der	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_from_der(SM2_KEY *key, const uint8_t **in, size_t *inlen);$/;"	p	signature:(SM2_KEY *key, const uint8_t **in, size_t *inlen)
sm2_private_key_from_der	GmSSL/src/sm2_key.c	/^int sm2_private_key_from_der(SM2_KEY *key, const uint8_t **in, size_t *inlen)$/;"	f	signature:(SM2_KEY *key, const uint8_t **in, size_t *inlen)
sm2_private_key_info_decrypt_from_der	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_info_decrypt_from_der(SM2_KEY *key, const uint8_t **attrs, size_t *attrs_len,$/;"	p	signature:(SM2_KEY *key, const uint8_t **attrs, size_t *attrs_len, const char *pass, const uint8_t **in, size_t *inlen)
sm2_private_key_info_decrypt_from_der	GmSSL/src/sm2_key.c	/^int sm2_private_key_info_decrypt_from_der(SM2_KEY *sm2,$/;"	f	signature:(SM2_KEY *sm2, const uint8_t **attrs, size_t *attrs_len, const char *pass, const uint8_t **in, size_t *inlen)
sm2_private_key_info_decrypt_from_pem	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_info_decrypt_from_pem(SM2_KEY *key, const char *pass, FILE *fp);$/;"	p	signature:(SM2_KEY *key, const char *pass, FILE *fp)
sm2_private_key_info_decrypt_from_pem	GmSSL/src/sm2_key.c	/^int sm2_private_key_info_decrypt_from_pem(SM2_KEY *key, const char *pass, FILE *fp)$/;"	f	signature:(SM2_KEY *key, const char *pass, FILE *fp)
sm2_private_key_info_encrypt_to_der	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_info_encrypt_to_der(const SM2_KEY *key,$/;"	p	signature:(const SM2_KEY *key, const char *pass, uint8_t **out, size_t *outlen)
sm2_private_key_info_encrypt_to_der	GmSSL/src/sm2_key.c	/^int sm2_private_key_info_encrypt_to_der(const SM2_KEY *sm2_key, const char *pass,$/;"	f	signature:(const SM2_KEY *sm2_key, const char *pass, uint8_t **out, size_t *outlen)
sm2_private_key_info_encrypt_to_pem	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_info_encrypt_to_pem(const SM2_KEY *key, const char *pass, FILE *fp);$/;"	p	signature:(const SM2_KEY *key, const char *pass, FILE *fp)
sm2_private_key_info_encrypt_to_pem	GmSSL/src/sm2_key.c	/^int sm2_private_key_info_encrypt_to_pem(const SM2_KEY *sm2_key, const char *pass, FILE *fp)$/;"	f	signature:(const SM2_KEY *sm2_key, const char *pass, FILE *fp)
sm2_private_key_info_from_der	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_info_from_der(SM2_KEY *key, const uint8_t **attrs, size_t *attrslen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(SM2_KEY *key, const uint8_t **attrs, size_t *attrslen, const uint8_t **in, size_t *inlen)
sm2_private_key_info_from_der	GmSSL/src/sm2_key.c	/^int sm2_private_key_info_from_der(SM2_KEY *sm2_key, const uint8_t **attrs, size_t *attrslen,$/;"	f	signature:(SM2_KEY *sm2_key, const uint8_t **attrs, size_t *attrslen, const uint8_t **in, size_t *inlen)
sm2_private_key_info_print	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
sm2_private_key_info_print	GmSSL/src/sm2_key.c	/^int sm2_private_key_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
sm2_private_key_info_to_der	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_info_to_der(const SM2_KEY *key, uint8_t **out, size_t *outlen);$/;"	p	signature:(const SM2_KEY *key, uint8_t **out, size_t *outlen)
sm2_private_key_info_to_der	GmSSL/src/sm2_key.c	/^int sm2_private_key_info_to_der(const SM2_KEY *sm2_key, uint8_t **out, size_t *outlen)$/;"	f	signature:(const SM2_KEY *sm2_key, uint8_t **out, size_t *outlen)
sm2_private_key_print	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
sm2_private_key_print	GmSSL/src/sm2_key.c	/^int sm2_private_key_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
sm2_private_key_to_der	GmSSL/include/gmssl/sm2.h	/^int sm2_private_key_to_der(const SM2_KEY *key, uint8_t **out, size_t *outlen);$/;"	p	signature:(const SM2_KEY *key, uint8_t **out, size_t *outlen)
sm2_private_key_to_der	GmSSL/src/sm2_key.c	/^int sm2_private_key_to_der(const SM2_KEY *key, uint8_t **out, size_t *outlen)$/;"	f	signature:(const SM2_KEY *key, uint8_t **out, size_t *outlen)
sm2_public_key_algor_from_der	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_algor_from_der(const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **in, size_t *inlen)
sm2_public_key_algor_from_der	GmSSL/src/sm2_key.c	/^int sm2_public_key_algor_from_der(const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **in, size_t *inlen)
sm2_public_key_algor_to_der	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_algor_to_der(uint8_t **out, size_t *outlen);$/;"	p	signature:(uint8_t **out, size_t *outlen)
sm2_public_key_algor_to_der	GmSSL/src/sm2_key.c	/^int sm2_public_key_algor_to_der(uint8_t **out, size_t *outlen)$/;"	f	signature:(uint8_t **out, size_t *outlen)
sm2_public_key_copy	GmSSL/src/sm2_key.c	/^int sm2_public_key_copy(SM2_KEY *sm2_key, const SM2_KEY *pub_key)$/;"	f	signature:(SM2_KEY *sm2_key, const SM2_KEY *pub_key)
sm2_public_key_digest	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_digest(const SM2_KEY *key, uint8_t dgst[32]);$/;"	p	signature:(const SM2_KEY *key, uint8_t dgst[32])
sm2_public_key_digest	GmSSL/src/sm2_key.c	/^int sm2_public_key_digest(const SM2_KEY *sm2_key, uint8_t dgst[32])$/;"	f	signature:(const SM2_KEY *sm2_key, uint8_t dgst[32])
sm2_public_key_equ	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_equ(const SM2_KEY *sm2_key, const SM2_KEY *pub_key);$/;"	p	signature:(const SM2_KEY *sm2_key, const SM2_KEY *pub_key)
sm2_public_key_equ	GmSSL/src/sm2_key.c	/^int sm2_public_key_equ(const SM2_KEY *sm2_key, const SM2_KEY *pub_key)$/;"	f	signature:(const SM2_KEY *sm2_key, const SM2_KEY *pub_key)
sm2_public_key_from_der	GmSSL/src/sm2_key.c	/^int sm2_public_key_from_der(SM2_KEY *key, const uint8_t **in, size_t *inlen)$/;"	f	signature:(SM2_KEY *key, const uint8_t **in, size_t *inlen)
sm2_public_key_info_from_der	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_info_from_der(SM2_KEY *a, const uint8_t **in, size_t *inlen);$/;"	p	signature:(SM2_KEY *a, const uint8_t **in, size_t *inlen)
sm2_public_key_info_from_der	GmSSL/src/sm2_key.c	/^int sm2_public_key_info_from_der(SM2_KEY *pub_key, const uint8_t **in, size_t *inlen)$/;"	f	signature:(SM2_KEY *pub_key, const uint8_t **in, size_t *inlen)
sm2_public_key_info_from_pem	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_info_from_pem(SM2_KEY *a, FILE *fp);$/;"	p	signature:(SM2_KEY *a, FILE *fp)
sm2_public_key_info_from_pem	GmSSL/src/sm2_key.c	/^int sm2_public_key_info_from_pem(SM2_KEY *a, FILE *fp)$/;"	f	signature:(SM2_KEY *a, FILE *fp)
sm2_public_key_info_to_der	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_info_to_der(const SM2_KEY *a, uint8_t **out, size_t *outlen);$/;"	p	signature:(const SM2_KEY *a, uint8_t **out, size_t *outlen)
sm2_public_key_info_to_der	GmSSL/src/sm2_key.c	/^int sm2_public_key_info_to_der(const SM2_KEY *pub_key, uint8_t **out, size_t *outlen)$/;"	f	signature:(const SM2_KEY *pub_key, uint8_t **out, size_t *outlen)
sm2_public_key_info_to_pem	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_info_to_pem(const SM2_KEY *a, FILE *fp);$/;"	p	signature:(const SM2_KEY *a, FILE *fp)
sm2_public_key_info_to_pem	GmSSL/src/sm2_key.c	/^int sm2_public_key_info_to_pem(const SM2_KEY *a, FILE *fp)$/;"	f	signature:(const SM2_KEY *a, FILE *fp)
sm2_public_key_print	GmSSL/include/gmssl/sm2.h	/^int sm2_public_key_print(FILE *fp, int fmt, int ind, const char *label, const SM2_KEY *pub_key); \/\/ 和private_key_print参数不一致$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_KEY *pub_key)
sm2_public_key_print	GmSSL/src/sm2_key.c	/^int sm2_public_key_print(FILE *fp, int fmt, int ind, const char *label, const SM2_KEY *pub_key)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const SM2_KEY *pub_key)
sm2_public_key_to_der	GmSSL/src/sm2_key.c	/^int sm2_public_key_to_der(const SM2_KEY *key, uint8_t **out, size_t *outlen)$/;"	f	signature:(const SM2_KEY *key, uint8_t **out, size_t *outlen)
sm2_sign	GmSSL/include/gmssl/sm2.h	/^int sm2_sign(const SM2_KEY *key, const uint8_t dgst[32], uint8_t *sig, size_t *siglen);$/;"	p	signature:(const SM2_KEY *key, const uint8_t dgst[32], uint8_t *sig, size_t *siglen)
sm2_sign	GmSSL/src/sm2_lib.c	/^int sm2_sign(const SM2_KEY *key, const uint8_t dgst[32], uint8_t *sig, size_t *siglen)$/;"	f	signature:(const SM2_KEY *key, const uint8_t dgst[32], uint8_t *sig, size_t *siglen)
sm2_sign_finish	GmSSL/include/gmssl/sm2.h	/^int sm2_sign_finish(SM2_SIGN_CTX *ctx, uint8_t *sig, size_t *siglen);$/;"	p	signature:(SM2_SIGN_CTX *ctx, uint8_t *sig, size_t *siglen)
sm2_sign_finish	GmSSL/src/sm2_lib.c	/^int sm2_sign_finish(SM2_SIGN_CTX *ctx, uint8_t *sig, size_t *siglen)$/;"	f	signature:(SM2_SIGN_CTX *ctx, uint8_t *sig, size_t *siglen)
sm2_sign_init	GmSSL/include/gmssl/sm2.h	/^int sm2_sign_init(SM2_SIGN_CTX *ctx, const SM2_KEY *key, const char *id, size_t idlen);$/;"	p	signature:(SM2_SIGN_CTX *ctx, const SM2_KEY *key, const char *id, size_t idlen)
sm2_sign_init	GmSSL/src/sm2_lib.c	/^int sm2_sign_init(SM2_SIGN_CTX *ctx, const SM2_KEY *key, const char *id, size_t idlen)$/;"	f	signature:(SM2_SIGN_CTX *ctx, const SM2_KEY *key, const char *id, size_t idlen)
sm2_sign_update	GmSSL/include/gmssl/sm2.h	/^int sm2_sign_update(SM2_SIGN_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SM2_SIGN_CTX *ctx, const uint8_t *data, size_t datalen)
sm2_sign_update	GmSSL/src/sm2_lib.c	/^int sm2_sign_update(SM2_SIGN_CTX *ctx, const uint8_t *data, size_t datalen)$/;"	f	signature:(SM2_SIGN_CTX *ctx, const uint8_t *data, size_t datalen)
sm2_signature_from_der	GmSSL/include/gmssl/sm2.h	/^int sm2_signature_from_der(SM2_SIGNATURE *sig, const uint8_t **in, size_t *inlen);$/;"	p	signature:(SM2_SIGNATURE *sig, const uint8_t **in, size_t *inlen)
sm2_signature_from_der	GmSSL/src/sm2_lib.c	/^int sm2_signature_from_der(SM2_SIGNATURE *sig, const uint8_t **in, size_t *inlen)$/;"	f	signature:(SM2_SIGNATURE *sig, const uint8_t **in, size_t *inlen)
sm2_signature_print	GmSSL/include/gmssl/sm2.h	/^int sm2_signature_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *sig, size_t siglen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *sig, size_t siglen)
sm2_signature_print	GmSSL/src/sm2_lib.c	/^int sm2_signature_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
sm2_signature_to_der	GmSSL/include/gmssl/sm2.h	/^int sm2_signature_to_der(const SM2_SIGNATURE *sig, uint8_t **out, size_t *outlen);$/;"	p	signature:(const SM2_SIGNATURE *sig, uint8_t **out, size_t *outlen)
sm2_signature_to_der	GmSSL/src/sm2_lib.c	/^int sm2_signature_to_der(const SM2_SIGNATURE *sig, uint8_t **out, size_t *outlen)$/;"	f	signature:(const SM2_SIGNATURE *sig, uint8_t **out, size_t *outlen)
sm2_verify	GmSSL/include/gmssl/sm2.h	/^int sm2_verify(const SM2_KEY *key, const uint8_t dgst[32], const uint8_t *sig, size_t siglen);$/;"	p	signature:(const SM2_KEY *key, const uint8_t dgst[32], const uint8_t *sig, size_t siglen)
sm2_verify	GmSSL/src/sm2_lib.c	/^int sm2_verify(const SM2_KEY *key, const uint8_t dgst[32], const uint8_t *sig, size_t siglen)$/;"	f	signature:(const SM2_KEY *key, const uint8_t dgst[32], const uint8_t *sig, size_t siglen)
sm2_verify_finish	GmSSL/include/gmssl/sm2.h	/^int sm2_verify_finish(SM2_SIGN_CTX *ctx, const uint8_t *sig, size_t siglen);$/;"	p	signature:(SM2_SIGN_CTX *ctx, const uint8_t *sig, size_t siglen)
sm2_verify_finish	GmSSL/src/sm2_lib.c	/^int sm2_verify_finish(SM2_SIGN_CTX *ctx, const uint8_t *sig, size_t siglen)$/;"	f	signature:(SM2_SIGN_CTX *ctx, const uint8_t *sig, size_t siglen)
sm2_verify_init	GmSSL/include/gmssl/sm2.h	/^int sm2_verify_init(SM2_SIGN_CTX *ctx, const SM2_KEY *key, const char *id, size_t idlen);$/;"	p	signature:(SM2_SIGN_CTX *ctx, const SM2_KEY *key, const char *id, size_t idlen)
sm2_verify_init	GmSSL/src/sm2_lib.c	/^int sm2_verify_init(SM2_SIGN_CTX *ctx, const SM2_KEY *key, const char *id, size_t idlen)$/;"	f	signature:(SM2_SIGN_CTX *ctx, const SM2_KEY *key, const char *id, size_t idlen)
sm2_verify_update	GmSSL/include/gmssl/sm2.h	/^int sm2_verify_update(SM2_SIGN_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SM2_SIGN_CTX *ctx, const uint8_t *data, size_t datalen)
sm2_verify_update	GmSSL/src/sm2_lib.c	/^int sm2_verify_update(SM2_SIGN_CTX *ctx, const uint8_t *data, size_t datalen)$/;"	f	signature:(SM2_SIGN_CTX *ctx, const uint8_t *data, size_t datalen)
sm2decrypt_main	GmSSL/tools/gmssl.c	/^extern int sm2decrypt_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm2decrypt_main	GmSSL/tools/sm2decrypt.c	/^int sm2decrypt_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm2encrypt_main	GmSSL/tools/gmssl.c	/^extern int sm2encrypt_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm2encrypt_main	GmSSL/tools/sm2encrypt.c	/^int sm2encrypt_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm2keygen_main	GmSSL/tools/gmssl.c	/^extern int sm2keygen_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm2keygen_main	GmSSL/tools/sm2keygen.c	/^int sm2keygen_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm2sign_main	GmSSL/tools/gmssl.c	/^extern int sm2sign_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm2sign_main	GmSSL/tools/sm2sign.c	/^int sm2sign_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm2verify_main	GmSSL/tools/gmssl.c	/^extern int sm2verify_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm2verify_main	GmSSL/tools/sm2verify.c	/^int sm2verify_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm3_compress_blocks	GmSSL/src/sm2_lib.c	/^extern void sm3_compress_blocks(uint32_t digest[8], const uint8_t *data, size_t blocks);$/;"	p	file:	signature:(uint32_t digest[8], const uint8_t *data, size_t blocks)
sm3_compress_blocks	GmSSL/src/sm3.c	/^void sm3_compress_blocks(uint32_t digest[8], const uint8_t *data, size_t blocks)$/;"	f	signature:(uint32_t digest[8], const uint8_t *data, size_t blocks)
sm3_ctx	GmSSL/include/gmssl/digest.h	/^		SM3_CTX sm3_ctx;$/;"	m	union:DIGEST_CTX::__anon51	access:public
sm3_ctx	GmSSL/include/gmssl/sm2.h	/^	SM3_CTX sm3_ctx;$/;"	m	struct:__anon49	access:public
sm3_ctx	GmSSL/include/gmssl/sm3.h	/^	SM3_CTX sm3_ctx;$/;"	m	struct:__anon60	access:public
sm3_digest	GmSSL/include/gmssl/sm3.h	/^void sm3_digest(const uint8_t *data, size_t datalen, uint8_t dgst[SM3_DIGEST_SIZE]);$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t dgst[SM3_DIGEST_SIZE])
sm3_digest	GmSSL/src/sm3.c	/^void sm3_digest(const uint8_t *msg, size_t msglen,$/;"	f	signature:(const uint8_t *msg, size_t msglen, uint8_t dgst[SM3_DIGEST_SIZE])
sm3_digest_finish	GmSSL/src/digest.c	/^static int sm3_digest_finish(DIGEST_CTX *ctx, uint8_t *dgst)$/;"	f	file:	signature:(DIGEST_CTX *ctx, uint8_t *dgst)
sm3_digest_init	GmSSL/src/digest.c	/^static int sm3_digest_init(DIGEST_CTX *ctx)$/;"	f	file:	signature:(DIGEST_CTX *ctx)
sm3_digest_object	GmSSL/src/digest.c	/^static const DIGEST sm3_digest_object = {$/;"	v	file:
sm3_digest_update	GmSSL/src/digest.c	/^static int sm3_digest_update(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)$/;"	f	file:	signature:(DIGEST_CTX *ctx, const uint8_t *in, size_t inlen)
sm3_finish	GmSSL/include/gmssl/sm3.h	/^void sm3_finish(SM3_CTX *ctx, uint8_t dgst[SM3_DIGEST_SIZE]);$/;"	p	signature:(SM3_CTX *ctx, uint8_t dgst[SM3_DIGEST_SIZE])
sm3_finish	GmSSL/src/sm3.c	/^void sm3_finish(SM3_CTX *ctx, uint8_t *digest)$/;"	f	signature:(SM3_CTX *ctx, uint8_t *digest)
sm3_hkdf_expand	GmSSL/include/gmssl/hkdf.h	/^int sm3_hkdf_expand(const uint8_t *prk, size_t prklen,$/;"	p	signature:(const uint8_t *prk, size_t prklen, const uint8_t *opt_info, size_t opt_infolen, size_t L, uint8_t *okm)
sm3_hkdf_extract	GmSSL/include/gmssl/hkdf.h	/^int sm3_hkdf_extract(const uint8_t *salt, size_t saltlen,$/;"	p	signature:(const uint8_t *salt, size_t saltlen, const uint8_t *ikm, size_t ikmlen, uint8_t *prk, size_t *prklen)
sm3_hmac	GmSSL/include/gmssl/sm3.h	/^void sm3_hmac(const uint8_t *key, size_t keylen,$/;"	p	signature:(const uint8_t *key, size_t keylen, const uint8_t *data, size_t datalen, uint8_t mac[SM3_HMAC_SIZE])
sm3_hmac	GmSSL/src/sm3_hmac.c	/^void sm3_hmac(const uint8_t *data, size_t data_len,$/;"	f	signature:(const uint8_t *data, size_t data_len, const uint8_t *key, size_t key_len, uint8_t mac[SM3_HMAC_SIZE])
sm3_hmac_finish	GmSSL/include/gmssl/sm3.h	/^void sm3_hmac_finish(SM3_HMAC_CTX *ctx, uint8_t mac[SM3_HMAC_SIZE]);$/;"	p	signature:(SM3_HMAC_CTX *ctx, uint8_t mac[SM3_HMAC_SIZE])
sm3_hmac_finish	GmSSL/src/sm3_hmac.c	/^void sm3_hmac_finish(SM3_HMAC_CTX *ctx, uint8_t mac[SM3_HMAC_SIZE])$/;"	f	signature:(SM3_HMAC_CTX *ctx, uint8_t mac[SM3_HMAC_SIZE])
sm3_hmac_init	GmSSL/include/gmssl/sm3.h	/^void sm3_hmac_init(SM3_HMAC_CTX *ctx, const uint8_t *key, size_t keylen);$/;"	p	signature:(SM3_HMAC_CTX *ctx, const uint8_t *key, size_t keylen)
sm3_hmac_init	GmSSL/src/sm3_hmac.c	/^void sm3_hmac_init(SM3_HMAC_CTX *ctx, const uint8_t *key, size_t key_len)$/;"	f	signature:(SM3_HMAC_CTX *ctx, const uint8_t *key, size_t key_len)
sm3_hmac_update	GmSSL/include/gmssl/sm3.h	/^void sm3_hmac_update(SM3_HMAC_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SM3_HMAC_CTX *ctx, const uint8_t *data, size_t datalen)
sm3_hmac_update	GmSSL/src/sm3_hmac.c	/^void sm3_hmac_update(SM3_HMAC_CTX *ctx, const uint8_t *data, size_t data_len)$/;"	f	signature:(SM3_HMAC_CTX *ctx, const uint8_t *data, size_t data_len)
sm3_init	GmSSL/include/gmssl/sm3.h	/^void sm3_init(SM3_CTX *ctx);$/;"	p	signature:(SM3_CTX *ctx)
sm3_init	GmSSL/src/sm3.c	/^void sm3_init(SM3_CTX *ctx)$/;"	f	signature:(SM3_CTX *ctx)
sm3_main	GmSSL/tools/gmssl.c	/^extern int sm3_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm3_main	GmSSL/tools/sm3.c	/^int sm3_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm3_update	GmSSL/include/gmssl/sm3.h	/^void sm3_update(SM3_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	p	signature:(SM3_CTX *ctx, const uint8_t *data, size_t datalen)
sm3_update	GmSSL/src/sm3.c	/^void sm3_update(SM3_CTX *ctx, const uint8_t *data, size_t data_len)$/;"	f	signature:(SM3_CTX *ctx, const uint8_t *data, size_t data_len)
sm3hmac_main	GmSSL/tools/gmssl.c	/^extern int sm3hmac_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm3hmac_main	GmSSL/tools/sm3hmac.c	/^int sm3hmac_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm4_avx2_ctr32_encrypt_blocks	GmSSL/tests/sm4test.c	/^void sm4_avx2_ctr32_encrypt_blocks(const unsigned char *in,$/;"	p	file:	signature:(const unsigned char *in, unsigned char *out, size_t blocks, const SM4_KEY *key, const unsigned char iv[16])
sm4_avx2_ecb_encrypt_blocks	GmSSL/tests/sm4test.c	/^void sm4_avx2_ecb_encrypt_blocks(const unsigned char *in,$/;"	p	file:	signature:(const unsigned char *in, unsigned char *out, size_t blocks, const SM4_KEY *key)
sm4_block_cipher_object	GmSSL/src/block_cipher.c	/^static const BLOCK_CIPHER sm4_block_cipher_object = {$/;"	v	file:
sm4_cbc_decrypt	GmSSL/include/gmssl/sm4.h	/^void sm4_cbc_decrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_decrypt	GmSSL/sm4.h	/^void sm4_cbc_decrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_decrypt	GmSSL/sm4_modes.c	/^void sm4_cbc_decrypt(const SM4_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const SM4_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_decrypt	GmSSL/src/sm4.h	/^void sm4_cbc_decrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_decrypt	GmSSL/src/sm4_modes.c	/^void sm4_cbc_decrypt(const SM4_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const SM4_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_decrypt_finish	GmSSL/include/gmssl/sm4.h	/^int sm4_cbc_decrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_finish	GmSSL/sm4.h	/^int sm4_cbc_decrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_finish	GmSSL/sm4_modes.c	/^int sm4_cbc_decrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)$/;"	f	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_finish	GmSSL/src/sm4.h	/^int sm4_cbc_decrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_finish	GmSSL/src/sm4_modes.c	/^int sm4_cbc_decrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)$/;"	f	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_init	GmSSL/include/gmssl/sm4.h	/^int sm4_cbc_decrypt_init(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_decrypt_init	GmSSL/sm4.h	/^int sm4_cbc_decrypt_init(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_decrypt_init	GmSSL/sm4_modes.c	/^int sm4_cbc_decrypt_init(SM4_CBC_CTX *ctx,$/;"	f	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_decrypt_init	GmSSL/src/sm4.h	/^int sm4_cbc_decrypt_init(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_decrypt_init	GmSSL/src/sm4_modes.c	/^int sm4_cbc_decrypt_init(SM4_CBC_CTX *ctx,$/;"	f	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_decrypt_update	GmSSL/include/gmssl/sm4.h	/^int sm4_cbc_decrypt_update(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_update	GmSSL/sm4.h	/^int sm4_cbc_decrypt_update(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_update	GmSSL/sm4_modes.c	/^int sm4_cbc_decrypt_update(SM4_CBC_CTX *ctx,$/;"	f	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_update	GmSSL/src/sm4.h	/^int sm4_cbc_decrypt_update(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_decrypt_update	GmSSL/src/sm4_modes.c	/^int sm4_cbc_decrypt_update(SM4_CBC_CTX *ctx,$/;"	f	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt	GmSSL/include/gmssl/sm4.h	/^void sm4_cbc_encrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_encrypt	GmSSL/sm4.h	/^void sm4_cbc_encrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_encrypt	GmSSL/sm4_modes.c	/^void sm4_cbc_encrypt(const SM4_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const SM4_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_encrypt	GmSSL/src/sm4.h	/^void sm4_cbc_encrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_encrypt	GmSSL/src/sm4_modes.c	/^void sm4_cbc_encrypt(const SM4_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const SM4_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t nblocks, uint8_t *out)
sm4_cbc_encrypt_finish	GmSSL/include/gmssl/sm4.h	/^int sm4_cbc_encrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_finish	GmSSL/sm4.h	/^int sm4_cbc_encrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_finish	GmSSL/sm4_modes.c	/^int sm4_cbc_encrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)$/;"	f	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_finish	GmSSL/src/sm4.h	/^int sm4_cbc_encrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_finish	GmSSL/src/sm4_modes.c	/^int sm4_cbc_encrypt_finish(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)$/;"	f	signature:(SM4_CBC_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_init	GmSSL/include/gmssl/sm4.h	/^int sm4_cbc_encrypt_init(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_encrypt_init	GmSSL/sm4.h	/^int sm4_cbc_encrypt_init(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_encrypt_init	GmSSL/sm4_modes.c	/^int sm4_cbc_encrypt_init(SM4_CBC_CTX *ctx,$/;"	f	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_encrypt_init	GmSSL/src/sm4.h	/^int sm4_cbc_encrypt_init(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_encrypt_init	GmSSL/src/sm4_modes.c	/^int sm4_cbc_encrypt_init(SM4_CBC_CTX *ctx,$/;"	f	signature:(SM4_CBC_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t iv[SM4_BLOCK_SIZE])
sm4_cbc_encrypt_update	GmSSL/include/gmssl/sm4.h	/^int sm4_cbc_encrypt_update(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_update	GmSSL/sm4.h	/^int sm4_cbc_encrypt_update(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_update	GmSSL/sm4_modes.c	/^int sm4_cbc_encrypt_update(SM4_CBC_CTX *ctx,$/;"	f	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_update	GmSSL/src/sm4.h	/^int sm4_cbc_encrypt_update(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_encrypt_update	GmSSL/src/sm4_modes.c	/^int sm4_cbc_encrypt_update(SM4_CBC_CTX *ctx,$/;"	f	signature:(SM4_CBC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_decrypt	GmSSL/include/gmssl/sm4.h	/^int sm4_cbc_padding_decrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_decrypt	GmSSL/sm4.h	/^int sm4_cbc_padding_decrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_decrypt	GmSSL/sm4_modes.c	/^int sm4_cbc_padding_decrypt(const SM4_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const SM4_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_decrypt	GmSSL/src/sm4.h	/^int sm4_cbc_padding_decrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_decrypt	GmSSL/src/sm4_modes.c	/^int sm4_cbc_padding_decrypt(const SM4_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const SM4_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_encrypt	GmSSL/include/gmssl/sm4.h	/^int sm4_cbc_padding_encrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_encrypt	GmSSL/sm4.h	/^int sm4_cbc_padding_encrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_encrypt	GmSSL/sm4_modes.c	/^int sm4_cbc_padding_encrypt(const SM4_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const SM4_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_encrypt	GmSSL/src/sm4.h	/^int sm4_cbc_padding_encrypt(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, const uint8_t iv[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_cbc_padding_encrypt	GmSSL/src/sm4_modes.c	/^int sm4_cbc_padding_encrypt(const SM4_KEY *key, const uint8_t iv[16],$/;"	f	signature:(const SM4_KEY *key, const uint8_t iv[16], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_ctr32_encrypt_blocks	GmSSL/sm4_enc.c	/^void sm4_ctr32_encrypt_blocks(const unsigned char *in, unsigned char *out,$/;"	f	signature:(const unsigned char *in, unsigned char *out, size_t blocks, const SM4_KEY *key, const unsigned char iv[16])
sm4_ctr32_encrypt_blocks	GmSSL/src/sm4_enc.c	/^void sm4_ctr32_encrypt_blocks(const unsigned char *in, unsigned char *out,$/;"	f	signature:(const unsigned char *in, unsigned char *out, size_t blocks, const SM4_KEY *key, const unsigned char iv[16])
sm4_ctr_decrypt	GmSSL/include/gmssl/sm4.h	87;"	d
sm4_ctr_decrypt	GmSSL/sm4.h	87;"	d
sm4_ctr_decrypt	GmSSL/src/sm4.h	87;"	d
sm4_ctr_decrypt_finish	GmSSL/include/gmssl/sm4.h	140;"	d
sm4_ctr_decrypt_finish	GmSSL/sm4.h	140;"	d
sm4_ctr_decrypt_finish	GmSSL/src/sm4.h	140;"	d
sm4_ctr_decrypt_init	GmSSL/include/gmssl/sm4.h	138;"	d
sm4_ctr_decrypt_init	GmSSL/sm4.h	138;"	d
sm4_ctr_decrypt_init	GmSSL/src/sm4.h	138;"	d
sm4_ctr_decrypt_update	GmSSL/include/gmssl/sm4.h	139;"	d
sm4_ctr_decrypt_update	GmSSL/sm4.h	139;"	d
sm4_ctr_decrypt_update	GmSSL/src/sm4.h	139;"	d
sm4_ctr_encrypt	GmSSL/include/gmssl/sm4.h	/^void sm4_ctr_encrypt(const SM4_KEY *key, uint8_t ctr[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, uint8_t ctr[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out)
sm4_ctr_encrypt	GmSSL/sm4.h	/^void sm4_ctr_encrypt(const SM4_KEY *key, uint8_t ctr[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, uint8_t ctr[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out)
sm4_ctr_encrypt	GmSSL/sm4_modes.c	/^void sm4_ctr_encrypt(const SM4_KEY *key, uint8_t ctr[16], const uint8_t *in, size_t inlen, uint8_t *out)$/;"	f	signature:(const SM4_KEY *key, uint8_t ctr[16], const uint8_t *in, size_t inlen, uint8_t *out)
sm4_ctr_encrypt	GmSSL/src/sm4.h	/^void sm4_ctr_encrypt(const SM4_KEY *key, uint8_t ctr[SM4_BLOCK_SIZE],$/;"	p	signature:(const SM4_KEY *key, uint8_t ctr[SM4_BLOCK_SIZE], const uint8_t *in, size_t inlen, uint8_t *out)
sm4_ctr_encrypt	GmSSL/src/sm4_modes.c	/^void sm4_ctr_encrypt(const SM4_KEY *key, uint8_t ctr[16], const uint8_t *in, size_t inlen, uint8_t *out)$/;"	f	signature:(const SM4_KEY *key, uint8_t ctr[16], const uint8_t *in, size_t inlen, uint8_t *out)
sm4_ctr_encrypt_finish	GmSSL/include/gmssl/sm4.h	/^int sm4_ctr_encrypt_finish(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_finish	GmSSL/sm4.h	/^int sm4_ctr_encrypt_finish(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_finish	GmSSL/sm4_modes.c	/^int sm4_ctr_encrypt_finish(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen)$/;"	f	signature:(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_finish	GmSSL/src/sm4.h	/^int sm4_ctr_encrypt_finish(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_finish	GmSSL/src/sm4_modes.c	/^int sm4_ctr_encrypt_finish(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen)$/;"	f	signature:(SM4_CTR_CTX *ctx, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_init	GmSSL/include/gmssl/sm4.h	/^int sm4_ctr_encrypt_init(SM4_CTR_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t ctr[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CTR_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t ctr[SM4_BLOCK_SIZE])
sm4_ctr_encrypt_init	GmSSL/sm4.h	/^int sm4_ctr_encrypt_init(SM4_CTR_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t ctr[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CTR_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t ctr[SM4_BLOCK_SIZE])
sm4_ctr_encrypt_init	GmSSL/sm4_modes.c	/^int sm4_ctr_encrypt_init(SM4_CTR_CTX *ctx,$/;"	f	signature:(SM4_CTR_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t ctr[SM4_BLOCK_SIZE])
sm4_ctr_encrypt_init	GmSSL/src/sm4.h	/^int sm4_ctr_encrypt_init(SM4_CTR_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t ctr[SM4_BLOCK_SIZE]);$/;"	p	signature:(SM4_CTR_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t ctr[SM4_BLOCK_SIZE])
sm4_ctr_encrypt_init	GmSSL/src/sm4_modes.c	/^int sm4_ctr_encrypt_init(SM4_CTR_CTX *ctx,$/;"	f	signature:(SM4_CTR_CTX *ctx, const uint8_t key[SM4_BLOCK_SIZE], const uint8_t ctr[SM4_BLOCK_SIZE])
sm4_ctr_encrypt_update	GmSSL/include/gmssl/sm4.h	/^int sm4_ctr_encrypt_update(SM4_CTR_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CTR_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_update	GmSSL/sm4.h	/^int sm4_ctr_encrypt_update(SM4_CTR_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CTR_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_update	GmSSL/sm4_modes.c	/^int sm4_ctr_encrypt_update(SM4_CTR_CTX *ctx,$/;"	f	signature:(SM4_CTR_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_update	GmSSL/src/sm4.h	/^int sm4_ctr_encrypt_update(SM4_CTR_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(SM4_CTR_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_ctr_encrypt_update	GmSSL/src/sm4_modes.c	/^int sm4_ctr_encrypt_update(SM4_CTR_CTX *ctx,$/;"	f	signature:(SM4_CTR_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
sm4_decrypt	GmSSL/include/gmssl/sm4.h	72;"	d
sm4_decrypt	GmSSL/sm4.h	72;"	d
sm4_decrypt	GmSSL/src/sm4.h	72;"	d
sm4_encrypt	GmSSL/include/gmssl/sm4.h	/^void sm4_encrypt(const SM4_KEY *key, const uint8_t in[SM4_BLOCK_SIZE], uint8_t out[SM4_BLOCK_SIZE]);$/;"	p	signature:(const SM4_KEY *key, const uint8_t in[SM4_BLOCK_SIZE], uint8_t out[SM4_BLOCK_SIZE])
sm4_encrypt	GmSSL/sm4.h	/^void sm4_encrypt(const SM4_KEY *key, const uint8_t in[SM4_BLOCK_SIZE], uint8_t out[SM4_BLOCK_SIZE]);$/;"	p	signature:(const SM4_KEY *key, const uint8_t in[SM4_BLOCK_SIZE], uint8_t out[SM4_BLOCK_SIZE])
sm4_encrypt	GmSSL/sm4_enc.c	/^void sm4_encrypt(const SM4_KEY *key, const unsigned char in[16], unsigned char out[16])$/;"	f	signature:(const SM4_KEY *key, const unsigned char in[16], unsigned char out[16])
sm4_encrypt	GmSSL/src/sm4.h	/^void sm4_encrypt(const SM4_KEY *key, const uint8_t in[SM4_BLOCK_SIZE], uint8_t out[SM4_BLOCK_SIZE]);$/;"	p	signature:(const SM4_KEY *key, const uint8_t in[SM4_BLOCK_SIZE], uint8_t out[SM4_BLOCK_SIZE])
sm4_encrypt	GmSSL/src/sm4_enc.c	/^void sm4_encrypt(const SM4_KEY *key, const unsigned char in[16], unsigned char out[16])$/;"	f	signature:(const SM4_KEY *key, const unsigned char in[16], unsigned char out[16])
sm4_gcm_decrypt	GmSSL/include/gmssl/sm4.h	/^int sm4_gcm_decrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
sm4_gcm_decrypt	GmSSL/sm4.h	/^int sm4_gcm_decrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
sm4_gcm_decrypt	GmSSL/sm4_modes.c	/^int sm4_gcm_decrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
sm4_gcm_decrypt	GmSSL/src/sm4.h	/^int sm4_gcm_decrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
sm4_gcm_decrypt	GmSSL/src/sm4_modes.c	/^int sm4_gcm_decrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, const uint8_t *tag, size_t taglen, uint8_t *out)
sm4_gcm_encrypt	GmSSL/include/gmssl/sm4.h	/^int sm4_gcm_encrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
sm4_gcm_encrypt	GmSSL/sm4.h	/^int sm4_gcm_encrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
sm4_gcm_encrypt	GmSSL/sm4_modes.c	/^int sm4_gcm_encrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
sm4_gcm_encrypt	GmSSL/src/sm4.h	/^int sm4_gcm_encrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	p	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
sm4_gcm_encrypt	GmSSL/src/sm4_modes.c	/^int sm4_gcm_encrypt(const SM4_KEY *key, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(const SM4_KEY *key, const uint8_t *iv, size_t ivlen, const uint8_t *aad, size_t aadlen, const uint8_t *in, size_t inlen, uint8_t *out, size_t taglen, uint8_t *tag)
sm4_key	GmSSL/include/gmssl/block_cipher.h	/^		SM4_KEY sm4_key;$/;"	m	union:BLOCK_CIPHER_KEY::__anon72	access:public
sm4_key	GmSSL/include/gmssl/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon63	access:public
sm4_key	GmSSL/include/gmssl/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon64	access:public
sm4_key	GmSSL/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon79	access:public
sm4_key	GmSSL/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon80	access:public
sm4_key	GmSSL/src/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon83	access:public
sm4_key	GmSSL/src/sm4.h	/^	SM4_KEY sm4_key;$/;"	m	struct:__anon84	access:public
sm4_main	GmSSL/tools/gmssl.c	/^extern int sm4_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm4_main	GmSSL/tools/sm4.c	/^int sm4_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm4_set_decrypt_key	GmSSL/include/gmssl/sm4.h	/^void sm4_set_decrypt_key(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE]);$/;"	p	signature:(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE])
sm4_set_decrypt_key	GmSSL/sm4.h	/^void sm4_set_decrypt_key(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE]);$/;"	p	signature:(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE])
sm4_set_decrypt_key	GmSSL/sm4_setkey.c	/^void sm4_set_decrypt_key(SM4_KEY *key, const uint8_t user_key[16])$/;"	f	signature:(SM4_KEY *key, const uint8_t user_key[16])
sm4_set_decrypt_key	GmSSL/src/sm4.h	/^void sm4_set_decrypt_key(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE]);$/;"	p	signature:(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE])
sm4_set_decrypt_key	GmSSL/src/sm4_setkey.c	/^void sm4_set_decrypt_key(SM4_KEY *key, const uint8_t user_key[16])$/;"	f	signature:(SM4_KEY *key, const uint8_t user_key[16])
sm4_set_encrypt_key	GmSSL/include/gmssl/sm4.h	/^void sm4_set_encrypt_key(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE]);$/;"	p	signature:(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE])
sm4_set_encrypt_key	GmSSL/sm4.h	/^void sm4_set_encrypt_key(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE]);$/;"	p	signature:(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE])
sm4_set_encrypt_key	GmSSL/sm4_setkey.c	/^void sm4_set_encrypt_key(SM4_KEY *key, const uint8_t user_key[16])$/;"	f	signature:(SM4_KEY *key, const uint8_t user_key[16])
sm4_set_encrypt_key	GmSSL/src/sm4.h	/^void sm4_set_encrypt_key(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE]);$/;"	p	signature:(SM4_KEY *key, const uint8_t raw_key[SM4_KEY_SIZE])
sm4_set_encrypt_key	GmSSL/src/sm4_setkey.c	/^void sm4_set_encrypt_key(SM4_KEY *key, const uint8_t user_key[16])$/;"	f	signature:(SM4_KEY *key, const uint8_t user_key[16])
sm9_barrett_bn_add	GmSSL/include/gmssl/sm9.h	/^static void sm9_barrett_bn_add(sm9_barrett_bn_t r, const sm9_barrett_bn_t a, const sm9_barrett_bn_t b);$/;"	p	signature:(sm9_barrett_bn_t r, const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)
sm9_barrett_bn_add	GmSSL/src/sm9_alg.c	/^static void sm9_barrett_bn_add(sm9_barrett_bn_t r, const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)$/;"	f	file:	signature:(sm9_barrett_bn_t r, const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)
sm9_barrett_bn_cmp	GmSSL/include/gmssl/sm9.h	/^static int sm9_barrett_bn_cmp(const sm9_barrett_bn_t a, const sm9_barrett_bn_t b);$/;"	p	signature:(const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)
sm9_barrett_bn_cmp	GmSSL/src/sm9_alg.c	/^static int sm9_barrett_bn_cmp(const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)$/;"	f	file:	signature:(const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)
sm9_barrett_bn_sub	GmSSL/include/gmssl/sm9.h	/^static void sm9_barrett_bn_sub(sm9_barrett_bn_t ret, const sm9_barrett_bn_t a, const sm9_barrett_bn_t b);$/;"	p	signature:(sm9_barrett_bn_t ret, const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)
sm9_barrett_bn_sub	GmSSL/src/sm9_alg.c	/^static void sm9_barrett_bn_sub(sm9_barrett_bn_t ret, const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)$/;"	f	file:	signature:(sm9_barrett_bn_t ret, const sm9_barrett_bn_t a, const sm9_barrett_bn_t b)
sm9_barrett_bn_t	GmSSL/include/gmssl/sm9.h	/^typedef uint64_t sm9_barrett_bn_t[9];$/;"	t
sm9_bn_add	GmSSL/include/gmssl/sm9.h	/^static void sm9_bn_add(sm9_bn_t r, const sm9_bn_t a, const sm9_bn_t b);$/;"	p	signature:(sm9_bn_t r, const sm9_bn_t a, const sm9_bn_t b)
sm9_bn_add	GmSSL/src/sm9_alg.c	/^static void sm9_bn_add(sm9_bn_t r, const sm9_bn_t a, const sm9_bn_t b)$/;"	f	file:	signature:(sm9_bn_t r, const sm9_bn_t a, const sm9_bn_t b)
sm9_bn_clean	GmSSL/include/gmssl/sm9.h	80;"	d
sm9_bn_cmp	GmSSL/include/gmssl/sm9.h	/^static int sm9_bn_cmp(const sm9_bn_t a, const sm9_bn_t b);$/;"	p	signature:(const sm9_bn_t a, const sm9_bn_t b)
sm9_bn_cmp	GmSSL/src/sm9_alg.c	/^static int sm9_bn_cmp(const sm9_bn_t a, const sm9_bn_t b)$/;"	f	file:	signature:(const sm9_bn_t a, const sm9_bn_t b)
sm9_bn_copy	GmSSL/include/gmssl/sm9.h	83;"	d
sm9_bn_equ_hex	GmSSL/include/gmssl/sm9.h	/^static int sm9_bn_equ_hex(const sm9_bn_t a, const char *hex);$/;"	p	signature:(const sm9_bn_t a, const char *hex)
sm9_bn_equ_hex	GmSSL/src/sm9_alg.c	/^static int sm9_bn_equ_hex(const sm9_bn_t a, const char *hex)$/;"	f	file:	signature:(const sm9_bn_t a, const char *hex)
sm9_bn_from_bytes	GmSSL/include/gmssl/sm9.h	/^static void sm9_bn_from_bytes(sm9_bn_t r, const uint8_t in[32]);$/;"	p	signature:(sm9_bn_t r, const uint8_t in[32])
sm9_bn_from_bytes	GmSSL/src/sm9_alg.c	/^static void sm9_bn_from_bytes(sm9_bn_t r, const uint8_t in[32])$/;"	f	file:	signature:(sm9_bn_t r, const uint8_t in[32])
sm9_bn_from_hex	GmSSL/include/gmssl/sm9.h	/^static int sm9_bn_from_hex(sm9_bn_t r, const char hex[65]);$/;"	p	signature:(sm9_bn_t r, const char hex[65])
sm9_bn_from_hex	GmSSL/src/sm9_alg.c	/^static int sm9_bn_from_hex(sm9_bn_t r, const char hex[65])$/;"	f	file:	signature:(sm9_bn_t r, const char hex[65])
sm9_bn_init	GmSSL/include/gmssl/sm9.h	79;"	d
sm9_bn_is_one	GmSSL/include/gmssl/sm9.h	85;"	d
sm9_bn_is_zero	GmSSL/include/gmssl/sm9.h	84;"	d
sm9_bn_rand_range	GmSSL/include/gmssl/sm9.h	/^static void sm9_bn_rand_range(sm9_bn_t r, const sm9_bn_t range);$/;"	p	signature:(sm9_bn_t r, const sm9_bn_t range)
sm9_bn_rand_range	GmSSL/src/sm9_alg.c	/^static void sm9_bn_rand_range(sm9_bn_t r, const sm9_bn_t range)$/;"	f	file:	signature:(sm9_bn_t r, const sm9_bn_t range)
sm9_bn_set_one	GmSSL/include/gmssl/sm9.h	82;"	d
sm9_bn_set_word	GmSSL/include/gmssl/sm9.h	/^static void sm9_bn_set_word(sm9_bn_t r, uint32_t a);$/;"	p	signature:(sm9_bn_t r, uint32_t a)
sm9_bn_set_word	GmSSL/src/sm9_alg.c	/^static void sm9_bn_set_word(sm9_bn_t r, uint32_t a)$/;"	f	file:	signature:(sm9_bn_t r, uint32_t a)
sm9_bn_set_zero	GmSSL/include/gmssl/sm9.h	81;"	d
sm9_bn_sub	GmSSL/include/gmssl/sm9.h	/^static void sm9_bn_sub(sm9_bn_t ret, const sm9_bn_t a, const sm9_bn_t b);$/;"	p	signature:(sm9_bn_t ret, const sm9_bn_t a, const sm9_bn_t b)
sm9_bn_sub	GmSSL/src/sm9_alg.c	/^static void sm9_bn_sub(sm9_bn_t ret, const sm9_bn_t a, const sm9_bn_t b)$/;"	f	file:	signature:(sm9_bn_t ret, const sm9_bn_t a, const sm9_bn_t b)
sm9_bn_t	GmSSL/include/gmssl/sm9.h	/^typedef uint64_t sm9_bn_t[8];$/;"	t
sm9_bn_to_bits	GmSSL/include/gmssl/sm9.h	/^static void sm9_bn_to_bits(const sm9_bn_t a, char bits[256]);$/;"	p	signature:(const sm9_bn_t a, char bits[256])
sm9_bn_to_bits	GmSSL/src/sm9_alg.c	/^static void sm9_bn_to_bits(const sm9_bn_t a, char bits[256])$/;"	f	file:	signature:(const sm9_bn_t a, char bits[256])
sm9_bn_to_bytes	GmSSL/include/gmssl/sm9.h	/^static void sm9_bn_to_bytes(const sm9_bn_t a, uint8_t out[32]);$/;"	p	signature:(const sm9_bn_t a, uint8_t out[32])
sm9_bn_to_bytes	GmSSL/src/sm9_alg.c	/^static void sm9_bn_to_bytes(const sm9_bn_t a, uint8_t out[32])$/;"	f	file:	signature:(const sm9_bn_t a, uint8_t out[32])
sm9_bn_to_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_bn_to_hex(const sm9_bn_t a, char hex[65]);$/;"	p	signature:(const sm9_bn_t a, char hex[65])
sm9_bn_to_hex	GmSSL/src/sm9_alg.c	/^static void sm9_bn_to_hex(const sm9_bn_t a, char hex[65])$/;"	f	file:	signature:(const sm9_bn_t a, char hex[65])
sm9_eval_g_line	GmSSL/include/gmssl/sm9.h	/^static void sm9_eval_g_line(sm9_fp12_t num, sm9_fp12_t den, const sm9_twist_point_t *T, const sm9_twist_point_t *P, const sm9_point_t *Q);$/;"	p	signature:(sm9_fp12_t num, sm9_fp12_t den, const sm9_twist_point_t *T, const sm9_twist_point_t *P, const sm9_point_t *Q)
sm9_eval_g_line	GmSSL/src/sm9_alg.c	/^static void sm9_eval_g_line(sm9_fp12_t num, sm9_fp12_t den, const sm9_twist_point_t *T, const sm9_twist_point_t *P, const sm9_point_t *Q)$/;"	f	file:	signature:(sm9_fp12_t num, sm9_fp12_t den, const sm9_twist_point_t *T, const sm9_twist_point_t *P, const sm9_point_t *Q)
sm9_eval_g_tangent	GmSSL/include/gmssl/sm9.h	/^static void sm9_eval_g_tangent(sm9_fp12_t num, sm9_fp12_t den, const sm9_twist_point_t *P, const sm9_point_t *Q);$/;"	p	signature:(sm9_fp12_t num, sm9_fp12_t den, const sm9_twist_point_t *P, const sm9_point_t *Q)
sm9_eval_g_tangent	GmSSL/src/sm9_alg.c	/^static void sm9_eval_g_tangent(sm9_fp12_t num, sm9_fp12_t den, const sm9_twist_point_t *P, const sm9_point_t *Q)$/;"	f	file:	signature:(sm9_fp12_t num, sm9_fp12_t den, const sm9_twist_point_t *P, const sm9_point_t *Q)
sm9_final_exponent	GmSSL/include/gmssl/sm9.h	/^static void sm9_final_exponent(sm9_fp12_t r, const sm9_fp12_t f);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t f)
sm9_final_exponent	GmSSL/src/sm9_alg.c	/^static void sm9_final_exponent(sm9_fp12_t r, const sm9_fp12_t f)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t f)
sm9_final_exponent_hard_part	GmSSL/include/gmssl/sm9.h	/^static void sm9_final_exponent_hard_part(sm9_fp12_t r, const sm9_fp12_t f);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t f)
sm9_final_exponent_hard_part	GmSSL/src/sm9_alg.c	/^static void sm9_final_exponent_hard_part(sm9_fp12_t r, const sm9_fp12_t f)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t f)
sm9_fn_t	GmSSL/include/gmssl/sm9.h	/^typedef sm9_bn_t sm9_fn_t;$/;"	t
sm9_fp12_add	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_add(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)
sm9_fp12_add	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_add(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)
sm9_fp12_clean	GmSSL/include/gmssl/sm9.h	187;"	d
sm9_fp12_copy	GmSSL/include/gmssl/sm9.h	189;"	d
sm9_fp12_dbl	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_dbl(sm9_fp12_t r, const sm9_fp12_t a);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_dbl	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_dbl(sm9_fp12_t r, const sm9_fp12_t a)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_equ	GmSSL/include/gmssl/sm9.h	/^static int sm9_fp12_equ(const sm9_fp12_t a, const sm9_fp12_t b);$/;"	p	signature:(const sm9_fp12_t a, const sm9_fp12_t b)
sm9_fp12_equ	GmSSL/src/sm9_alg.c	/^static int sm9_fp12_equ(const sm9_fp12_t a, const sm9_fp12_t b)$/;"	f	file:	signature:(const sm9_fp12_t a, const sm9_fp12_t b)
sm9_fp12_frobenius	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_frobenius(sm9_fp12_t r, const sm9_fp12_t x);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t x)
sm9_fp12_frobenius	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_frobenius(sm9_fp12_t r, const sm9_fp12_t x)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t x)
sm9_fp12_frobenius2	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_frobenius2(sm9_fp12_t r, const sm9_fp12_t x);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t x)
sm9_fp12_frobenius2	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_frobenius2(sm9_fp12_t r, const sm9_fp12_t x)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t x)
sm9_fp12_frobenius3	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_frobenius3(sm9_fp12_t r, const sm9_fp12_t x);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t x)
sm9_fp12_frobenius3	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_frobenius3(sm9_fp12_t r, const sm9_fp12_t x)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t x)
sm9_fp12_frobenius6	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_frobenius6(sm9_fp12_t r, const sm9_fp12_t x);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t x)
sm9_fp12_frobenius6	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_frobenius6(sm9_fp12_t r, const sm9_fp12_t x)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t x)
sm9_fp12_from_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_from_hex(sm9_fp12_t r, const char hex[65 * 12]);$/;"	p	signature:(sm9_fp12_t r, const char hex[65 * 12])
sm9_fp12_from_hex	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_from_hex(sm9_fp12_t r, const char hex[65 * 12])$/;"	f	file:	signature:(sm9_fp12_t r, const char hex[65 * 12])
sm9_fp12_init	GmSSL/include/gmssl/sm9.h	186;"	d
sm9_fp12_inv	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_inv(sm9_fp12_t r, const sm9_fp12_t a);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_inv	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_inv(sm9_fp12_t r, const sm9_fp12_t a)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_is_one	GmSSL/include/gmssl/sm9.h	/^static int sm9_fp12_is_one(const sm9_fp12_t a);$/;"	p	signature:(const sm9_fp12_t a)
sm9_fp12_is_one	GmSSL/src/sm9_alg.c	/^static int sm9_fp12_is_one(const sm9_fp12_t a)$/;"	f	file:	signature:(const sm9_fp12_t a)
sm9_fp12_is_zero	GmSSL/include/gmssl/sm9.h	/^static int sm9_fp12_is_zero(const sm9_fp12_t a);$/;"	p	signature:(const sm9_fp12_t a)
sm9_fp12_is_zero	GmSSL/src/sm9_alg.c	/^static int sm9_fp12_is_zero(const sm9_fp12_t a)$/;"	f	file:	signature:(const sm9_fp12_t a)
sm9_fp12_mul	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_mul(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)
sm9_fp12_mul	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_mul(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)
sm9_fp12_neg	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_neg(sm9_fp12_t r, const sm9_fp12_t a);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_neg	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_neg(sm9_fp12_t r, const sm9_fp12_t a)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_pow	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_pow(sm9_fp12_t r, const sm9_fp12_t a, const sm9_bn_t k);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a, const sm9_bn_t k)
sm9_fp12_pow	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_pow(sm9_fp12_t r, const sm9_fp12_t a, const sm9_bn_t k)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a, const sm9_bn_t k)
sm9_fp12_print	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_print(const char *prefix, const sm9_fp12_t a);$/;"	p	signature:(const char *prefix, const sm9_fp12_t a)
sm9_fp12_print	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_print(const char *prefix, const sm9_fp12_t a)$/;"	f	file:	signature:(const char *prefix, const sm9_fp12_t a)
sm9_fp12_set	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set(sm9_fp12_t r, const sm9_fp4_t a0, const sm9_fp4_t a1, const sm9_fp4_t a2);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp4_t a0, const sm9_fp4_t a1, const sm9_fp4_t a2)
sm9_fp12_set	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set(sm9_fp12_t r, const sm9_fp4_t a0, const sm9_fp4_t a1, const sm9_fp4_t a2)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp4_t a0, const sm9_fp4_t a1, const sm9_fp4_t a2)
sm9_fp12_set_fp	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set_fp(sm9_fp12_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp_t a)
sm9_fp12_set_fp	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set_fp(sm9_fp12_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp_t a)
sm9_fp12_set_fp2	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set_fp2(sm9_fp12_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp2_t a)
sm9_fp12_set_fp2	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set_fp2(sm9_fp12_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp2_t a)
sm9_fp12_set_fp4	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set_fp4(sm9_fp12_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp4_t a)
sm9_fp12_set_fp4	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set_fp4(sm9_fp12_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp4_t a)
sm9_fp12_set_one	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set_one(sm9_fp12_t r);$/;"	p	signature:(sm9_fp12_t r)
sm9_fp12_set_one	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set_one(sm9_fp12_t r)$/;"	f	file:	signature:(sm9_fp12_t r)
sm9_fp12_set_u	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set_u(sm9_fp12_t r);$/;"	p	signature:(sm9_fp12_t r)
sm9_fp12_set_u	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set_u(sm9_fp12_t r)$/;"	f	file:	signature:(sm9_fp12_t r)
sm9_fp12_set_v	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set_v(sm9_fp12_t r);$/;"	p	signature:(sm9_fp12_t r)
sm9_fp12_set_v	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set_v(sm9_fp12_t r)$/;"	f	file:	signature:(sm9_fp12_t r)
sm9_fp12_set_w	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set_w(sm9_fp12_t r);$/;"	p	signature:(sm9_fp12_t r)
sm9_fp12_set_w	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set_w(sm9_fp12_t r)$/;"	f	file:	signature:(sm9_fp12_t r)
sm9_fp12_set_w_sqr	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_set_w_sqr(sm9_fp12_t r);$/;"	p	signature:(sm9_fp12_t r)
sm9_fp12_set_w_sqr	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_set_w_sqr(sm9_fp12_t r)$/;"	f	file:	signature:(sm9_fp12_t r)
sm9_fp12_set_zero	GmSSL/include/gmssl/sm9.h	188;"	d
sm9_fp12_sqr	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_sqr(sm9_fp12_t r, const sm9_fp12_t a);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_sqr	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_sqr(sm9_fp12_t r, const sm9_fp12_t a)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_sub	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_sub(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)
sm9_fp12_sub	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_sub(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a, const sm9_fp12_t b)
sm9_fp12_t	GmSSL/include/gmssl/sm9.h	/^typedef sm9_fp4_t sm9_fp12_t[3];$/;"	t
sm9_fp12_to_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_to_hex(const sm9_fp12_t a, char hex[65 * 12]);$/;"	p	signature:(const sm9_fp12_t a, char hex[65 * 12])
sm9_fp12_to_hex	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_to_hex(const sm9_fp12_t a, char hex[65 * 12])$/;"	f	file:	signature:(const sm9_fp12_t a, char hex[65 * 12])
sm9_fp12_tri	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp12_tri(sm9_fp12_t r, const sm9_fp12_t a);$/;"	p	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp12_tri	GmSSL/src/sm9_alg.c	/^static void sm9_fp12_tri(sm9_fp12_t r, const sm9_fp12_t a)$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_fp12_t a)
sm9_fp2_add	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_add(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_add	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_add(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_clean	GmSSL/include/gmssl/sm9.h	128;"	d
sm9_fp2_conjugate	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_conjugate(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_conjugate	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_conjugate(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_copy	GmSSL/include/gmssl/sm9.h	131;"	d
sm9_fp2_dbl	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_dbl(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_dbl	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_dbl(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_div	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_div(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_div	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_div(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_div2	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_div2(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_div2	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_div2(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_equ	GmSSL/include/gmssl/sm9.h	132;"	d
sm9_fp2_frobenius	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_frobenius(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_frobenius	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_frobenius(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_from_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_from_hex(sm9_fp2_t r, const char hex[65 * 2]);$/;"	p	signature:(sm9_fp2_t r, const char hex[65 * 2])
sm9_fp2_from_hex	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_from_hex(sm9_fp2_t r, const char hex[65 * 2])$/;"	f	file:	signature:(sm9_fp2_t r, const char hex[65 * 2])
sm9_fp2_init	GmSSL/include/gmssl/sm9.h	127;"	d
sm9_fp2_inv	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_inv(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_inv	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_inv(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_is_one	GmSSL/include/gmssl/sm9.h	130;"	d
sm9_fp2_is_zero	GmSSL/include/gmssl/sm9.h	129;"	d
sm9_fp2_mul	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_mul(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_mul	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_mul(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_mul_fp	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_mul_fp(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp_t k);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp_t k)
sm9_fp2_mul_fp	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_mul_fp(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp_t k)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp_t k)
sm9_fp2_mul_u	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_mul_u(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_mul_u	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_mul_u(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_neg	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_neg(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_neg	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_neg(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_print	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_print(const char *prefix, const sm9_fp2_t a);$/;"	p	signature:(const char *prefix, const sm9_fp2_t a)
sm9_fp2_print	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_print(const char *prefix, const sm9_fp2_t a)$/;"	f	file:	signature:(const char *prefix, const sm9_fp2_t a)
sm9_fp2_set	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_set(sm9_fp2_t r, const sm9_fp_t a0, const sm9_fp_t a1);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp_t a0, const sm9_fp_t a1)
sm9_fp2_set	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_set(sm9_fp2_t r, const sm9_fp_t a0, const sm9_fp_t a1)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp_t a0, const sm9_fp_t a1)
sm9_fp2_set_fp	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_set_fp(sm9_fp2_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp_t a)
sm9_fp2_set_fp	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_set_fp(sm9_fp2_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp_t a)
sm9_fp2_set_one	GmSSL/include/gmssl/sm9.h	138;"	d
sm9_fp2_set_u	GmSSL/include/gmssl/sm9.h	140;"	d
sm9_fp2_set_zero	GmSSL/include/gmssl/sm9.h	137;"	d
sm9_fp2_sqr	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_sqr(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_sqr	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_sqr(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_sqr_u	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_sqr_u(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_sqr_u	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_sqr_u(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_sub	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_sub(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_sub	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_sub(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a, const sm9_fp2_t b)
sm9_fp2_t	GmSSL/include/gmssl/sm9.h	/^typedef sm9_fp_t sm9_fp2_t[2];$/;"	t
sm9_fp2_to_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_to_hex(const sm9_fp2_t a, char hex[65 * 2]);$/;"	p	signature:(const sm9_fp2_t a, char hex[65 * 2])
sm9_fp2_to_hex	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_to_hex(const sm9_fp2_t a, char hex[65 * 2])$/;"	f	file:	signature:(const sm9_fp2_t a, char hex[65 * 2])
sm9_fp2_tri	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp2_tri(sm9_fp2_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp2_tri	GmSSL/src/sm9_alg.c	/^static void sm9_fp2_tri(sm9_fp2_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp2_t r, const sm9_fp2_t a)
sm9_fp4_add	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_add(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)
sm9_fp4_add	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_add(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)
sm9_fp4_clean	GmSSL/include/gmssl/sm9.h	158;"	d
sm9_fp4_conjugate	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_conjugate(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_conjugate	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_conjugate(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_copy	GmSSL/include/gmssl/sm9.h	164;"	d
sm9_fp4_dbl	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_dbl(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_dbl	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_dbl(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_equ	GmSSL/include/gmssl/sm9.h	163;"	d
sm9_fp4_frobenius	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_frobenius(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_frobenius	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_frobenius(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_frobenius2	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_frobenius2(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_frobenius2	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_frobenius2(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_frobenius3	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_frobenius3(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_frobenius3	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_frobenius3(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_from_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_from_hex(sm9_fp4_t r, const char hex[65 * 4]);$/;"	p	signature:(sm9_fp4_t r, const char hex[65 * 4])
sm9_fp4_from_hex	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_from_hex(sm9_fp4_t r, const char hex[65 * 4])$/;"	f	file:	signature:(sm9_fp4_t r, const char hex[65 * 4])
sm9_fp4_init	GmSSL/include/gmssl/sm9.h	157;"	d
sm9_fp4_inv	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_inv(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_inv	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_inv(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_is_one	GmSSL/include/gmssl/sm9.h	162;"	d
sm9_fp4_is_zero	GmSSL/include/gmssl/sm9.h	161;"	d
sm9_fp4_mul	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_mul(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)
sm9_fp4_mul	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_mul(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)
sm9_fp4_mul_fp	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_mul_fp(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp_t k);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp_t k)
sm9_fp4_mul_fp	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_mul_fp(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp_t k)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp_t k)
sm9_fp4_mul_fp2	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_mul_fp2(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp2_t b0);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp2_t b0)
sm9_fp4_mul_fp2	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_mul_fp2(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp2_t b0)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp2_t b0)
sm9_fp4_mul_v	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_mul_v(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)
sm9_fp4_mul_v	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_mul_v(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)
sm9_fp4_neg	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_neg(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_neg	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_neg(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_set	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_set(sm9_fp4_t r, const sm9_fp2_t a0, const sm9_fp2_t a1);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp2_t a0, const sm9_fp2_t a1)
sm9_fp4_set	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_set(sm9_fp4_t r, const sm9_fp2_t a0, const sm9_fp2_t a1)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp2_t a0, const sm9_fp2_t a1)
sm9_fp4_set_fp	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_set_fp(sm9_fp4_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp_t a)
sm9_fp4_set_fp	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_set_fp(sm9_fp4_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp_t a)
sm9_fp4_set_fp2	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_set_fp2(sm9_fp4_t r, const sm9_fp2_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp2_t a)
sm9_fp4_set_fp2	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_set_fp2(sm9_fp4_t r, const sm9_fp2_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp2_t a)
sm9_fp4_set_one	GmSSL/include/gmssl/sm9.h	160;"	d
sm9_fp4_set_u	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_set_u(sm9_fp4_t r);$/;"	p	signature:(sm9_fp4_t r)
sm9_fp4_set_u	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_set_u(sm9_fp4_t r)$/;"	f	file:	signature:(sm9_fp4_t r)
sm9_fp4_set_v	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_set_v(sm9_fp4_t r);$/;"	p	signature:(sm9_fp4_t r)
sm9_fp4_set_v	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_set_v(sm9_fp4_t r)$/;"	f	file:	signature:(sm9_fp4_t r)
sm9_fp4_set_zero	GmSSL/include/gmssl/sm9.h	159;"	d
sm9_fp4_sqr	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_sqr(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_sqr	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_sqr(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_sqr_v	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_sqr_v(sm9_fp4_t r, const sm9_fp4_t a);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_sqr_v	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_sqr_v(sm9_fp4_t r, const sm9_fp4_t a)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a)
sm9_fp4_sub	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_sub(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b);$/;"	p	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)
sm9_fp4_sub	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_sub(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)$/;"	f	file:	signature:(sm9_fp4_t r, const sm9_fp4_t a, const sm9_fp4_t b)
sm9_fp4_t	GmSSL/include/gmssl/sm9.h	/^typedef sm9_fp2_t sm9_fp4_t[2];$/;"	t
sm9_fp4_to_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp4_to_hex(const sm9_fp4_t a, char hex[65 * 4]);$/;"	p	signature:(const sm9_fp4_t a, char hex[65 * 4])
sm9_fp4_to_hex	GmSSL/src/sm9_alg.c	/^static void sm9_fp4_to_hex(const sm9_fp4_t a, char hex[65 * 4])$/;"	f	file:	signature:(const sm9_fp4_t a, char hex[65 * 4])
sm9_fp_add	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_add(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)
sm9_fp_add	GmSSL/src/sm9_alg.c	/^static void sm9_fp_add(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)
sm9_fp_clean	GmSSL/include/gmssl/sm9.h	102;"	d
sm9_fp_copy	GmSSL/include/gmssl/sm9.h	109;"	d
sm9_fp_dbl	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_dbl(sm9_fp_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_dbl	GmSSL/src/sm9_alg.c	/^static void sm9_fp_dbl(sm9_fp_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_div2	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_div2(sm9_fp_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_div2	GmSSL/src/sm9_alg.c	/^static void sm9_fp_div2(sm9_fp_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_equ	GmSSL/include/gmssl/sm9.h	/^static int sm9_fp_equ(const sm9_fp_t a, const sm9_fp_t b);$/;"	p	signature:(const sm9_fp_t a, const sm9_fp_t b)
sm9_fp_equ	GmSSL/src/sm9_alg.c	/^static int sm9_fp_equ(const sm9_fp_t a, const sm9_fp_t b)$/;"	f	file:	signature:(const sm9_fp_t a, const sm9_fp_t b)
sm9_fp_from_hex	GmSSL/include/gmssl/sm9.h	107;"	d
sm9_fp_init	GmSSL/include/gmssl/sm9.h	101;"	d
sm9_fp_inv	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_inv(sm9_fp_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_inv	GmSSL/src/sm9_alg.c	/^static void sm9_fp_inv(sm9_fp_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_is_one	GmSSL/include/gmssl/sm9.h	104;"	d
sm9_fp_is_zero	GmSSL/include/gmssl/sm9.h	103;"	d
sm9_fp_mul	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_mul(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)
sm9_fp_mul	GmSSL/src/sm9_alg.c	/^static void sm9_fp_mul(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)
sm9_fp_neg	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_neg(sm9_fp_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_neg	GmSSL/src/sm9_alg.c	/^static void sm9_fp_neg(sm9_fp_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_pow	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_pow(sm9_fp_t r, const sm9_fp_t a, const sm9_bn_t e);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a, const sm9_bn_t e)
sm9_fp_pow	GmSSL/src/sm9_alg.c	/^static void sm9_fp_pow(sm9_fp_t r, const sm9_fp_t a, const sm9_bn_t e)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a, const sm9_bn_t e)
sm9_fp_set_one	GmSSL/include/gmssl/sm9.h	106;"	d
sm9_fp_set_zero	GmSSL/include/gmssl/sm9.h	105;"	d
sm9_fp_sqr	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_sqr(sm9_fp_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_sqr	GmSSL/src/sm9_alg.c	/^static void sm9_fp_sqr(sm9_fp_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_sub	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_sub(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)
sm9_fp_sub	GmSSL/src/sm9_alg.c	/^static void sm9_fp_sub(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a, const sm9_fp_t b)
sm9_fp_t	GmSSL/include/gmssl/sm9.h	/^typedef sm9_bn_t sm9_fp_t;$/;"	t
sm9_fp_to_hex	GmSSL/include/gmssl/sm9.h	108;"	d
sm9_fp_tri	GmSSL/include/gmssl/sm9.h	/^static void sm9_fp_tri(sm9_fp_t r, const sm9_fp_t a);$/;"	p	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_fp_tri	GmSSL/src/sm9_alg.c	/^static void sm9_fp_tri(sm9_fp_t r, const sm9_fp_t a)$/;"	f	file:	signature:(sm9_fp_t r, const sm9_fp_t a)
sm9_hash1	GmSSL/src/sm9_key.c	/^int sm9_hash1(bignum_t r, const char *id, size_t idlen, uint8_t hid)$/;"	f	signature:(bignum_t r, const char *id, size_t idlen, uint8_t hid)
sm9_pairing	GmSSL/include/gmssl/sm9.h	/^static void sm9_pairing(sm9_fp12_t r, const sm9_twist_point_t *Q, const sm9_point_t *P);$/;"	p	signature:(sm9_fp12_t r, const sm9_twist_point_t *Q, const sm9_point_t *P)
sm9_pairing	GmSSL/src/sm9_alg.c	/^static void sm9_pairing(sm9_fp12_t r, const sm9_twist_point_t *Q, const sm9_point_t *P) {$/;"	f	file:	signature:(sm9_fp12_t r, const sm9_twist_point_t *Q, const sm9_point_t *P)
sm9_pairing_test	GmSSL/include/gmssl/sm9.h	/^void sm9_pairing_test();$/;"	p	signature:()
sm9_pairing_test	GmSSL/src/sm9_alg.c	/^void sm9_pairing_test()$/;"	f
sm9_point_add	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_add(sm9_point_t *R, const sm9_point_t *P, const sm9_point_t *Q);$/;"	p	signature:(sm9_point_t *R, const sm9_point_t *P, const sm9_point_t *Q)
sm9_point_add	GmSSL/src/sm9_alg.c	/^static void sm9_point_add(sm9_point_t *R, const sm9_point_t *P, const sm9_point_t *Q)$/;"	f	file:	signature:(sm9_point_t *R, const sm9_point_t *P, const sm9_point_t *Q)
sm9_point_copy	GmSSL/include/gmssl/sm9.h	230;"	d
sm9_point_dbl	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_dbl(sm9_point_t *R, const sm9_point_t *P);$/;"	p	signature:(sm9_point_t *R, const sm9_point_t *P)
sm9_point_dbl	GmSSL/src/sm9_alg.c	/^static void sm9_point_dbl(sm9_point_t *R, const sm9_point_t *P)$/;"	f	file:	signature:(sm9_point_t *R, const sm9_point_t *P)
sm9_point_equ	GmSSL/include/gmssl/sm9.h	/^static int sm9_point_equ(const sm9_point_t *P, const sm9_point_t *Q);$/;"	p	signature:(const sm9_point_t *P, const sm9_point_t *Q)
sm9_point_equ	GmSSL/src/sm9_alg.c	/^static int sm9_point_equ(const sm9_point_t *P, const sm9_point_t *Q)$/;"	f	file:	signature:(const sm9_point_t *P, const sm9_point_t *Q)
sm9_point_from_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_from_hex(sm9_point_t *R, const char hex[65 * 2]);$/;"	p	signature:(sm9_point_t *R, const char hex[65 * 2])
sm9_point_from_hex	GmSSL/src/sm9_alg.c	/^static void sm9_point_from_hex(sm9_point_t *R, const char hex[65 * 2])$/;"	f	file:	signature:(sm9_point_t *R, const char hex[65 * 2])
sm9_point_get_xy	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_get_xy(const sm9_point_t *P, sm9_fp_t x, sm9_fp_t y);$/;"	p	signature:(const sm9_point_t *P, sm9_fp_t x, sm9_fp_t y)
sm9_point_get_xy	GmSSL/src/sm9_alg.c	/^static void sm9_point_get_xy(const sm9_point_t *P, sm9_fp_t x, sm9_fp_t y)$/;"	f	file:	signature:(const sm9_point_t *P, sm9_fp_t x, sm9_fp_t y)
sm9_point_init	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_init(sm9_point_t *R);$/;"	p	signature:(sm9_point_t *R)
sm9_point_init	GmSSL/src/sm9_alg.c	/^static void sm9_point_init(sm9_point_t *R)$/;"	f	file:	signature:(sm9_point_t *R)
sm9_point_is_at_infinity	GmSSL/include/gmssl/sm9.h	/^static int sm9_point_is_at_infinity(const sm9_point_t *P);$/;"	p	signature:(const sm9_point_t *P)
sm9_point_is_at_infinity	GmSSL/src/sm9_alg.c	/^static int sm9_point_is_at_infinity(const sm9_point_t *P) {$/;"	f	file:	signature:(const sm9_point_t *P)
sm9_point_is_on_curve	GmSSL/include/gmssl/sm9.h	/^static int sm9_point_is_on_curve(const sm9_point_t *P);$/;"	p	signature:(const sm9_point_t *P)
sm9_point_is_on_curve	GmSSL/src/sm9_alg.c	/^static int sm9_point_is_on_curve(const sm9_point_t *P)$/;"	f	file:	signature:(const sm9_point_t *P)
sm9_point_mul	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_mul(sm9_point_t *R, const sm9_bn_t k, const sm9_point_t *P);$/;"	p	signature:(sm9_point_t *R, const sm9_bn_t k, const sm9_point_t *P)
sm9_point_mul	GmSSL/src/sm9_alg.c	/^static void sm9_point_mul(sm9_point_t *R, const sm9_bn_t k, const sm9_point_t *P)$/;"	f	file:	signature:(sm9_point_t *R, const sm9_bn_t k, const sm9_point_t *P)
sm9_point_mul_generator	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_mul_generator(sm9_point_t *R, const sm9_bn_t k);$/;"	p	signature:(sm9_point_t *R, const sm9_bn_t k)
sm9_point_mul_generator	GmSSL/src/sm9_alg.c	/^static void sm9_point_mul_generator(sm9_point_t *R, const sm9_bn_t k)$/;"	f	file:	signature:(sm9_point_t *R, const sm9_bn_t k)
sm9_point_neg	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_neg(sm9_point_t *R, const sm9_point_t *P);$/;"	p	signature:(sm9_point_t *R, const sm9_point_t *P)
sm9_point_neg	GmSSL/src/sm9_alg.c	/^static void sm9_point_neg(sm9_point_t *R, const sm9_point_t *P)$/;"	f	file:	signature:(sm9_point_t *R, const sm9_point_t *P)
sm9_point_set_infinity	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_set_infinity(sm9_point_t *R);$/;"	p	signature:(sm9_point_t *R)
sm9_point_set_infinity	GmSSL/src/sm9_alg.c	/^static void sm9_point_set_infinity(sm9_point_t *R) {$/;"	f	file:	signature:(sm9_point_t *R)
sm9_point_sub	GmSSL/include/gmssl/sm9.h	/^static void sm9_point_sub(sm9_point_t *R, const sm9_point_t *P, const sm9_point_t *Q);$/;"	p	signature:(sm9_point_t *R, const sm9_point_t *P, const sm9_point_t *Q)
sm9_point_sub	GmSSL/src/sm9_alg.c	/^static void sm9_point_sub(sm9_point_t *R, const sm9_point_t *P, const sm9_point_t *Q)$/;"	f	file:	signature:(sm9_point_t *R, const sm9_point_t *P, const sm9_point_t *Q)
sm9_point_t	GmSSL/include/gmssl/sm9.h	/^} sm9_point_t;$/;"	t	typeref:struct:__anon42
sm9_print_bn	GmSSL/include/gmssl/sm9.h	/^static void sm9_print_bn(const char *prefix, const sm9_bn_t a);$/;"	p	signature:(const char *prefix, const sm9_bn_t a)
sm9_print_bn	GmSSL/src/sm9_alg.c	/^static void sm9_print_bn(const char *prefix, const sm9_bn_t a)$/;"	f	file:	signature:(const char *prefix, const sm9_bn_t a)
sm9_sign_finish	GmSSL/src/sm9_lib.c	/^int sm9_sign_finish(SM3_CTX *ctx, SM9_SIGNATURE *sig)$/;"	f	signature:(SM3_CTX *ctx, SM9_SIGNATURE *sig)
sm9_sign_init	GmSSL/src/sm9_lib.c	/^int sm9_sign_init(SM3_CTX *ctx)$/;"	f	signature:(SM3_CTX *ctx)
sm9_sign_keygen	GmSSL/src/sm9_lib.c	/^int sm9_sign_keygen(SM9_SIGN_MASTER_KEY *msk, const char *id, size_t idlen, SM9_POINT *ds)$/;"	f	signature:(SM9_SIGN_MASTER_KEY *msk, const char *id, size_t idlen, SM9_POINT *ds)
sm9_sign_setup	GmSSL/src/sm9_lib.c	/^int sm9_sign_setup(SM9_SIGN_MASTER_KEY *msk)$/;"	f	signature:(SM9_SIGN_MASTER_KEY *msk)
sm9_sign_update	GmSSL/src/sm9_lib.c	/^int sm9_sign_update(SM3_CTX *ctx, const uint8_t *data, size_t datalen)$/;"	f	signature:(SM3_CTX *ctx, const uint8_t *data, size_t datalen)
sm9_twist_point_add	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_add(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)
sm9_twist_point_add	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_add(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)
sm9_twist_point_add_full	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_add_full(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)
sm9_twist_point_add_full	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_add_full(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)
sm9_twist_point_copy	GmSSL/include/gmssl/sm9.h	245;"	d
sm9_twist_point_dbl	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_dbl(sm9_twist_point_t *R, const sm9_twist_point_t *P);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_dbl	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_dbl(sm9_twist_point_t *R, const sm9_twist_point_t *P)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_equ	GmSSL/include/gmssl/sm9.h	/^static int sm9_twist_point_equ(const sm9_twist_point_t *P, const sm9_twist_point_t *Q);$/;"	p	signature:(const sm9_twist_point_t *P, const sm9_twist_point_t *Q)
sm9_twist_point_equ	GmSSL/src/sm9_alg.c	/^static int sm9_twist_point_equ(const sm9_twist_point_t *P, const sm9_twist_point_t *Q)$/;"	f	file:	signature:(const sm9_twist_point_t *P, const sm9_twist_point_t *Q)
sm9_twist_point_from_hex	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_from_hex(sm9_twist_point_t *R, const char hex[65 * 4]);$/;"	p	signature:(sm9_twist_point_t *R, const char hex[65 * 4])
sm9_twist_point_from_hex	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_from_hex(sm9_twist_point_t *R, const char hex[65 * 4])$/;"	f	file:	signature:(sm9_twist_point_t *R, const char hex[65 * 4])
sm9_twist_point_get_xy	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_get_xy(const sm9_twist_point_t *P, sm9_fp2_t x, sm9_fp2_t y);$/;"	p	signature:(const sm9_twist_point_t *P, sm9_fp2_t x, sm9_fp2_t y)
sm9_twist_point_get_xy	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_get_xy(const sm9_twist_point_t *P, sm9_fp2_t x, sm9_fp2_t y)$/;"	f	file:	signature:(const sm9_twist_point_t *P, sm9_fp2_t x, sm9_fp2_t y)
sm9_twist_point_is_at_infinity	GmSSL/include/gmssl/sm9.h	/^static int sm9_twist_point_is_at_infinity(const sm9_twist_point_t *P);$/;"	p	signature:(const sm9_twist_point_t *P)
sm9_twist_point_is_at_infinity	GmSSL/src/sm9_alg.c	/^static int sm9_twist_point_is_at_infinity(const sm9_twist_point_t *P)$/;"	f	file:	signature:(const sm9_twist_point_t *P)
sm9_twist_point_is_on_curve	GmSSL/include/gmssl/sm9.h	/^static int sm9_twist_point_is_on_curve(const sm9_twist_point_t *P);$/;"	p	signature:(const sm9_twist_point_t *P)
sm9_twist_point_is_on_curve	GmSSL/src/sm9_alg.c	/^static int sm9_twist_point_is_on_curve(const sm9_twist_point_t *P)$/;"	f	file:	signature:(const sm9_twist_point_t *P)
sm9_twist_point_mul	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_mul(sm9_twist_point_t *R, const sm9_bn_t k, const sm9_twist_point_t *P);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_bn_t k, const sm9_twist_point_t *P)
sm9_twist_point_mul	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_mul(sm9_twist_point_t *R, const sm9_bn_t k, const sm9_twist_point_t *P)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_bn_t k, const sm9_twist_point_t *P)
sm9_twist_point_mul_G	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_mul_G(sm9_twist_point_t *R, const sm9_bn_t k);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_bn_t k)
sm9_twist_point_mul_G	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_mul_G(sm9_twist_point_t *R, const sm9_bn_t k)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_bn_t k)
sm9_twist_point_neg	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_neg(sm9_twist_point_t *R, const sm9_twist_point_t *P);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_neg	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_neg(sm9_twist_point_t *R, const sm9_twist_point_t *P)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_neg_pi2	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_neg_pi2(sm9_twist_point_t *R, const sm9_twist_point_t *P);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_neg_pi2	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_neg_pi2(sm9_twist_point_t *R, const sm9_twist_point_t *P)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_pi1	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_pi1(sm9_twist_point_t *R, const sm9_twist_point_t *P);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_pi1	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_pi1(sm9_twist_point_t *R, const sm9_twist_point_t *P)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_pi2	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_pi2(sm9_twist_point_t *R, const sm9_twist_point_t *P);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_pi2	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_pi2(sm9_twist_point_t *R, const sm9_twist_point_t *P)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P)
sm9_twist_point_set_infinity	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_set_infinity(sm9_twist_point_t *R);$/;"	p	signature:(sm9_twist_point_t *R)
sm9_twist_point_set_infinity	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_set_infinity(sm9_twist_point_t *R)$/;"	f	file:	signature:(sm9_twist_point_t *R)
sm9_twist_point_sub	GmSSL/include/gmssl/sm9.h	/^static void sm9_twist_point_sub(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q);$/;"	p	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)
sm9_twist_point_sub	GmSSL/src/sm9_alg.c	/^static void sm9_twist_point_sub(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)$/;"	f	file:	signature:(sm9_twist_point_t *R, const sm9_twist_point_t *P, const sm9_twist_point_t *Q)
sm9_twist_point_t	GmSSL/include/gmssl/sm9.h	/^} sm9_twist_point_t;$/;"	t	typeref:struct:__anon43
sm9_verify_finish	GmSSL/src/sm9_lib.c	/^int sm9_verify_finish(SM9_SIGN_CTX *ctx, const char *id, size_t idlen, const SM9_SIGNATURE *sig)$/;"	f	signature:(SM9_SIGN_CTX *ctx, const char *id, size_t idlen, const SM9_SIGNATURE *sig)
sm9_verify_init	GmSSL/src/sm9_lib.c	/^int sm9_verify_init(SM9_SIGN_CTX *ctx)$/;"	f	signature:(SM9_SIGN_CTX *ctx)
sm9_verify_update	GmSSL/src/sm9_lib.c	/^int sm9_verify_update(SM9_SIGN_CTX *ctx, const uint8_t *data, size_t datalen)$/;"	f	signature:(SM9_SIGN_CTX *ctx, const uint8_t *data, size_t datalen)
sm9decrypt_main	GmSSL/tools/gmssl.c	/^extern int sm9decrypt_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm9decrypt_main	GmSSL/tools/sm9decrypt.c	/^int sm9decrypt_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm9encrypt_main	GmSSL/tools/gmssl.c	/^extern int sm9encrypt_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm9encrypt_main	GmSSL/tools/sm9encrypt.c	/^int sm9encrypt_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm9keygen_main	GmSSL/tools/gmssl.c	/^extern int sm9keygen_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm9keygen_main	GmSSL/tools/sm9keygen.c	/^int sm9keygen_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm9setup_main	GmSSL/tools/gmssl.c	/^extern int sm9setup_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm9setup_main	GmSSL/tools/sm9setup.c	/^int sm9setup_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm9sign_main	GmSSL/tools/gmssl.c	/^extern int sm9sign_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm9sign_main	GmSSL/tools/sm9sign.c	/^int sm9sign_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sm9verify_main	GmSSL/tools/gmssl.c	/^extern int sm9verify_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
sm9verify_main	GmSSL/tools/sm9verify.c	/^int sm9verify_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
sms4_key_t_bs	sm4_bs.h	/^} sms4_key_t_bs;$/;"	t	typeref:struct:__anon1
sms4_set_encrypt_key_bs	sm4_bs.c	/^void sms4_set_encrypt_key_bs(sms4_key_t_bs *key,unsigned long long *user_keyh,unsigned long long *user_keyl)$/;"	f	signature:(sms4_key_t_bs *key,unsigned long long *user_keyh,unsigned long long *user_keyl)
sms4_set_encrypt_key_bs	sm4_bs.h	/^void sms4_set_encrypt_key_bs(sms4_key_t_bs *key,unsigned long long *user_keyh,unsigned long long *user_keyl);$/;"	p	signature:(sms4_key_t_bs *key,unsigned long long *user_keyh,unsigned long long *user_keyl)
sock	GmSSL/include/gmssl/tls.h	/^	int sock;$/;"	m	struct:__anon30	access:public
start_time	GmSSL/include/gmssl/tls.h	/^	time_t start_time;$/;"	m	struct:__anon29	access:public
state	GmSSL/include/gmssl/md5.h	/^	uint32_t state[MD5_STATE_WORDS];$/;"	m	struct:__anon66	access:public
state	GmSSL/include/gmssl/sha1.h	/^	uint32_t state[SHA1_STATE_WORDS];$/;"	m	struct:__anon39	access:public
state	GmSSL/include/gmssl/sha2.h	/^	uint32_t state[SHA224_STATE_WORDS];$/;"	m	struct:__anon52	access:public
state	GmSSL/include/gmssl/sha2.h	/^	uint32_t state[SHA256_STATE_WORDS];$/;"	m	struct:__anon53	access:public
state	GmSSL/include/gmssl/sha2.h	/^	uint64_t state[SHA384_STATE_WORDS];$/;"	m	struct:__anon54	access:public
state	GmSSL/include/gmssl/sha2.h	/^	uint64_t state[SHA512_STATE_WORDS];$/;"	m	struct:__anon55	access:public
std	oSM4.c	/^using namespace std;$/;"	v
std_id	GmSSL/tools/sdfutil/sdf_sansec.c	/^	unsigned int std_id;$/;"	m	struct:__anon3	file:	access:public
sub_bytes	GmSSL/src/aes.c	/^static void sub_bytes(uint8_t state[4][4])$/;"	f	file:	signature:(uint8_t state[4][4])
sub_word	GmSSL/src/aes.c	/^static uint32_t sub_word(uint32_t A)$/;"	f	file:	signature:(uint32_t A)
substitution	GmSSL/src/des.c	/^static uint32_t substitution(const uint64_t A)$/;"	f	file:	signature:(const uint64_t A)
table_item_t	GmSSL/tools/sdfutil/sdf_ext.c	/^} table_item_t;$/;"	t	typeref:struct:__anon2	file:
test_aes	GmSSL/tests/aestest.c	/^int test_aes(void)$/;"	f	signature:(void)
test_aes_ctr	GmSSL/tests/aestest.c	/^int test_aes_ctr(void)$/;"	f	signature:(void)
test_aes_gcm	GmSSL/tests/aestest.c	/^int test_aes_gcm(void)$/;"	f	signature:(void)
test_asn1_bits	GmSSL/tests/asn1test.c	/^static int test_asn1_bits(void)$/;"	f	file:	signature:(void)
test_asn1_boolean	GmSSL/tests/asn1test.c	/^static int test_asn1_boolean(void)$/;"	f	file:	signature:(void)
test_asn1_generalized_time	GmSSL/tests/asn1test.c	/^static int test_asn1_generalized_time(void)$/;"	f	file:	signature:(void)
test_asn1_ia5_string	GmSSL/tests/asn1test.c	/^static int test_asn1_ia5_string(void)$/;"	f	file:	signature:(void)
test_asn1_int	GmSSL/tests/asn1test.c	/^static int test_asn1_int(void)$/;"	f	file:	signature:(void)
test_asn1_length	GmSSL/tests/asn1test.c	/^static int test_asn1_length(void)$/;"	f	file:	signature:(void)
test_asn1_null	GmSSL/tests/asn1test.c	/^static int test_asn1_null(void)$/;"	f	file:	signature:(void)
test_asn1_object_identifier	GmSSL/tests/asn1test.c	/^static int test_asn1_object_identifier(void)$/;"	f	file:	signature:(void)
test_asn1_printable_string	GmSSL/tests/asn1test.c	/^static int test_asn1_printable_string(void)$/;"	f	file:	signature:(void)
test_asn1_tag	GmSSL/tests/asn1test.c	/^static int test_asn1_tag(void)$/;"	f	file:	signature:(void)
test_asn1_utc_time	GmSSL/tests/asn1test.c	/^static int test_asn1_utc_time(void)$/;"	f	file:	signature:(void)
test_asn1_utf8_string	GmSSL/tests/asn1test.c	/^static int test_asn1_utf8_string(void)$/;"	f	file:	signature:(void)
test_base64	GmSSL/tests/base64test.c	/^int test_base64(void)$/;"	f	signature:(void)
test_cms_content_info	GmSSL/tests/cmstest.c	/^static int test_cms_content_info(void)$/;"	f	file:	signature:(void)
test_cms_content_type	GmSSL/tests/cmstest.c	/^static int test_cms_content_type(void)$/;"	f	file:	signature:(void)
test_cms_digest_algors	GmSSL/tests/cmstest.c	/^static int test_cms_digest_algors(void)$/;"	f	file:	signature:(void)
test_cms_enced_content_info	GmSSL/tests/cmstest.c	/^static int test_cms_enced_content_info(void)$/;"	f	file:	signature:(void)
test_cms_enced_content_info_encrypt	GmSSL/tests/cmstest.c	/^static int test_cms_enced_content_info_encrypt(void)$/;"	f	file:	signature:(void)
test_cms_enveloped_data	GmSSL/tests/cmstest.c	/^int test_cms_enveloped_data(void)$/;"	f	signature:(void)
test_cms_issuer_and_serial_number	GmSSL/tests/cmstest.c	/^static int test_cms_issuer_and_serial_number(void)$/;"	f	file:	signature:(void)
test_cms_key_agreement_info	GmSSL/tests/cmstest.c	/^static int test_cms_key_agreement_info(void)$/;"	f	file:	signature:(void)
test_cms_recipient_info	GmSSL/tests/cmstest.c	/^static int test_cms_recipient_info(void)$/;"	f	file:	signature:(void)
test_cms_signed_and_enveloped_data	GmSSL/tests/cmstest.c	/^static int test_cms_signed_and_enveloped_data(void)$/;"	f	file:	signature:(void)
test_cms_signed_data	GmSSL/tests/cmstest.c	/^static int test_cms_signed_data(void)$/;"	f	file:	signature:(void)
test_cms_signer_info	GmSSL/tests/cmstest.c	/^static int test_cms_signer_info(void)$/;"	f	file:	signature:(void)
test_cms_signer_info_sign	GmSSL/tests/cmstest.c	/^static int test_cms_signer_info_sign(void)$/;"	f	file:	signature:(void)
test_cms_signer_infos	GmSSL/tests/cmstest.c	/^static int test_cms_signer_infos(void)$/;"	f	file:	signature:(void)
test_ctr32	GmSSL/tests/sm4test.c	/^static int test_ctr32(int avx)$/;"	f	file:	signature:(int avx)
test_ec_named_curve	GmSSL/tests/ectest.c	/^static int test_ec_named_curve(void)$/;"	f	file:	signature:(void)
test_ec_point_print	GmSSL/tests/ectest.c	/^static int test_ec_point_print(void)$/;"	f	file:	signature:(void)
test_ec_private_key_print	GmSSL/tests/ectest.c	/^static int test_ec_private_key_print(void)$/;"	f	file:	signature:(void)
test_ecb	GmSSL/tests/sm4test.c	/^static int test_ecb(int avx)$/;"	f	file:	signature:(int avx)
test_ghash	GmSSL/tests/gcmtest.c	/^int test_ghash(void)$/;"	f	signature:(void)
test_hkdf	GmSSL/tests/hkdftest.c	/^int test_hkdf(void)$/;"	f	signature:(void)
test_hmac	GmSSL/tests/hmactest.c	/^int test_hmac(const DIGEST *digest, const char *key_hex, const char *data_hex, const char *hmac_hex)$/;"	f	signature:(const DIGEST *digest, const char *key_hex, const char *data_hex, const char *hmac_hex)
test_pbes2_algor	GmSSL/tests/pkcs8test.c	/^static int test_pbes2_algor(void)$/;"	f	file:	signature:(void)
test_pbes2_enc_algor	GmSSL/tests/pkcs8test.c	/^static int test_pbes2_enc_algor(void)$/;"	f	file:	signature:(void)
test_pbes2_params	GmSSL/tests/pkcs8test.c	/^static int test_pbes2_params(void)$/;"	f	file:	signature:(void)
test_pbkdf2_algor	GmSSL/tests/pkcs8test.c	/^static int test_pbkdf2_algor(void)$/;"	f	file:	signature:(void)
test_pbkdf2_genkey	GmSSL/tests/pbkdf2test.c	/^static int test_pbkdf2_genkey(void)$/;"	f	file:	signature:(void)
test_pbkdf2_params	GmSSL/tests/pkcs8test.c	/^static int test_pbkdf2_params(void)$/;"	f	file:	signature:(void)
test_pkcs8	GmSSL/tests/pkcs8test.c	/^static int test_pkcs8(void)$/;"	f	file:	signature:(void)
test_pkcs8_enced_private_key_info	GmSSL/tests/pkcs8test.c	/^static int test_pkcs8_enced_private_key_info(void)$/;"	f	file:	signature:(void)
test_pkcs8_pem	GmSSL/tests/pkcs8test.c	/^static int test_pkcs8_pem(void)$/;"	f	file:	signature:(void)
test_sm2_bn	GmSSL/tests/sm2test.c	/^int test_sm2_bn(void)$/;"	f	signature:(void)
test_sm2_ciphertext	GmSSL/tests/sm2test.c	/^static int test_sm2_ciphertext(void)$/;"	f	file:	signature:(void)
test_sm2_do_encrypt	GmSSL/tests/sm2test.c	/^static int test_sm2_do_encrypt(void)$/;"	f	file:	signature:(void)
test_sm2_enced_private_key_info	GmSSL/tests/sm2test.c	/^static int test_sm2_enced_private_key_info(void)$/;"	f	file:	signature:(void)
test_sm2_encrypt	GmSSL/tests/sm2test.c	/^static int test_sm2_encrypt(void)$/;"	f	file:	signature:(void)
test_sm2_jacobian_point	GmSSL/tests/sm2test.c	/^int test_sm2_jacobian_point(void)$/;"	f	signature:(void)
test_sm2_point	GmSSL/tests/sm2test.c	/^static int test_sm2_point(void)$/;"	f	file:	signature:(void)
test_sm2_point_der	GmSSL/tests/sm2test.c	/^static int test_sm2_point_der(void)$/;"	f	file:	signature:(void)
test_sm2_point_from_x	GmSSL/tests/sm2test.c	/^static int test_sm2_point_from_x(void)$/;"	f	file:	signature:(void)
test_sm2_point_octets	GmSSL/tests/sm2test.c	/^static int test_sm2_point_octets(void)$/;"	f	file:	signature:(void)
test_sm2_private_key	GmSSL/tests/sm2test.c	/^static int test_sm2_private_key(void)$/;"	f	file:	signature:(void)
test_sm2_private_key_info	GmSSL/tests/sm2test.c	/^static int test_sm2_private_key_info(void)$/;"	f	file:	signature:(void)
test_sm2_sign	GmSSL/tests/sm2test.c	/^static int test_sm2_sign(void)$/;"	f	file:	signature:(void)
test_sm2_signature	GmSSL/tests/sm2test.c	/^static int test_sm2_signature(void)$/;"	f	file:	signature:(void)
test_sm4	GmSSL/tests/sm4test.c	/^int test_sm4(void)$/;"	f	signature:(void)
test_sm4_cbc	GmSSL/tests/sm4test.c	/^static int test_sm4_cbc(void)$/;"	f	file:	signature:(void)
test_sm4_cbc_padding	GmSSL/tests/sm4test.c	/^static int test_sm4_cbc_padding(void)$/;"	f	file:	signature:(void)
test_sm4_cbc_update	GmSSL/tests/sm4test.c	/^static int test_sm4_cbc_update(void)$/;"	f	file:	signature:(void)
test_time	GmSSL/tests/asn1test.c	/^static int test_time(void)$/;"	f	file:	signature:(void)
test_tls_alert	GmSSL/tests/tlstest.c	/^static int test_tls_alert(void)$/;"	f	file:	signature:(void)
test_tls_application_data	GmSSL/tests/tlstest.c	/^static int test_tls_application_data(void)$/;"	f	file:	signature:(void)
test_tls_cbc	GmSSL/tests/tlstest.c	/^static int test_tls_cbc(void)$/;"	f	file:	signature:(void)
test_tls_certificate	GmSSL/tests/tlstest.c	/^static int test_tls_certificate(void)$/;"	f	file:	signature:(void)
test_tls_certificate_verify	GmSSL/tests/tlstest.c	/^static int test_tls_certificate_verify(void)$/;"	f	file:	signature:(void)
test_tls_change_cipher_spec	GmSSL/tests/tlstest.c	/^static int test_tls_change_cipher_spec(void)$/;"	f	file:	signature:(void)
test_tls_client_hello	GmSSL/tests/tlstest.c	/^static int test_tls_client_hello(void)$/;"	f	file:	signature:(void)
test_tls_encode	GmSSL/tests/tlstest.c	/^static int test_tls_encode(void)$/;"	f	file:	signature:(void)
test_tls_finished	GmSSL/tests/tlstest.c	/^static int test_tls_finished(void)$/;"	f	file:	signature:(void)
test_tls_random	GmSSL/tests/tlstest.c	/^static int test_tls_random(void)$/;"	f	file:	signature:(void)
test_tls_server_hello	GmSSL/tests/tlstest.c	/^static int test_tls_server_hello(void)$/;"	f	file:	signature:(void)
test_tls_server_key_exchange	GmSSL/tests/tlstest.c	/^static int test_tls_server_key_exchange(void)$/;"	f	file:	signature:(void)
test_x509_attr_type_and_value	GmSSL/tests/x509test.c	/^static int test_x509_attr_type_and_value(void)$/;"	f	file:	signature:(void)
test_x509_attribute	GmSSL/tests/x509_exttest.c	/^static int test_x509_attribute(void)$/;"	f	file:	signature:(void)
test_x509_authority_key_identifier	GmSSL/tests/x509_exttest.c	/^static int test_x509_authority_key_identifier(void)$/;"	f	file:	signature:(void)
test_x509_basic_constraints	GmSSL/tests/x509_exttest.c	/^static int test_x509_basic_constraints(void)$/;"	f	file:	signature:(void)
test_x509_cert	GmSSL/tests/x509test.c	/^static int test_x509_cert(void)$/;"	f	file:	signature:(void)
test_x509_cert_get	GmSSL/tests/x509test.c	/^static int test_x509_cert_get(const uint8_t *cert, size_t certlen)$/;"	f	file:	signature:(const uint8_t *cert, size_t certlen)
test_x509_cert_policy_id	GmSSL/tests/x509_oidtest.c	/^static int test_x509_cert_policy_id(void)$/;"	f	file:	signature:(void)
test_x509_cert_with_exts	GmSSL/tests/x509_exttest.c	/^static int test_x509_cert_with_exts(void)$/;"	f	file:	signature:(void)
test_x509_crl_entry_ext	GmSSL/tests/x509_crltest.c	/^static int test_x509_crl_entry_ext(void)$/;"	f	file:	signature:(void)
test_x509_crl_entry_exts	GmSSL/tests/x509_crltest.c	/^static int test_x509_crl_entry_exts(void)$/;"	f	file:	signature:(void)
test_x509_crl_reason	GmSSL/tests/x509_crltest.c	/^static int test_x509_crl_reason(void)$/;"	f	file:	signature:(void)
test_x509_digest_algor	GmSSL/tests/x509_algtest.c	/^static int test_x509_digest_algor(void)$/;"	f	file:	signature:(void)
test_x509_directory_name	GmSSL/tests/x509_strtest.c	/^static int test_x509_directory_name(void)$/;"	f	file:	signature:(void)
test_x509_display_text	GmSSL/tests/x509_strtest.c	/^static int test_x509_display_text(void)$/;"	f	file:	signature:(void)
test_x509_edi_party_name	GmSSL/tests/x509_exttest.c	/^static int test_x509_edi_party_name(void)$/;"	f	file:	signature:(void)
test_x509_encryption_algor	GmSSL/tests/x509_algtest.c	/^static int test_x509_encryption_algor(void)$/;"	f	file:	signature:(void)
test_x509_ext_id	GmSSL/tests/x509_oidtest.c	/^static int test_x509_ext_id()$/;"	f	file:
test_x509_ext_key_usage	GmSSL/tests/x509_exttest.c	/^static int test_x509_ext_key_usage(void)$/;"	f	file:	signature:(void)
test_x509_exts	GmSSL/tests/x509_exttest.c	/^static int test_x509_exts(void)$/;"	f	file:	signature:(void)
test_x509_general_name	GmSSL/tests/x509_exttest.c	/^static int test_x509_general_name(void)$/;"	f	file:	signature:(void)
test_x509_general_subtree	GmSSL/tests/x509_exttest.c	/^static int test_x509_general_subtree(void)$/;"	f	file:	signature:(void)
test_x509_key_purpose	GmSSL/tests/x509_oidtest.c	/^static int test_x509_key_purpose(void)$/;"	f	file:	signature:(void)
test_x509_key_usage	GmSSL/tests/x509_exttest.c	/^static int test_x509_key_usage(void)$/;"	f	file:	signature:(void)
test_x509_name	GmSSL/tests/x509test.c	/^static int test_x509_name(void)$/;"	f	file:	signature:(void)
test_x509_name_type	GmSSL/tests/x509_oidtest.c	/^static int test_x509_name_type()$/;"	f	file:
test_x509_notice_reference	GmSSL/tests/x509_exttest.c	/^static int test_x509_notice_reference(void)$/;"	f	file:	signature:(void)
test_x509_other_name	GmSSL/tests/x509_exttest.c	/^static int test_x509_other_name(void)$/;"	f	file:	signature:(void)
test_x509_policy_constraints	GmSSL/tests/x509_exttest.c	/^static int test_x509_policy_constraints(void)$/;"	f	file:	signature:(void)
test_x509_policy_mapping	GmSSL/tests/x509_exttest.c	/^static int test_x509_policy_mapping(void)$/;"	f	file:	signature:(void)
test_x509_policy_qualifier_info	GmSSL/tests/x509_exttest.c	/^static int test_x509_policy_qualifier_info(void)$/;"	f	file:	signature:(void)
test_x509_public_key_encryption_algor	GmSSL/tests/x509_algtest.c	/^static int test_x509_public_key_encryption_algor(void)$/;"	f	file:	signature:(void)
test_x509_public_key_info	GmSSL/tests/x509test.c	/^static int test_x509_public_key_info(void)$/;"	f	file:	signature:(void)
test_x509_qualifier_id	GmSSL/tests/x509_oidtest.c	/^static int test_x509_qualifier_id(void)$/;"	f	file:	signature:(void)
test_x509_rdn	GmSSL/tests/x509test.c	/^static int test_x509_rdn(void)$/;"	f	file:	signature:(void)
test_x509_req	GmSSL/tests/x509_reqtest.c	/^static int test_x509_req(void)$/;"	f	file:	signature:(void)
test_x509_request	GmSSL/tests/x509_reqtest.c	/^static int test_x509_request(void)$/;"	f	file:	signature:(void)
test_x509_request_info	GmSSL/tests/x509_reqtest.c	/^static int test_x509_request_info(void)$/;"	f	file:	signature:(void)
test_x509_revoke_reasons	GmSSL/tests/x509_exttest.c	/^static int test_x509_revoke_reasons(void)$/;"	f	file:	signature:(void)
test_x509_revoked_cert	GmSSL/tests/x509_crltest.c	/^static int test_x509_revoked_cert(void)$/;"	f	file:	signature:(void)
test_x509_signature_algor	GmSSL/tests/x509_algtest.c	/^static int test_x509_signature_algor(void)$/;"	f	file:	signature:(void)
test_x509_tbs_cert	GmSSL/tests/x509test.c	/^static int test_x509_tbs_cert(void)$/;"	f	file:	signature:(void)
test_x509_user_notice	GmSSL/tests/x509_exttest.c	/^static int test_x509_user_notice(void)$/;"	f	file:	signature:(void)
test_x509_validity	GmSSL/tests/x509test.c	/^static int test_x509_validity(void)$/;"	f	file:	signature:(void)
test_x509_version	GmSSL/tests/x509test.c	/^static int test_x509_version(void)$/;"	f	file:	signature:(void)
testcnt	GmSSL/tests/sha1test.c	/^static size_t testcnt[] = {$/;"	v	file:
testdata1	GmSSL/tests/rc4test.c	/^unsigned char testdata1[][16 * 18] = {$/;"	v
testdata2	GmSSL/tests/rc4test.c	/^unsigned char testdata2[][16 * 18] = {$/;"	v
testhex	GmSSL/tests/sm3test.c	/^static char *testhex[] = {$/;"	v	file:
testindex	GmSSL/tests/rc4test.c	/^int testindex[] = {$/;"	v
tests	GmSSL/tests/sha224test.c	/^} tests[7] = {$/;"	v	typeref:struct:__anon5
tests	GmSSL/tests/sha256test.c	/^} tests[7] = {$/;"	v	typeref:struct:__anon9
tests	GmSSL/tests/sha384test.c	/^} tests[7] = {$/;"	v	typeref:struct:__anon12
tests	GmSSL/tests/sha512test.c	/^} tests[7] = {$/;"	v	typeref:struct:__anon10
teststr	GmSSL/tests/md5test.c	/^static char *teststr[] = {$/;"	v	file:
teststr	GmSSL/tests/sha1test.c	/^static char *teststr[] = {$/;"	v	file:
timeout_secs	GmSSL/include/gmssl/tls.h	/^	int timeout_secs;$/;"	m	struct:__anon29	access:public
tlcp_accept	GmSSL/include/gmssl/tls.h	/^int tlcp_accept(TLS_CONNECT *conn, int port,$/;"	p	signature:(TLS_CONNECT *conn, int port, FILE *server_certs_fp, const SM2_KEY *server_sign_key, const SM2_KEY *server_enc_key, FILE *client_cacerts_fp, uint8_t *client_cert_verify_buf, size_t client_cert_verify_buflen)
tlcp_accept	GmSSL/src/tlcp.c	/^int tlcp_accept(TLS_CONNECT *conn, int port,$/;"	f	signature:(TLS_CONNECT *conn, int port, FILE *certs_fp, const SM2_KEY *server_sign_key, const SM2_KEY *server_enc_key, FILE *client_cacerts_fp, uint8_t *handshakes_buf, size_t handshakes_buflen)
tlcp_certificate_chain_verify	GmSSL/src/tlcp.c	/^int tlcp_certificate_chain_verify(const uint8_t *data, size_t datalen, FILE *ca_certs_fp, int depth)$/;"	f	signature:(const uint8_t *data, size_t datalen, FILE *ca_certs_fp, int depth)
tlcp_cipher_suite_name	GmSSL/include/gmssl/tls.h	/^const char *tlcp_cipher_suite_name(int cipher);$/;"	p	signature:(int cipher)
tlcp_ciphers	GmSSL/src/tlcp.c	/^static const int tlcp_ciphers[] = { TLCP_cipher_ecc_sm4_cbc_sm3 };$/;"	v	file:
tlcp_ciphers_count	GmSSL/src/tlcp.c	/^static const size_t tlcp_ciphers_count = sizeof(tlcp_ciphers)\/sizeof(tlcp_ciphers[0]);$/;"	v	file:
tlcp_client_main	GmSSL/tools/gmssl.c	/^extern int tlcp_client_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
tlcp_client_main	GmSSL/tools/tlcp_client.c	/^int tlcp_client_main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
tlcp_connect	GmSSL/include/gmssl/tls.h	/^int tlcp_connect(TLS_CONNECT *conn, const char *hostname, int port,$/;"	p	signature:(TLS_CONNECT *conn, const char *hostname, int port, FILE *ca_certs_fp, FILE *client_certs_fp, const SM2_KEY *client_sign_key)
tlcp_connect	GmSSL/src/tlcp.c	/^int tlcp_connect(TLS_CONNECT *conn, const char *hostname, int port,$/;"	f	signature:(TLS_CONNECT *conn, const char *hostname, int port, FILE *ca_certs_fp, FILE *client_certs_fp, const SM2_KEY *client_sign_key)
tlcp_record_get_handshake_server_key_exchange_pke	GmSSL/include/gmssl/tls.h	/^int tlcp_record_get_handshake_server_key_exchange_pke(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, uint8_t *sig, size_t *siglen)
tlcp_record_get_handshake_server_key_exchange_pke	GmSSL/src/tlcp.c	/^int tlcp_record_get_handshake_server_key_exchange_pke(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, uint8_t *sig, size_t *siglen)
tlcp_record_set_handshake_server_key_exchange_pke	GmSSL/include/gmssl/tls.h	/^int tlcp_record_set_handshake_server_key_exchange_pke(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, const uint8_t *sig, size_t siglen)
tlcp_record_set_handshake_server_key_exchange_pke	GmSSL/src/tlcp.c	/^int tlcp_record_set_handshake_server_key_exchange_pke(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t *sig, size_t siglen)
tlcp_server_key_exchange_pke_print	GmSSL/include/gmssl/tls.h	/^int tlcp_server_key_exchange_pke_print(FILE *fp, const uint8_t *sig, size_t siglen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *sig, size_t siglen, int format, int indent)
tlcp_server_key_exchange_pke_print	GmSSL/src/tls_trace.c	/^int tlcp_server_key_exchange_pke_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tlcp_server_main	GmSSL/tools/gmssl.c	/^extern int tlcp_server_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
tlcp_server_main	GmSSL/tools/tlcp_server.c	/^int tlcp_server_main(int argc , char **argv)$/;"	f	signature:(int argc , char **argv)
tls12_accept	GmSSL/include/gmssl/tls.h	/^int tls12_accept(TLS_CONNECT *conn, int port,$/;"	p	signature:(TLS_CONNECT *conn, int port, FILE *certs_fp, const SM2_KEY *server_sign_key, FILE *client_cacerts_fp, uint8_t *handshakes_buf, size_t handshakes_buflen)
tls12_accept	GmSSL/src/tls12.c	/^int tls12_accept(TLS_CONNECT *conn, int port,$/;"	f	signature:(TLS_CONNECT *conn, int port, FILE *server_certs_fp, const SM2_KEY *server_sign_key, FILE *client_cacerts_fp, uint8_t *handshakes_buf, size_t handshakes_buflen)
tls12_ciphers	GmSSL/src/tls12.c	/^static const int tls12_ciphers[] = {$/;"	v	file:
tls12_ciphers_count	GmSSL/src/tls12.c	/^static const size_t tls12_ciphers_count = sizeof(tls12_ciphers)\/sizeof(tls12_ciphers[0]);$/;"	v	file:
tls12_client_main	GmSSL/tools/gmssl.c	/^extern int tls12_client_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
tls12_client_main	GmSSL/tools/tls12_client.c	/^int tls12_client_main(int argc , char *argv[])$/;"	f	signature:(int argc , char *argv[])
tls12_connect	GmSSL/include/gmssl/tls.h	/^int tls12_connect(TLS_CONNECT *conn, const char *hostname, int port,$/;"	p	signature:(TLS_CONNECT *conn, const char *hostname, int port, FILE *ca_certs_fp, FILE *client_certs_fp, const SM2_KEY *client_sign_key)
tls12_connect	GmSSL/src/tls12.c	/^int tls12_connect(TLS_CONNECT *conn, const char *hostname, int port,$/;"	f	signature:(TLS_CONNECT *conn, const char *hostname, int port, FILE *ca_certs_fp, FILE *client_certs_fp, const SM2_KEY *client_sign_key)
tls12_exts	GmSSL/src/tls12.c	/^static const uint8_t tls12_exts[] = {$/;"	v	file:
tls12_record_recv	GmSSL/include/gmssl/tls.h	/^int tls12_record_recv(uint8_t *record, size_t *recordlen, int sock);$/;"	p	signature:(uint8_t *record, size_t *recordlen, int sock)
tls12_record_recv	GmSSL/src/tls12.c	/^int tls12_record_recv(uint8_t *record, size_t *recordlen, int sock)$/;"	f	signature:(uint8_t *record, size_t *recordlen, int sock)
tls12_server_main	GmSSL/tools/gmssl.c	/^extern int tls12_server_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
tls12_server_main	GmSSL/tools/tls12_server.c	/^int tls12_server_main(int argc , char *argv[])$/;"	f	signature:(int argc , char *argv[])
tls13_accept	GmSSL/include/gmssl/tls.h	/^int tls13_accept(TLS_CONNECT *conn, int port,$/;"	p	signature:(TLS_CONNECT *conn, int port, FILE *certs_fp, const SM2_KEY *server_sign_key, FILE *client_cacerts_fp)
tls13_accept	GmSSL/src/tls13.c	/^int tls13_accept(TLS_CONNECT *conn, int port,$/;"	f	signature:(TLS_CONNECT *conn, int port, FILE *server_certs_fp, const SM2_KEY *server_sign_key, FILE *client_cacerts_fp)
tls13_certificate_request_exts	GmSSL/src/tls13.c	/^static int tls13_certificate_request_exts[] = {$/;"	v	file:
tls13_cipher_suite_get	GmSSL/src/tls13.c	/^int tls13_cipher_suite_get(int cipher_suite, const DIGEST **digest, const BLOCK_CIPHER **cipher)$/;"	f	signature:(int cipher_suite, const DIGEST **digest, const BLOCK_CIPHER **cipher)
tls13_ciphers	GmSSL/src/tls13.c	/^static const int tls13_ciphers[] = { TLS_cipher_sm4_gcm_sm3 };$/;"	v	file:
tls13_client_hello_extensions_get	GmSSL/src/tls13.c	/^int tls13_client_hello_extensions_get(const uint8_t *exts, size_t extslen, SM2_POINT *client_ecdhe_public)$/;"	f	signature:(const uint8_t *exts, size_t extslen, SM2_POINT *client_ecdhe_public)
tls13_client_hello_extensions_set	GmSSL/src/tls13.c	/^int tls13_client_hello_extensions_set(uint8_t *exts, size_t *extslen, const SM2_POINT *sm2_point)$/;"	f	signature:(uint8_t *exts, size_t *extslen, const SM2_POINT *sm2_point)
tls13_client_main	GmSSL/tools/gmssl.c	/^extern int tls13_client_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
tls13_client_main	GmSSL/tools/tls13_client.c	/^int tls13_client_main(int argc , char *argv[])$/;"	f	signature:(int argc , char *argv[])
tls13_compute_verify_data	GmSSL/src/tls13.c	/^int tls13_compute_verify_data(const uint8_t *handshake_traffic_secret,$/;"	f	signature:(const uint8_t *handshake_traffic_secret, const DIGEST_CTX *dgst_ctx, uint8_t *verify_data, size_t *verify_data_len)
tls13_connect	GmSSL/include/gmssl/tls.h	/^int tls13_connect(TLS_CONNECT *conn, const char *hostname, int port,$/;"	p	signature:(TLS_CONNECT *conn, const char *hostname, int port, FILE *ca_certs_fp, FILE *client_certs_fp, const SM2_KEY *client_sign_key)
tls13_connect	GmSSL/src/tls13.c	/^int tls13_connect(TLS_CONNECT *conn, const char *hostname, int port, FILE *server_cacerts_fp,$/;"	f	signature:(TLS_CONNECT *conn, const char *hostname, int port, FILE *server_cacerts_fp, FILE *client_certs_fp, const SM2_KEY *client_sign_key)
tls13_derive_secret	GmSSL/include/gmssl/tls.h	/^int tls13_derive_secret(const uint8_t secret[32], const char *label, const DIGEST_CTX *dgst_ctx, uint8_t out[32]);$/;"	p	signature:(const uint8_t secret[32], const char *label, const DIGEST_CTX *dgst_ctx, uint8_t out[32])
tls13_derive_secret	GmSSL/src/tls13.c	/^int tls13_derive_secret(const uint8_t secret[32], const char *label, const DIGEST_CTX *dgst_ctx, uint8_t out[32])$/;"	f	signature:(const uint8_t secret[32], const char *label, const DIGEST_CTX *dgst_ctx, uint8_t out[32])
tls13_encrypted_exts	GmSSL/src/tls13.c	/^static int tls13_encrypted_exts[] = {$/;"	v	file:
tls13_gcm_decrypt	GmSSL/src/tls13.c	/^int tls13_gcm_decrypt(const BLOCK_CIPHER_KEY *key, const uint8_t iv[12],$/;"	f	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t iv[12], const uint8_t seq_num[8], const uint8_t *in, size_t inlen, int *record_type, uint8_t *out, size_t *outlen)
tls13_gcm_encrypt	GmSSL/src/tls13.c	/^int tls13_gcm_encrypt(const BLOCK_CIPHER_KEY *key, const uint8_t iv[12],$/;"	f	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t iv[12], const uint8_t seq_num[8], int record_type, const uint8_t *in, size_t inlen, size_t padding_len, uint8_t *out, size_t *outlen)
tls13_handshake_certificate_exts	GmSSL/src/tls13.c	/^static const int tls13_handshake_certificate_exts[] = {$/;"	v	file:
tls13_hkdf_expand_label	GmSSL/include/gmssl/tls.h	/^int tls13_hkdf_expand_label(const DIGEST *digest, const uint8_t secret[32],$/;"	p	signature:(const DIGEST *digest, const uint8_t secret[32], const char *label, const uint8_t *context, size_t context_len, size_t outlen, uint8_t *out)
tls13_hkdf_expand_label	GmSSL/src/tls13.c	/^int tls13_hkdf_expand_label(const DIGEST *digest, const uint8_t secret[32],$/;"	f	signature:(const DIGEST *digest, const uint8_t secret[32], const char *label, const uint8_t *context, size_t context_len, size_t outlen, uint8_t *out)
tls13_hkdf_extract	GmSSL/include/gmssl/tls.h	/^int tls13_hkdf_extract(const DIGEST *digest, const uint8_t salt[32], const uint8_t in[32], uint8_t out[32]);$/;"	p	signature:(const DIGEST *digest, const uint8_t salt[32], const uint8_t in[32], uint8_t out[32])
tls13_hkdf_extract	GmSSL/src/tls13.c	/^int tls13_hkdf_extract(const DIGEST *digest, const uint8_t salt[32], const uint8_t in[32], uint8_t out[32])$/;"	f	signature:(const DIGEST *digest, const uint8_t salt[32], const uint8_t in[32], uint8_t out[32])
tls13_padding_len_rand	GmSSL/src/tls13.c	/^int tls13_padding_len_rand(size_t *padding_len)$/;"	f	signature:(size_t *padding_len)
tls13_record_decrypt	GmSSL/src/tls13.c	/^int tls13_record_decrypt(const BLOCK_CIPHER_KEY *key, const uint8_t iv[12],$/;"	f	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t iv[12], const uint8_t seq_num[8], const uint8_t *enced_record, size_t enced_recordlen, uint8_t *record, size_t *recordlen)
tls13_record_encrypt	GmSSL/src/tls13.c	/^int tls13_record_encrypt(const BLOCK_CIPHER_KEY *key, const uint8_t iv[12],$/;"	f	signature:(const BLOCK_CIPHER_KEY *key, const uint8_t iv[12], const uint8_t seq_num[8], const uint8_t *record, size_t recordlen, size_t padding_len, uint8_t *enced_record, size_t *enced_recordlen)
tls13_record_get_handshake_certificate	GmSSL/src/tls13.c	/^int tls13_record_get_handshake_certificate(const uint8_t *record, uint8_t *data, size_t *datalen)$/;"	f	signature:(const uint8_t *record, uint8_t *data, size_t *datalen)
tls13_record_get_handshake_certificate_request	GmSSL/src/tls13.c	/^int tls13_record_get_handshake_certificate_request(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, const uint8_t **req_context, size_t *req_context_len, const uint8_t **exts, size_t *extslen)
tls13_record_get_handshake_certificate_verify	GmSSL/src/tls13.c	/^int tls13_record_get_handshake_certificate_verify(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, int *sign_algor, const uint8_t **sig, size_t *siglen)
tls13_record_get_handshake_encrypted_extensions	GmSSL/src/tls13.c	/^int tls13_record_get_handshake_encrypted_extensions(const uint8_t *record)$/;"	f	signature:(const uint8_t *record)
tls13_record_get_handshake_finished	GmSSL/src/tls13.c	/^int tls13_record_get_handshake_finished(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, const uint8_t **verify_data, size_t *verify_data_len)
tls13_record_set_handshake_certificate_from_pem	GmSSL/src/tls13.c	/^int tls13_record_set_handshake_certificate_from_pem(uint8_t *record, size_t *recordlen, FILE *fp)$/;"	f	signature:(uint8_t *record, size_t *recordlen, FILE *fp)
tls13_record_set_handshake_certificate_request	GmSSL/src/tls13.c	/^int tls13_record_set_handshake_certificate_request(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t *req_context, size_t req_context_len, const uint8_t *exts, size_t extslen)
tls13_record_set_handshake_certificate_verify	GmSSL/src/tls13.c	/^int tls13_record_set_handshake_certificate_verify(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, int sign_algor, const uint8_t *sig, size_t siglen)
tls13_record_set_handshake_encrypted_extensions	GmSSL/src/tls13.c	/^int tls13_record_set_handshake_encrypted_extensions(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t *exts_data, size_t exts_datalen)
tls13_record_set_handshake_finished	GmSSL/src/tls13.c	/^int tls13_record_set_handshake_finished(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t *verify_data, size_t verify_data_len)
tls13_recv	GmSSL/include/gmssl/tls.h	/^int tls13_recv(TLS_CONNECT *conn, uint8_t *data, size_t *datalen);$/;"	p	signature:(TLS_CONNECT *conn, uint8_t *data, size_t *datalen)
tls13_recv	GmSSL/src/tls13.c	/^int tls13_recv(TLS_CONNECT *conn, uint8_t *data, size_t *datalen)$/;"	f	signature:(TLS_CONNECT *conn, uint8_t *data, size_t *datalen)
tls13_send	GmSSL/include/gmssl/tls.h	/^int tls13_send(TLS_CONNECT *conn, const uint8_t *data, size_t datalen, size_t padding_len);$/;"	p	signature:(TLS_CONNECT *conn, const uint8_t *data, size_t datalen, size_t padding_len)
tls13_send	GmSSL/src/tls13.c	/^int tls13_send(TLS_CONNECT *conn, const uint8_t *data, size_t datalen, size_t padding_len)$/;"	f	signature:(TLS_CONNECT *conn, const uint8_t *data, size_t datalen, size_t padding_len)
tls13_server_hello_extensions_get	GmSSL/src/tls13.c	/^int tls13_server_hello_extensions_get(const uint8_t *exts, size_t extslen, SM2_POINT *sm2_point)$/;"	f	signature:(const uint8_t *exts, size_t extslen, SM2_POINT *sm2_point)
tls13_server_hello_extensions_set	GmSSL/src/tls13.c	/^int tls13_server_hello_extensions_set(uint8_t *exts, size_t *extslen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, const SM2_POINT *sm2_point, const SM2_POINT *p256_point)
tls13_server_main	GmSSL/tools/gmssl.c	/^extern int tls13_server_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
tls13_server_main	GmSSL/tools/tls13_server.c	/^int tls13_server_main(int argc , char *argv[])$/;"	f	signature:(int argc , char *argv[])
tls13_sign	GmSSL/src/tls13.c	/^int tls13_sign(const SM2_KEY *key, const DIGEST_CTX *dgst_ctx, uint8_t *sig, size_t *siglen, int is_server)$/;"	f	signature:(const SM2_KEY *key, const DIGEST_CTX *dgst_ctx, uint8_t *sig, size_t *siglen, int is_server)
tls13_verify	GmSSL/src/tls13.c	/^int tls13_verify(const SM2_KEY *key, const DIGEST_CTX *dgst_ctx, const uint8_t *sig, size_t siglen, int is_server)$/;"	f	signature:(const SM2_KEY *key, const DIGEST_CTX *dgst_ctx, const uint8_t *sig, size_t siglen, int is_server)
tls_alert_description_text	GmSSL/include/gmssl/tls.h	/^const char *tls_alert_description_text(int description);$/;"	p	signature:(int description)
tls_alert_description_text	GmSSL/src/tls_trace.c	/^const char *tls_alert_description_text(int description)$/;"	f	signature:(int description)
tls_alert_level_name	GmSSL/include/gmssl/tls.h	/^const char *tls_alert_level_name(int level);$/;"	p	signature:(int level)
tls_alert_level_name	GmSSL/src/tls_trace.c	/^const char *tls_alert_level_name(int level)$/;"	f	signature:(int level)
tls_alert_print	GmSSL/include/gmssl/tls.h	/^int tls_alert_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_alert_print	GmSSL/src/tls_trace.c	/^int tls_alert_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_application_data_print	GmSSL/include/gmssl/tls.h	/^int tls_application_data_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_application_data_print	GmSSL/src/tls_trace.c	/^int tls_application_data_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_array_copy_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_array_copy_from_bytes(uint8_t *data, size_t datalen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(uint8_t *data, size_t datalen, const uint8_t **in, size_t *inlen)
tls_array_copy_from_bytes	GmSSL/src/tls.c	/^int tls_array_copy_from_bytes(uint8_t *data, size_t datalen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(uint8_t *data, size_t datalen, const uint8_t **in, size_t *inlen)
tls_array_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_array_from_bytes(const uint8_t **data, size_t datalen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **data, size_t datalen, const uint8_t **in, size_t *inlen)
tls_array_from_bytes	GmSSL/src/tls.c	/^int tls_array_from_bytes(const uint8_t **data, size_t datalen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **data, size_t datalen, const uint8_t **in, size_t *inlen)
tls_array_to_bytes	GmSSL/include/gmssl/tls.h	/^void tls_array_to_bytes(const uint8_t *data, size_t len, uint8_t **out, size_t *outlen);$/;"	p	signature:(const uint8_t *data, size_t len, uint8_t **out, size_t *outlen)
tls_array_to_bytes	GmSSL/src/tls.c	/^void tls_array_to_bytes(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)$/;"	f	signature:(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)
tls_cbc_decrypt	GmSSL/include/gmssl/tls.h	/^int tls_cbc_decrypt(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *dec_key,$/;"	p	signature:(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *dec_key, const uint8_t seq_num[8], const uint8_t header[5], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
tls_cbc_decrypt	GmSSL/src/tls.c	/^int tls_cbc_decrypt(const SM3_HMAC_CTX *inited_hmac_ctx, const SM4_KEY *dec_key,$/;"	f	signature:(const SM3_HMAC_CTX *inited_hmac_ctx, const SM4_KEY *dec_key, const uint8_t seq_num[8], const uint8_t enced_header[5], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
tls_cbc_encrypt	GmSSL/include/gmssl/tls.h	/^int tls_cbc_encrypt(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *enc_key,$/;"	p	signature:(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *enc_key, const uint8_t seq_num[8], const uint8_t header[5], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
tls_cbc_encrypt	GmSSL/src/tls.c	/^int tls_cbc_encrypt(const SM3_HMAC_CTX *inited_hmac_ctx, const SM4_KEY *enc_key,$/;"	f	signature:(const SM3_HMAC_CTX *inited_hmac_ctx, const SM4_KEY *enc_key, const uint8_t seq_num[8], const uint8_t header[5], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
tls_cert_type_name	GmSSL/include/gmssl/tls.h	/^const char *tls_cert_type_name(int type);$/;"	p	signature:(int type)
tls_cert_type_name	GmSSL/src/tls_trace.c	/^const char *tls_cert_type_name(int type)$/;"	f	signature:(int type)
tls_certificate_chain_verify	GmSSL/include/gmssl/tls.h	/^int tls_certificate_chain_verify(const uint8_t *certs, size_t certslen, FILE *ca_certs_fp, int depth);$/;"	p	signature:(const uint8_t *certs, size_t certslen, FILE *ca_certs_fp, int depth)
tls_certificate_chain_verify	GmSSL/src/tls.c	/^int tls_certificate_chain_verify(const uint8_t *certs, size_t certslen, FILE *ca_certs_fp, int depth)$/;"	f	signature:(const uint8_t *certs, size_t certslen, FILE *ca_certs_fp, int depth)
tls_certificate_get_first	GmSSL/include/gmssl/tls.h	/^int tls_certificate_get_first(const uint8_t *data, size_t datalen, const uint8_t **cert, size_t *certlen);$/;"	p	signature:(const uint8_t *data, size_t datalen, const uint8_t **cert, size_t *certlen)
tls_certificate_get_first	GmSSL/src/tls.c	/^int tls_certificate_get_first(const uint8_t *data, size_t datalen, const uint8_t **cert, size_t *certlen)$/;"	f	signature:(const uint8_t *data, size_t datalen, const uint8_t **cert, size_t *certlen)
tls_certificate_get_public_keys	GmSSL/include/gmssl/tls.h	/^int tls_certificate_get_public_keys(const uint8_t *certs, size_t certslen, SM2_KEY *sign_key, SM2_KEY *enc_key);$/;"	p	signature:(const uint8_t *certs, size_t certslen, SM2_KEY *sign_key, SM2_KEY *enc_key)
tls_certificate_get_public_keys	GmSSL/src/tls.c	/^int tls_certificate_get_public_keys(const uint8_t *data, size_t datalen,$/;"	f	signature:(const uint8_t *data, size_t datalen, SM2_KEY *sign_key, SM2_KEY *enc_key)
tls_certificate_get_second	GmSSL/include/gmssl/tls.h	/^int tls_certificate_get_second(const uint8_t *data, size_t datalen, const uint8_t **cert, size_t *certlen);$/;"	p	signature:(const uint8_t *data, size_t datalen, const uint8_t **cert, size_t *certlen)
tls_certificate_get_second	GmSSL/src/tls.c	/^int tls_certificate_get_second(const uint8_t *data, size_t datalen, const uint8_t **cert, size_t *certlen)$/;"	f	signature:(const uint8_t *data, size_t datalen, const uint8_t **cert, size_t *certlen)
tls_certificate_get_subject_names	GmSSL/include/gmssl/tls.h	/^int tls_certificate_get_subject_names(const uint8_t *certs, size_t certslen, uint8_t *names, size_t *nameslen);$/;"	p	signature:(const uint8_t *certs, size_t certslen, uint8_t *names, size_t *nameslen)
tls_certificate_get_subject_names	GmSSL/src/tls.c	/^int tls_certificate_get_subject_names(const uint8_t *certs, size_t certslen, uint8_t *names, size_t *nameslen)$/;"	f	signature:(const uint8_t *certs, size_t certslen, uint8_t *names, size_t *nameslen)
tls_certificate_print	GmSSL/include/gmssl/tls.h	/^int tls_certificate_print(FILE *fp, const uint8_t *certs, size_t certslen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *certs, size_t certslen, int format, int indent)
tls_certificate_print	GmSSL/src/tls_trace.c	/^int tls_certificate_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_certificate_request_print	GmSSL/include/gmssl/tls.h	/^int tls_certificate_request_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_certificate_request_print	GmSSL/src/tls_trace.c	/^int tls_certificate_request_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_certificate_verify_print	GmSSL/include/gmssl/tls.h	/^int tls_certificate_verify_print(FILE *fp, const uint8_t *p, size_t len, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *p, size_t len, int format, int indent)
tls_certificate_verify_print	GmSSL/src/tls_trace.c	/^int tls_certificate_verify_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_change_cipher_spec_print	GmSSL/include/gmssl/tls.h	/^int tls_change_cipher_spec_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_change_cipher_spec_print	GmSSL/src/tls_trace.c	/^int tls_change_cipher_spec_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_change_cipher_spec_text	GmSSL/include/gmssl/tls.h	/^const char *tls_change_cipher_spec_text(int change_cipher_spec);$/;"	p	signature:(int change_cipher_spec)
tls_change_cipher_spec_text	GmSSL/src/tls_trace.c	/^const char *tls_change_cipher_spec_text(int change_cipher_spec)$/;"	f	signature:(int change_cipher_spec)
tls_cipher_suite_in_list	GmSSL/include/gmssl/tls.h	/^int tls_cipher_suite_in_list(int cipher, const int *list, size_t list_count);$/;"	p	signature:(int cipher, const int *list, size_t list_count)
tls_cipher_suite_in_list	GmSSL/src/tls.c	/^int tls_cipher_suite_in_list(int cipher, const int *list, size_t list_count)$/;"	f	signature:(int cipher, const int *list, size_t list_count)
tls_cipher_suite_name	GmSSL/include/gmssl/tls.h	/^const char *tls_cipher_suite_name(int cipher);$/;"	p	signature:(int cipher)
tls_cipher_suite_name	GmSSL/src/tls_trace.c	/^const char *tls_cipher_suite_name(int cipher)$/;"	f	signature:(int cipher)
tls_client_hello_print	GmSSL/include/gmssl/tls.h	/^int tls_client_hello_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_client_hello_print	GmSSL/src/tls_trace.c	/^int tls_client_hello_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_client_key_exchange_ecdhe_print	GmSSL/include/gmssl/tls.h	/^int tls_client_key_exchange_ecdhe_print(FILE *fp, const uint8_t *data, size_t datalen,$/;"	p	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_client_key_exchange_ecdhe_print	GmSSL/src/tls_trace.c	/^int tls_client_key_exchange_ecdhe_print(FILE *fp, const uint8_t *data, size_t datalen,$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_client_key_exchange_pke_print	GmSSL/include/gmssl/tls.h	/^int tls_client_key_exchange_pke_print(FILE *fp, const uint8_t *cke, size_t ckelen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *cke, size_t ckelen, int format, int indent)
tls_client_key_exchange_pke_print	GmSSL/src/tls_trace.c	/^int tls_client_key_exchange_pke_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_client_key_exchange_print	GmSSL/include/gmssl/tls.h	/^int tls_client_key_exchange_print(FILE *fp, const uint8_t *cke, size_t ckelen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *cke, size_t ckelen, int format, int indent)
tls_client_key_exchange_print	GmSSL/src/tls_trace.c	/^int tls_client_key_exchange_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_client_key_shares_from_bytes	GmSSL/src/tls13.c	/^int tls_client_key_shares_from_bytes(SM2_POINT *sm2_point, const uint8_t **in, size_t *inlen)$/;"	f	signature:(SM2_POINT *sm2_point, const uint8_t **in, size_t *inlen)
tls_compression_method_name	GmSSL/include/gmssl/tls.h	/^const char *tls_compression_method_name(int meth);$/;"	p	signature:(int meth)
tls_compression_method_name	GmSSL/src/tls_trace.c	/^const char *tls_compression_method_name(int meth)$/;"	f	signature:(int meth)
tls_compression_methods_has_null_compression	GmSSL/src/tls.c	/^int tls_compression_methods_has_null_compression(const uint8_t *meths, size_t methslen)$/;"	f	signature:(const uint8_t *meths, size_t methslen)
tls_ctx_set_ca_certificates	GmSSL/include/gmssl/tls.h	/^int tls_ctx_set_ca_certificates(TLS_CTX *ctx, FILE *fp, int depth);$/;"	p	signature:(TLS_CTX *ctx, FILE *fp, int depth)
tls_ctx_set_certificats_and_keys	GmSSL/include/gmssl/tls.h	/^int tls_ctx_set_certificats_and_keys(TLS_CTX *ctx, FILE *certs_fp, FILE *key_fp, const char *pass, FILE *ex_key_fp, const char *ex_pass);$/;"	p	signature:(TLS_CTX *ctx, FILE *certs_fp, FILE *key_fp, const char *pass, FILE *ex_key_fp, const char *ex_pass)
tls_ctx_set_cipher_suites	GmSSL/include/gmssl/tls.h	/^int tls_ctx_set_cipher_suites(TLS_CTX *ctx, const char *ciphers);$/;"	p	signature:(TLS_CTX *ctx, const char *ciphers)
tls_ctx_set_client_verify_ca_certificates	GmSSL/include/gmssl/tls.h	/^int tls_ctx_set_client_verify_ca_certificates(TLS_CTX *ctx, FILE *fp, int depth);$/;"	p	signature:(TLS_CTX *ctx, FILE *fp, int depth)
tls_ctx_set_crl	GmSSL/include/gmssl/tls.h	/^int tls_ctx_set_crl(TLS_CTX *ctx, FILE *fp);$/;"	p	signature:(TLS_CTX *ctx, FILE *fp)
tls_ctx_set_protocol_versions	GmSSL/include/gmssl/tls.h	/^int tls_ctx_set_protocol_versions(TLS_CTX *ctx, const int *versions, size_t versions_cnt);$/;"	p	signature:(TLS_CTX *ctx, const int *versions, size_t versions_cnt)
tls_ctx_set_shutdown_mode	GmSSL/include/gmssl/tls.h	/^int tls_ctx_set_shutdown_mode(TLS_CTX *ctx, int mode);$/;"	p	signature:(TLS_CTX *ctx, int mode)
tls_curve_type_name	GmSSL/include/gmssl/tls.h	/^const char *tls_curve_type_name(int type);$/;"	p	signature:(int type)
tls_curve_type_name	GmSSL/src/tls_trace.c	/^const char *tls_curve_type_name(int type)$/;"	f	signature:(int type)
tls_ec_point_format_name	GmSSL/include/gmssl/tls.h	/^const char *tls_ec_point_format_name(int format);$/;"	p	signature:(int format)
tls_ec_point_format_name	GmSSL/src/tls_trace.c	/^const char *tls_ec_point_format_name(int format)$/;"	f	signature:(int format)
tls_ext_key_share_client_hello_get	GmSSL/src/tls13.c	/^int tls_ext_key_share_client_hello_get(const uint8_t *ext_data, size_t ext_datalen,$/;"	f	signature:(const uint8_t *ext_data, size_t ext_datalen, int prefered_curve, int *curve, SM2_POINT *point)
tls_ext_key_share_client_hello_to_bytes	GmSSL/src/tls13.c	/^int tls_ext_key_share_client_hello_to_bytes($/;"	f	signature:( const SM2_POINT *sm2_point, const SM2_POINT *p256_point, uint8_t **out, size_t *outlen)
tls_ext_key_share_server_hello_to_bytes	GmSSL/src/tls13.c	/^int tls_ext_key_share_server_hello_to_bytes(const SM2_POINT *sm2_point, const SM2_POINT *p256_point,$/;"	f	signature:(const SM2_POINT *sm2_point, const SM2_POINT *p256_point, uint8_t **out, size_t *outlen)
tls_ext_signature_algorithms_match	GmSSL/src/tls13.c	/^int tls_ext_signature_algorithms_match(const uint8_t *ext_data, size_t ext_datalen, int algor)$/;"	f	signature:(const uint8_t *ext_data, size_t ext_datalen, int algor)
tls_ext_signature_algorithms_to_bytes	GmSSL/src/tls13.c	/^int tls_ext_signature_algorithms_to_bytes(const int *algors, size_t algors_count,$/;"	f	signature:(const int *algors, size_t algors_count, uint8_t **out, size_t *outlen)
tls_ext_signature_algors_to_bytes	GmSSL/include/gmssl/tls.h	/^int tls_ext_signature_algors_to_bytes(const int *algors, size_t algors_count,$/;"	p	signature:(const int *algors, size_t algors_count, uint8_t **out, size_t *outlen)
tls_ext_supported_groups_match	GmSSL/src/tls13.c	/^int tls_ext_supported_groups_match(const uint8_t *ext_data, size_t ext_datalen, int group)$/;"	f	signature:(const uint8_t *ext_data, size_t ext_datalen, int group)
tls_ext_supported_groups_to_bytes	GmSSL/src/tls13.c	/^int tls_ext_supported_groups_to_bytes(const int *groups, size_t groups_count,$/;"	f	signature:(const int *groups, size_t groups_count, uint8_t **out, size_t *outlen)
tls_ext_supported_versions_match	GmSSL/src/tls13.c	/^int tls_ext_supported_versions_match(const uint8_t *ext_data, size_t ext_datalen, int version)$/;"	f	signature:(const uint8_t *ext_data, size_t ext_datalen, int version)
tls_ext_supported_versions_to_bytes	GmSSL/src/tls13.c	/^int tls_ext_supported_versions_to_bytes(const int *versions, size_t versions_count,$/;"	f	signature:(const int *versions, size_t versions_count, uint8_t **out, size_t *outlen)
tls_extension_name	GmSSL/src/tls_trace.c	/^const char *tls_extension_name(int ext)$/;"	f	signature:(int ext)
tls_extension_print	GmSSL/src/tls_trace.c	/^int tls_extension_print(FILE *fp, int type, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, int type, const uint8_t *data, size_t datalen, int format, int indent)
tls_extensions_print	GmSSL/src/tls_trace.c	/^int tls_extensions_print(FILE *fp, const uint8_t *exts, size_t extslen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *exts, size_t extslen, int format, int indent)
tls_finished_print	GmSSL/include/gmssl/tls.h	/^int tls_finished_print(FILE *fp, const uint8_t *a, size_t len, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *a, size_t len, int format, int indent)
tls_finished_print	GmSSL/src/tls_trace.c	/^int tls_finished_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_get_verify_result	GmSSL/include/gmssl/tls.h	/^int tls_get_verify_result(TLS_CONNECT *conn, int *result);$/;"	p	signature:(TLS_CONNECT *conn, int *result)
tls_get_verify_result	GmSSL/src/tls.c	/^int tls_get_verify_result(TLS_CONNECT *conn, int *result)$/;"	f	signature:(TLS_CONNECT *conn, int *result)
tls_handshake_print	GmSSL/include/gmssl/tls.h	/^int tls_handshake_print(FILE *fp, const uint8_t *handshake, size_t handshakelen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *handshake, size_t handshakelen, int format, int indent)
tls_handshake_print	GmSSL/src/tls_trace.c	/^int tls_handshake_print(FILE *fp, const uint8_t *handshake, size_t handshakelen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *handshake, size_t handshakelen, int format, int indent)
tls_handshake_type_name	GmSSL/include/gmssl/tls.h	/^const char *tls_handshake_type_name(int type);$/;"	p	signature:(int type)
tls_handshake_type_name	GmSSL/src/tls_trace.c	/^const char *tls_handshake_type_name(int type)$/;"	f	signature:(int type)
tls_init	GmSSL/include/gmssl/tls.h	/^int tls_init(TLS_CONNECT *conn, const TLS_CTX *ctx);$/;"	p	signature:(TLS_CONNECT *conn, const TLS_CTX *ctx)
tls_named_curve_name	GmSSL/include/gmssl/tls.h	/^const char *tls_named_curve_name(int curve);$/;"	p	signature:(int curve)
tls_named_curve_name	GmSSL/src/tls_trace.c	/^const char *tls_named_curve_name(int curve)$/;"	f	signature:(int curve)
tls_pre_master_secret_generate	GmSSL/include/gmssl/tls.h	/^int tls_pre_master_secret_generate(uint8_t pre_master_secret[48], int version);$/;"	p	signature:(uint8_t pre_master_secret[48], int version)
tls_pre_master_secret_generate	GmSSL/src/tls.c	/^int tls_pre_master_secret_generate(uint8_t pre_master_secret[48], int version)$/;"	f	signature:(uint8_t pre_master_secret[48], int version)
tls_pre_master_secret_print	GmSSL/include/gmssl/tls.h	/^int tls_pre_master_secret_print(FILE *fp, const uint8_t pre_master_secret[48], int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t pre_master_secret[48], int format, int indent)
tls_pre_master_secret_print	GmSSL/src/tls_trace.c	/^int tls_pre_master_secret_print(FILE *fp, const uint8_t pre_master_secret[48], int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t pre_master_secret[48], int format, int indent)
tls_prf	GmSSL/include/gmssl/tls.h	/^int tls_prf(const uint8_t *secret, size_t secretlen, const char *label,$/;"	p	signature:(const uint8_t *secret, size_t secretlen, const char *label, const uint8_t *seed, size_t seedlen, const uint8_t *more, size_t morelen, size_t outlen, uint8_t *out)
tls_prf	GmSSL/src/tls.c	/^int tls_prf(const uint8_t *secret, size_t secretlen, const char *label,$/;"	f	signature:(const uint8_t *secret, size_t secretlen, const char *label, const uint8_t *seed, size_t seedlen, const uint8_t *more, size_t morelen, size_t outlen, uint8_t *out)
tls_random_generate	GmSSL/include/gmssl/tls.h	/^int tls_random_generate(uint8_t random[32]);$/;"	p	signature:(uint8_t random[32])
tls_random_generate	GmSSL/src/tls.c	/^int tls_random_generate(uint8_t random[32])$/;"	f	signature:(uint8_t random[32])
tls_random_print	GmSSL/include/gmssl/tls.h	/^int tls_random_print(FILE *fp, const uint8_t random[32], int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t random[32], int format, int indent)
tls_random_print	GmSSL/src/tls_trace.c	/^int tls_random_print(FILE *fp, const uint8_t random[32], int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t random[32], int format, int indent)
tls_record_decrypt	GmSSL/include/gmssl/tls.h	/^int tls_record_decrypt(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *cbc_key,$/;"	p	signature:(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *cbc_key, const uint8_t seq_num[8], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
tls_record_decrypt	GmSSL/src/tls.c	/^int tls_record_decrypt(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *cbc_key,$/;"	f	signature:(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *cbc_key, const uint8_t seq_num[8], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
tls_record_encrypt	GmSSL/include/gmssl/tls.h	/^int tls_record_encrypt(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *cbc_key,$/;"	p	signature:(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *cbc_key, const uint8_t seq_num[8], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
tls_record_encrypt	GmSSL/src/tls.c	/^int tls_record_encrypt(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *cbc_key,$/;"	f	signature:(const SM3_HMAC_CTX *hmac_ctx, const SM4_KEY *cbc_key, const uint8_t seq_num[8], const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
tls_record_get_alert	GmSSL/include/gmssl/tls.h	/^int tls_record_get_alert(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, int *alert_level, int *alert_description)
tls_record_get_alert	GmSSL/src/tls.c	/^int tls_record_get_alert(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, int *alert_level, int *alert_description)
tls_record_get_application_data	GmSSL/include/gmssl/tls.h	/^int tls_record_get_application_data(uint8_t *record,$/;"	p	signature:(uint8_t *record, const uint8_t **data, size_t *datalen)
tls_record_get_application_data	GmSSL/src/tls.c	/^int tls_record_get_application_data(uint8_t *record,$/;"	f	signature:(uint8_t *record, const uint8_t **data, size_t *datalen)
tls_record_get_change_cipher_spec	GmSSL/include/gmssl/tls.h	/^int tls_record_get_change_cipher_spec(const uint8_t *record);$/;"	p	signature:(const uint8_t *record)
tls_record_get_change_cipher_spec	GmSSL/src/tls.c	/^int tls_record_get_change_cipher_spec(const uint8_t *record)$/;"	f	signature:(const uint8_t *record)
tls_record_get_handshake	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, int *type, const uint8_t **data, size_t *datalen)
tls_record_get_handshake	GmSSL/src/tls.c	/^int tls_record_get_handshake(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, int *type, const uint8_t **data, size_t *datalen)
tls_record_get_handshake_certificate	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_certificate(const uint8_t *record, uint8_t *certs, size_t *certslen);$/;"	p	signature:(const uint8_t *record, uint8_t *certs, size_t *certslen)
tls_record_get_handshake_certificate	GmSSL/src/tls.c	/^int tls_record_get_handshake_certificate(const uint8_t *record, uint8_t *data, size_t *datalen)$/;"	f	signature:(const uint8_t *record, uint8_t *data, size_t *datalen)
tls_record_get_handshake_certificate_request	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_certificate_request(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, int *cert_types, size_t *cert_types_count, uint8_t *ca_names, size_t *ca_names_len)
tls_record_get_handshake_certificate_request	GmSSL/src/tls.c	/^int tls_record_get_handshake_certificate_request(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, int *cert_types, size_t *cert_types_count, uint8_t *ca_names, size_t *ca_names_len)
tls_record_get_handshake_certificate_verify	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_certificate_verify(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, uint8_t *sig, size_t *siglen)
tls_record_get_handshake_certificate_verify	GmSSL/src/tls.c	/^int tls_record_get_handshake_certificate_verify(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, uint8_t *sig, size_t *siglen)
tls_record_get_handshake_client_hello	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_client_hello(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, int *client_version, uint8_t random[32], uint8_t *session_id, size_t *session_id_len, int *cipher_suites, size_t *cipher_suites_count, uint8_t *exts, size_t *exts_len)
tls_record_get_handshake_client_hello	GmSSL/src/tls.c	/^int tls_record_get_handshake_client_hello(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, int *version, uint8_t random[32], uint8_t *session_id, size_t *session_id_len, int *cipher_suites, size_t *cipher_suites_count, uint8_t *exts, size_t *exts_len)
tls_record_get_handshake_client_key_exchange_ecdhe	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_client_key_exchange_ecdhe(const uint8_t *record, SM2_POINT *point);$/;"	p	signature:(const uint8_t *record, SM2_POINT *point)
tls_record_get_handshake_client_key_exchange_ecdhe	GmSSL/src/tls12.c	/^int tls_record_get_handshake_client_key_exchange_ecdhe(const uint8_t *record, SM2_POINT *point)$/;"	f	signature:(const uint8_t *record, SM2_POINT *point)
tls_record_get_handshake_client_key_exchange_pke	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_client_key_exchange_pke(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, uint8_t *enced_pms, size_t *enced_pms_len)
tls_record_get_handshake_client_key_exchange_pke	GmSSL/src/tls.c	/^int tls_record_get_handshake_client_key_exchange_pke(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, uint8_t *enced_pms, size_t *enced_pms_len)
tls_record_get_handshake_finished	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_finished(const uint8_t *record, uint8_t verify_data[12]);$/;"	p	signature:(const uint8_t *record, uint8_t verify_data[12])
tls_record_get_handshake_finished	GmSSL/src/tls.c	/^int tls_record_get_handshake_finished(const uint8_t *record, uint8_t verify_data[12])$/;"	f	signature:(const uint8_t *record, uint8_t verify_data[12])
tls_record_get_handshake_server_hello	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_server_hello(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, int *version, uint8_t random[32], uint8_t *session_id, size_t *session_id_len, int *cipher_suite, uint8_t *exts, size_t *exts_len)
tls_record_get_handshake_server_hello	GmSSL/src/tls.c	/^int tls_record_get_handshake_server_hello(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, int *version, uint8_t random[32], uint8_t *session_id, size_t *session_id_len, int *cipher_suite, uint8_t *exts, size_t *exts_len)
tls_record_get_handshake_server_hello_done	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_server_hello_done(const uint8_t *record);$/;"	p	signature:(const uint8_t *record)
tls_record_get_handshake_server_hello_done	GmSSL/src/tls.c	/^int tls_record_get_handshake_server_hello_done(const uint8_t *record)$/;"	f	signature:(const uint8_t *record)
tls_record_get_handshake_server_key_exchange_ecdhe	GmSSL/include/gmssl/tls.h	/^int tls_record_get_handshake_server_key_exchange_ecdhe(const uint8_t *record,$/;"	p	signature:(const uint8_t *record, int *curve, SM2_POINT *point, uint8_t *sig, size_t *siglen)
tls_record_get_handshake_server_key_exchange_ecdhe	GmSSL/src/tls12.c	/^int tls_record_get_handshake_server_key_exchange_ecdhe(const uint8_t *record,$/;"	f	signature:(const uint8_t *record, int *curve, SM2_POINT *point, uint8_t *sig, size_t *siglen)
tls_record_length	GmSSL/include/gmssl/tls.h	/^int tls_record_length(const uint8_t *record);$/;"	p	signature:(const uint8_t *record)
tls_record_length	GmSSL/src/tls.c	/^int tls_record_length(const uint8_t *record)$/;"	f	signature:(const uint8_t *record)
tls_record_print	GmSSL/include/gmssl/tls.h	/^int tls_record_print(FILE *fp, const uint8_t *record,  size_t recordlen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *record, size_t recordlen, int format, int indent)
tls_record_print	GmSSL/src/tls_trace.c	/^int tls_record_print(FILE *fp, const uint8_t *record,  size_t recordlen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *record, size_t recordlen, int format, int indent)
tls_record_recv	GmSSL/include/gmssl/tls.h	/^int tls_record_recv(uint8_t *record, size_t *recordlen, int sock);$/;"	p	signature:(uint8_t *record, size_t *recordlen, int sock)
tls_record_recv	GmSSL/src/tls.c	/^int tls_record_recv(uint8_t *record, size_t *recordlen, int sock)$/;"	f	signature:(uint8_t *record, size_t *recordlen, int sock)
tls_record_send	GmSSL/include/gmssl/tls.h	/^int tls_record_send(const uint8_t *record, size_t recordlen, int sock);$/;"	p	signature:(const uint8_t *record, size_t recordlen, int sock)
tls_record_send	GmSSL/src/tls.c	/^int tls_record_send(const uint8_t *record, size_t recordlen, int sock)$/;"	f	signature:(const uint8_t *record, size_t recordlen, int sock)
tls_record_set_alert	GmSSL/include/gmssl/tls.h	/^int tls_record_set_alert(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, int alert_level, int alert_description)
tls_record_set_alert	GmSSL/src/tls.c	/^int tls_record_set_alert(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, int alert_level, int alert_description)
tls_record_set_application_data	GmSSL/include/gmssl/tls.h	/^int tls_record_set_application_data(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, const uint8_t *data, size_t datalen)
tls_record_set_application_data	GmSSL/src/tls.c	/^int tls_record_set_application_data(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t *data, size_t datalen)
tls_record_set_change_cipher_spec	GmSSL/include/gmssl/tls.h	/^int tls_record_set_change_cipher_spec(uint8_t *record, size_t *recordlen);$/;"	p	signature:(uint8_t *record, size_t *recordlen)
tls_record_set_change_cipher_spec	GmSSL/src/tls.c	/^int tls_record_set_change_cipher_spec(uint8_t *record, size_t *recordlen)$/;"	f	signature:(uint8_t *record, size_t *recordlen)
tls_record_set_handshake	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, int type, const uint8_t *data, size_t datalen)
tls_record_set_handshake	GmSSL/src/tls.c	/^int tls_record_set_handshake(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, int type, const uint8_t *data, size_t datalen)
tls_record_set_handshake_certificate	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_certificate(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, const uint8_t *certs, size_t certslen)
tls_record_set_handshake_certificate	GmSSL/src/tls.c	/^int tls_record_set_handshake_certificate(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t *data, size_t datalen)
tls_record_set_handshake_certificate_from_pem	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_certificate_from_pem(uint8_t *record, size_t *recordlen, FILE *fp);$/;"	p	signature:(uint8_t *record, size_t *recordlen, FILE *fp)
tls_record_set_handshake_certificate_from_pem	GmSSL/src/tls.c	/^int tls_record_set_handshake_certificate_from_pem(uint8_t *record, size_t *recordlen, FILE *fp)$/;"	f	signature:(uint8_t *record, size_t *recordlen, FILE *fp)
tls_record_set_handshake_certificate_request	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_certificate_request(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, const int *cert_types, size_t cert_types_count, const uint8_t *ca_names, size_t ca_names_len)
tls_record_set_handshake_certificate_request	GmSSL/src/tls.c	/^int tls_record_set_handshake_certificate_request(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const int *cert_types, size_t cert_types_count, const uint8_t *ca_names, size_t ca_names_len)
tls_record_set_handshake_certificate_verify	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_certificate_verify(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, const uint8_t *sig, size_t siglen)
tls_record_set_handshake_certificate_verify	GmSSL/src/tls.c	/^int tls_record_set_handshake_certificate_verify(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t *sig, size_t siglen)
tls_record_set_handshake_client_hello	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_client_hello(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, int client_version, const uint8_t random[32], const uint8_t *session_id, size_t session_id_len, const int *cipher_suites, size_t cipher_suites_count, const uint8_t *exts, size_t exts_len)
tls_record_set_handshake_client_hello	GmSSL/src/tls.c	/^int tls_record_set_handshake_client_hello(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, int version, const uint8_t random[32], const uint8_t *session_id, size_t session_id_len, const int *cipher_suites, size_t cipher_suites_count, const uint8_t *exts, size_t exts_len)
tls_record_set_handshake_client_key_exchange_ecdhe	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_client_key_exchange_ecdhe(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, const SM2_POINT *point)
tls_record_set_handshake_client_key_exchange_ecdhe	GmSSL/src/tls12.c	/^int tls_record_set_handshake_client_key_exchange_ecdhe(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const SM2_POINT *point)
tls_record_set_handshake_client_key_exchange_pke	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_client_key_exchange_pke(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, const uint8_t *enced_pms, size_t enced_pms_len)
tls_record_set_handshake_client_key_exchange_pke	GmSSL/src/tls.c	/^int tls_record_set_handshake_client_key_exchange_pke(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t *enced_pms, size_t enced_pms_len)
tls_record_set_handshake_finished	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_finished(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, const uint8_t verify_data[12])
tls_record_set_handshake_finished	GmSSL/src/tls.c	/^int tls_record_set_handshake_finished(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, const uint8_t verify_data[12])
tls_record_set_handshake_server_hello	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_server_hello(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, int server_version, const uint8_t random[32], const uint8_t *session_id, size_t session_id_len, int cipher_suite, const uint8_t *exts, size_t exts_len)
tls_record_set_handshake_server_hello	GmSSL/src/tls.c	/^int tls_record_set_handshake_server_hello(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, int version, const uint8_t random[32], const uint8_t *session_id, size_t session_id_len, int cipher_suite, const uint8_t *exts, size_t exts_len)
tls_record_set_handshake_server_hello_done	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_server_hello_done(uint8_t *record, size_t *recordlen);$/;"	p	signature:(uint8_t *record, size_t *recordlen)
tls_record_set_handshake_server_hello_done	GmSSL/src/tls.c	/^int tls_record_set_handshake_server_hello_done(uint8_t *record, size_t *recordlen)$/;"	f	signature:(uint8_t *record, size_t *recordlen)
tls_record_set_handshake_server_key_exchange_ecdhe	GmSSL/include/gmssl/tls.h	/^int tls_record_set_handshake_server_key_exchange_ecdhe(uint8_t *record, size_t *recordlen,$/;"	p	signature:(uint8_t *record, size_t *recordlen, int curve, const SM2_POINT *point, const uint8_t *sig, size_t siglen)
tls_record_set_handshake_server_key_exchange_ecdhe	GmSSL/src/tls12.c	/^int tls_record_set_handshake_server_key_exchange_ecdhe(uint8_t *record, size_t *recordlen,$/;"	f	signature:(uint8_t *record, size_t *recordlen, int curve, const SM2_POINT *point, const uint8_t *sig, size_t siglen)
tls_record_set_version	GmSSL/include/gmssl/tls.h	/^int tls_record_set_version(uint8_t *record, int version);$/;"	p	signature:(uint8_t *record, int version)
tls_record_set_version	GmSSL/src/tls.c	/^int tls_record_set_version(uint8_t *record, int version)$/;"	f	signature:(uint8_t *record, int version)
tls_record_type_name	GmSSL/include/gmssl/tls.h	/^const char *tls_record_type_name(int type);$/;"	p	signature:(int type)
tls_record_type_name	GmSSL/src/tls_trace.c	/^const char *tls_record_type_name(int type)$/;"	f	signature:(int type)
tls_record_version	GmSSL/include/gmssl/tls.h	/^int tls_record_version(const uint8_t *record);$/;"	p	signature:(const uint8_t *record)
tls_record_version	GmSSL/src/tls.c	/^int tls_record_version(const uint8_t *record)$/;"	f	signature:(const uint8_t *record)
tls_recv	GmSSL/include/gmssl/tls.h	/^int tls_recv(TLS_CONNECT *conn, uint8_t *data, size_t *datalen); \/\/ 发送、接收的数据量以单独的接口提供$/;"	p	signature:(TLS_CONNECT *conn, uint8_t *data, size_t *datalen)
tls_recv	GmSSL/src/tls.c	/^int tls_recv(TLS_CONNECT *conn, uint8_t *data, size_t *datalen)$/;"	f	signature:(TLS_CONNECT *conn, uint8_t *data, size_t *datalen)
tls_secrets_print	GmSSL/include/gmssl/tls.h	/^int tls_secrets_print(FILE *fp,$/;"	p	signature:(FILE *fp, const uint8_t *pre_master_secret, size_t pre_master_secret_len, const uint8_t client_random[32], const uint8_t server_random[32], const uint8_t master_secret[48], const uint8_t *key_block, size_t key_block_len, int format, int indent)
tls_secrets_print	GmSSL/src/tls_trace.c	/^int tls_secrets_print(FILE *fp,$/;"	f	signature:(FILE *fp, const uint8_t *pre_master_secret, size_t pre_master_secret_len, const uint8_t client_random[32], const uint8_t server_random[32], const uint8_t master_secret[48], const uint8_t *key_block, size_t key_block_len, int format, int indent)
tls_send	GmSSL/include/gmssl/tls.h	/^int tls_send(TLS_CONNECT *conn, const uint8_t *data, size_t datalen);$/;"	p	signature:(TLS_CONNECT *conn, const uint8_t *data, size_t datalen)
tls_send	GmSSL/src/tls.c	/^int tls_send(TLS_CONNECT *conn, const uint8_t *data, size_t datalen)$/;"	f	signature:(TLS_CONNECT *conn, const uint8_t *data, size_t datalen)
tls_seq_num_incr	GmSSL/include/gmssl/tls.h	/^int tls_seq_num_incr(uint8_t seq_num[8]);$/;"	p	signature:(uint8_t seq_num[8])
tls_seq_num_incr	GmSSL/src/tls.c	/^int tls_seq_num_incr(uint8_t seq_num[8])$/;"	f	signature:(uint8_t seq_num[8])
tls_server_extensions_check	GmSSL/src/tls12.c	/^int tls_server_extensions_check(const uint8_t *exts, size_t extslen)$/;"	f	signature:(const uint8_t *exts, size_t extslen)
tls_server_hello_done_print	GmSSL/include/gmssl/tls.h	/^int tls_server_hello_done_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_server_hello_done_print	GmSSL/src/tls_trace.c	/^int tls_server_hello_done_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_server_hello_print	GmSSL/include/gmssl/tls.h	/^int tls_server_hello_print(FILE *fp, const uint8_t *server_hello, size_t len, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *server_hello, size_t len, int format, int indent)
tls_server_hello_print	GmSSL/src/tls_trace.c	/^int tls_server_hello_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_server_key_exchange_ecdhe_print	GmSSL/include/gmssl/tls.h	/^int tls_server_key_exchange_ecdhe_print(FILE *fp, const uint8_t *data, size_t datalen,$/;"	p	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_server_key_exchange_ecdhe_print	GmSSL/src/tls_trace.c	/^int tls_server_key_exchange_ecdhe_print(FILE *fp, const uint8_t *data, size_t datalen,$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_server_key_exchange_print	GmSSL/include/gmssl/tls.h	/^int tls_server_key_exchange_print(FILE *fp, const uint8_t *ske, size_t skelen, int format, int indent);$/;"	p	signature:(FILE *fp, const uint8_t *ske, size_t skelen, int format, int indent)
tls_server_key_exchange_print	GmSSL/src/tls_trace.c	/^int tls_server_key_exchange_print(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)$/;"	f	signature:(FILE *fp, const uint8_t *data, size_t datalen, int format, int indent)
tls_set_fd	GmSSL/include/gmssl/tls.h	/^int tls_set_fd(TLS_CONNECT *conn, int sock);$/;"	p	signature:(TLS_CONNECT *conn, int sock)
tls_set_fd	GmSSL/src/tls12.c	/^int tls_set_fd(TLS_CONNECT *conn, int sock)$/;"	f	signature:(TLS_CONNECT *conn, int sock)
tls_shutdown	GmSSL/include/gmssl/tls.h	/^int tls_shutdown(TLS_CONNECT *conn);$/;"	p	signature:(TLS_CONNECT *conn)
tls_shutdown	GmSSL/src/tls.c	/^int tls_shutdown(TLS_CONNECT *conn)$/;"	f	signature:(TLS_CONNECT *conn)
tls_sign_server_ecdh_params	GmSSL/include/gmssl/tls.h	/^int tls_sign_server_ecdh_params(const SM2_KEY *server_sign_key,$/;"	p	signature:(const SM2_KEY *server_sign_key, const uint8_t client_random[32], const uint8_t server_random[32], int curve, const SM2_POINT *point, uint8_t *sig, size_t *siglen)
tls_sign_server_ecdh_params	GmSSL/src/tls.c	/^int tls_sign_server_ecdh_params(const SM2_KEY *server_sign_key,$/;"	f	signature:(const SM2_KEY *server_sign_key, const uint8_t client_random[32], const uint8_t server_random[32], int curve, const SM2_POINT *point, uint8_t *sig, size_t *siglen)
tls_signature_scheme_name	GmSSL/include/gmssl/tls.h	/^const char *tls_signature_scheme_name(int scheme);$/;"	p	signature:(int scheme)
tls_signature_scheme_name	GmSSL/src/tls_trace.c	/^const char *tls_signature_scheme_name(int scheme)$/;"	f	signature:(int scheme)
tls_trace	GmSSL/include/gmssl/tls.h	733;"	d
tls_trace	GmSSL/src/debug.c	/^int tls_trace(int format, int indent, const char *str, ...)$/;"	f	signature:(int format, int indent, const char *str, ...)
tls_uint16_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint16_from_bytes(uint16_t *a, const uint8_t **in, size_t *inlen);$/;"	p	signature:(uint16_t *a, const uint8_t **in, size_t *inlen)
tls_uint16_from_bytes	GmSSL/src/tls.c	/^int tls_uint16_from_bytes(uint16_t *a, const uint8_t **in, size_t *inlen)$/;"	f	signature:(uint16_t *a, const uint8_t **in, size_t *inlen)
tls_uint16_to_bytes	GmSSL/include/gmssl/tls.h	/^void tls_uint16_to_bytes(uint16_t a, uint8_t **out, size_t *outlen);$/;"	p	signature:(uint16_t a, uint8_t **out, size_t *outlen)
tls_uint16_to_bytes	GmSSL/src/tls.c	/^void tls_uint16_to_bytes(uint16_t a, uint8_t **out, size_t *outlen)$/;"	f	signature:(uint16_t a, uint8_t **out, size_t *outlen)
tls_uint16array_copy_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint16array_copy_from_bytes(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)
tls_uint16array_copy_from_bytes	GmSSL/src/tls.c	/^int tls_uint16array_copy_from_bytes(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)
tls_uint16array_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint16array_from_bytes(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)
tls_uint16array_from_bytes	GmSSL/src/tls.c	/^int tls_uint16array_from_bytes(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)
tls_uint16array_to_bytes	GmSSL/include/gmssl/tls.h	/^void tls_uint16array_to_bytes(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen);$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)
tls_uint16array_to_bytes	GmSSL/src/tls.c	/^void tls_uint16array_to_bytes(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)$/;"	f	signature:(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)
tls_uint24_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint24_from_bytes(uint24_t *a, const uint8_t **in, size_t *inlen);$/;"	p	signature:(uint24_t *a, const uint8_t **in, size_t *inlen)
tls_uint24_from_bytes	GmSSL/src/tls.c	/^int tls_uint24_from_bytes(uint24_t *a, const uint8_t **in, size_t *inlen)$/;"	f	signature:(uint24_t *a, const uint8_t **in, size_t *inlen)
tls_uint24_to_bytes	GmSSL/include/gmssl/tls.h	/^void tls_uint24_to_bytes(uint24_t a, uint8_t **out, size_t *outlen);$/;"	p	signature:(uint24_t a, uint8_t **out, size_t *outlen)
tls_uint24_to_bytes	GmSSL/src/tls.c	/^void tls_uint24_to_bytes(uint24_t a, uint8_t **out, size_t *outlen)$/;"	f	signature:(uint24_t a, uint8_t **out, size_t *outlen)
tls_uint24array_copy_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint24array_copy_from_bytes(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)
tls_uint24array_copy_from_bytes	GmSSL/src/tls.c	/^int tls_uint24array_copy_from_bytes(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)
tls_uint24array_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint24array_from_bytes(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)
tls_uint24array_from_bytes	GmSSL/src/tls.c	/^int tls_uint24array_from_bytes(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)
tls_uint24array_to_bytes	GmSSL/include/gmssl/tls.h	/^void tls_uint24array_to_bytes(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen);$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)
tls_uint24array_to_bytes	GmSSL/src/tls.c	/^void tls_uint24array_to_bytes(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)$/;"	f	signature:(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)
tls_uint32_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint32_from_bytes(uint32_t *a, const uint8_t **in, size_t *inlen);$/;"	p	signature:(uint32_t *a, const uint8_t **in, size_t *inlen)
tls_uint32_from_bytes	GmSSL/src/tls.c	/^int tls_uint32_from_bytes(uint32_t *a, const uint8_t **in, size_t *inlen)$/;"	f	signature:(uint32_t *a, const uint8_t **in, size_t *inlen)
tls_uint32_to_bytes	GmSSL/include/gmssl/tls.h	/^void tls_uint32_to_bytes(uint32_t a, uint8_t **out, size_t *outlen);$/;"	p	signature:(uint32_t a, uint8_t **out, size_t *outlen)
tls_uint32_to_bytes	GmSSL/src/tls.c	/^void tls_uint32_to_bytes(uint32_t a, uint8_t **out, size_t *outlen)$/;"	f	signature:(uint32_t a, uint8_t **out, size_t *outlen)
tls_uint8_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint8_from_bytes(uint8_t *a, const uint8_t **in, size_t *inlen);$/;"	p	signature:(uint8_t *a, const uint8_t **in, size_t *inlen)
tls_uint8_from_bytes	GmSSL/src/tls.c	/^int tls_uint8_from_bytes(uint8_t *a, const uint8_t **in, size_t *inlen)$/;"	f	signature:(uint8_t *a, const uint8_t **in, size_t *inlen)
tls_uint8_to_bytes	GmSSL/include/gmssl/tls.h	/^void tls_uint8_to_bytes(uint8_t a, uint8_t **out, size_t *outlen);$/;"	p	signature:(uint8_t a, uint8_t **out, size_t *outlen)
tls_uint8_to_bytes	GmSSL/src/tls.c	/^void tls_uint8_to_bytes(uint8_t a, uint8_t **out, size_t *outlen)$/;"	f	signature:(uint8_t a, uint8_t **out, size_t *outlen)
tls_uint8array_copy_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint8array_copy_from_bytes(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)
tls_uint8array_copy_from_bytes	GmSSL/src/tls.c	/^int tls_uint8array_copy_from_bytes(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(uint8_t *data, size_t *datalen, size_t maxlen, const uint8_t **in, size_t *inlen)
tls_uint8array_from_bytes	GmSSL/include/gmssl/tls.h	/^int tls_uint8array_from_bytes(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)
tls_uint8array_from_bytes	GmSSL/src/tls.c	/^int tls_uint8array_from_bytes(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **data, size_t *datalen, const uint8_t **in, size_t *inlen)
tls_uint8array_to_bytes	GmSSL/include/gmssl/tls.h	/^void tls_uint8array_to_bytes(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen);$/;"	p	signature:(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)
tls_uint8array_to_bytes	GmSSL/src/tls.c	/^void tls_uint8array_to_bytes(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)$/;"	f	signature:(const uint8_t *data, size_t datalen, uint8_t **out, size_t *outlen)
tls_verify_server_ecdh_params	GmSSL/include/gmssl/tls.h	/^int tls_verify_server_ecdh_params(const SM2_KEY *server_sign_key,$/;"	p	signature:(const SM2_KEY *server_sign_key, const uint8_t client_random[32], const uint8_t server_random[32], int curve, const SM2_POINT *point, const uint8_t *sig, size_t siglen)
tls_verify_server_ecdh_params	GmSSL/src/tls.c	/^int tls_verify_server_ecdh_params(const SM2_KEY *server_sign_key,$/;"	f	signature:(const SM2_KEY *server_sign_key, const uint8_t client_random[32], const uint8_t server_random[32], int curve, const SM2_POINT *point, const uint8_t *sig, size_t siglen)
tls_version_text	GmSSL/include/gmssl/tls.h	/^const char *tls_version_text(int version);$/;"	p	signature:(int version)
tls_version_text	GmSSL/src/tls_trace.c	/^const char *tls_version_text(int version)$/;"	f	signature:(int version)
u	GmSSL/include/gmssl/block_cipher.h	/^	} u;$/;"	m	struct:BLOCK_CIPHER_KEY	typeref:union:BLOCK_CIPHER_KEY::__anon72	access:public
u	GmSSL/include/gmssl/digest.h	/^	} u;$/;"	m	struct:DIGEST_CTX	typeref:union:DIGEST_CTX::__anon51	access:public
u32	baseSM4.c	5;"	d	file:
u8	baseSM4.c	6;"	d	file:
uchr2uint	oSM4.c	/^void uchr2uint(uint8_t* in, uint32_t* out)$/;"	f	signature:(uint8_t* in, uint32_t* out)
uint24_t	GmSSL/include/gmssl/tls.h	/^typedef uint32_t uint24_t;$/;"	t
uint2uchr	oSM4.c	/^void uint2uchr(uint32_t in, uint8_t* out)$/;"	f	signature:(uint32_t in, uint8_t* out)
ukeyh	test_bs.c	/^unsigned long long ukeyh[16]={0x0000000000000000,0x2222222222222222,0x4444444444444444,0x6666666666666666,0x8888888888888888,0xAAAAAAAAAAAAAAAA,0xCCCCCCCCCCCCCCCC,0xEEEEEEEEEEEEEEEE,0xFFFFFFFFFFFFFFFF,0xDDDDDDDDDDDDDDDD,0xBBBBBBBBBBBBBBBB,0x9999999999999999,0x7777777777777777,0x5555555555555555,0x3333333333333333,0x1111111111111111};$/;"	v
ukeyl	test_bs.c	/^unsigned long long ukeyl[16]={0x1111111111111111,0x3333333333333333,0x5555555555555555,0x7777777777777777,0x9999999999999999,0xBBBBBBBBBBBBBBBB,0xDDDDDDDDDDDDDDDD,0xFFFFFFFFFFFFFFFF,0xEEEEEEEEEEEEEEEE,0xCCCCCCCCCCCCCCCC,0xAAAAAAAAAAAAAAAA,0x8888888888888888,0x6666666666666666,0x4444444444444444,0x2222222222222222,0x0000000000000000};$/;"	v
ulSymmAlgID	GmSSL/tools/sdfutil/sdf.h	/^	unsigned long ulSymmAlgID;$/;"	m	struct:SDF_ENVELOPEDKEYBLOB	access:public
update	GmSSL/include/gmssl/digest.h	/^	int (*update)(DIGEST_CTX *ctx, const uint8_t *data, size_t datalen);$/;"	m	struct:DIGEST	access:public
usage	GmSSL/tools/reqsign.c	/^static const char *usage = "usage: %s [-in file] -days num -cacert file -key file [-pass str] [-out file]\\n";$/;"	v	file:
vendor_id	GmSSL/tools/sdfutil/sdf_sansec.c	/^	unsigned int vendor_id;$/;"	m	struct:__anon3	file:	access:public
version	GmSSL/include/gmssl/tls.h	/^	int version;$/;"	m	struct:__anon29	access:public
version	GmSSL/include/gmssl/tls.h	/^	int version;$/;"	m	struct:__anon30	access:public
version_main	GmSSL/tools/gmssl.c	/^extern int version_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
version_main	GmSSL/tools/version.c	/^int version_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
volatile	GmSSL/build/CMakeFiles/3.21.3/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
x	GmSSL/include/gmssl/sm2.h	/^	uint8_t x[32];$/;"	m	struct:__anon45	access:public
x	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char x[ECCref_MAX_LEN];$/;"	m	struct:ECCCipher_st	access:public
x	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char x[ECCref_MAX_LEN];$/;"	m	struct:ECCrefPublicKey_st	access:public
x	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned char x[ECCref_MAX_LEN];$/;"	m	struct:__anon4	access:public
x1	GmSSL/src/aes.c	315;"	d	file:
x2	GmSSL/src/aes.c	/^static uint8_t x2(uint8_t a) {$/;"	f	file:	signature:(uint8_t a)
x3	GmSSL/src/aes.c	/^static uint8_t x3(uint8_t a) {$/;"	f	file:	signature:(uint8_t a)
x509_access_descriptions_print	GmSSL/src/x509_crl.c	/^int x509_access_descriptions_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_attr_type_and_value_check	GmSSL/include/gmssl/x509.h	/^int x509_attr_type_and_value_check(int oid, int tag, const uint8_t *val, size_t vlen);$/;"	p	signature:(int oid, int tag, const uint8_t *val, size_t vlen)
x509_attr_type_and_value_check	GmSSL/src/x509_cer.c	/^int x509_attr_type_and_value_check(int oid, int tag, const uint8_t *val, size_t vlen)$/;"	f	signature:(int oid, int tag, const uint8_t *val, size_t vlen)
x509_attr_type_and_value_from_der	GmSSL/include/gmssl/x509.h	/^int x509_attr_type_and_value_from_der(int *oid, int *tag, const uint8_t **val, size_t *vlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, int *tag, const uint8_t **val, size_t *vlen, const uint8_t **in, size_t *inlen)
x509_attr_type_and_value_from_der	GmSSL/src/x509_cer.c	/^int x509_attr_type_and_value_from_der(int *oid, int *tag, const uint8_t **val, size_t *vlen,$/;"	f	signature:(int *oid, int *tag, const uint8_t **val, size_t *vlen, const uint8_t **in, size_t *inlen)
x509_attr_type_and_value_print	GmSSL/include/gmssl/x509.h	/^int x509_attr_type_and_value_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_attr_type_and_value_print	GmSSL/src/x509_cer.c	/^int x509_attr_type_and_value_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_attr_type_and_value_to_der	GmSSL/include/gmssl/x509.h	/^int x509_attr_type_and_value_to_der(int oid, int tag, const uint8_t *val, size_t vlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, int tag, const uint8_t *val, size_t vlen, uint8_t **out, size_t *outlen)
x509_attr_type_and_value_to_der	GmSSL/src/x509_cer.c	/^int x509_attr_type_and_value_to_der(int oid, int tag, const uint8_t *val, size_t vlen,$/;"	f	signature:(int oid, int tag, const uint8_t *val, size_t vlen, uint8_t **out, size_t *outlen)
x509_attribute_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_attribute_from_der($/;"	p	signature:( int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **values, size_t *values_len, const uint8_t **in, size_t *inlen)
x509_attribute_from_der	GmSSL/src/x509_ext.c	/^int x509_attribute_from_der($/;"	f	signature:( int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **values, size_t *values_len, const uint8_t **in, size_t *inlen)
x509_attribute_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_attribute_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_attribute_print	GmSSL/src/x509_ext.c	/^int x509_attribute_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_attribute_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_attribute_to_der($/;"	p	signature:( const uint32_t *nodes, size_t nodes_cnt, const uint8_t *values, size_t values_len, uint8_t **out, size_t *outlen)
x509_attribute_to_der	GmSSL/src/x509_ext.c	/^int x509_attribute_to_der($/;"	f	signature:( const uint32_t *nodes, size_t nodes_cnt, const uint8_t *values, size_t values_len, uint8_t **out, size_t *outlen)
x509_attributes_add_attribute	GmSSL/include/gmssl/x509_ext.h	/^int x509_attributes_add_attribute(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	p	signature:(uint8_t *d, size_t *dlen, size_t maxlen, const uint32_t *nodes, size_t nodes_cnt, const uint8_t *values, size_t values_len)
x509_attributes_from_der	GmSSL/include/gmssl/x509_ext.h	385;"	d
x509_attributes_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_attributes_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_attributes_print	GmSSL/src/x509_ext.c	/^int x509_attributes_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_attributes_to_der	GmSSL/include/gmssl/x509_ext.h	384;"	d
x509_authority_key_identifier_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_authority_key_identifier_from_der($/;"	p	signature:( const uint8_t **keyid, size_t *keyid_len, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial, size_t *serial_len, const uint8_t **in, size_t *inlen)
x509_authority_key_identifier_from_der	GmSSL/src/x509_ext.c	/^int x509_authority_key_identifier_from_der($/;"	f	signature:( const uint8_t **keyid, size_t *keyid_len, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial, size_t *serial_len, const uint8_t **in, size_t *inlen)
x509_authority_key_identifier_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_authority_key_identifier_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_authority_key_identifier_print	GmSSL/src/x509_ext.c	/^int x509_authority_key_identifier_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_authority_key_identifier_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_authority_key_identifier_to_der($/;"	p	signature:( const uint8_t *keyid, size_t keyid_len, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len, uint8_t **out, size_t *outlen)
x509_authority_key_identifier_to_der	GmSSL/src/x509_ext.c	/^int x509_authority_key_identifier_to_der($/;"	f	signature:( const uint8_t *keyid, size_t keyid_len, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len, uint8_t **out, size_t *outlen)
x509_basic_constraints_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_basic_constraints_from_der(int *ca, int *path_len_cons, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *ca, int *path_len_cons, const uint8_t **in, size_t *inlen)
x509_basic_constraints_from_der	GmSSL/src/x509_ext.c	/^int x509_basic_constraints_from_der(int *ca, int *path_len_cons, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *ca, int *path_len_cons, const uint8_t **in, size_t *inlen)
x509_basic_constraints_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_basic_constraints_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_basic_constraints_print	GmSSL/src/x509_ext.c	/^int x509_basic_constraints_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_basic_constraints_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_basic_constraints_to_der(int ca, int path_len_cons, uint8_t **out, size_t *outlen);$/;"	p	signature:(int ca, int path_len_cons, uint8_t **out, size_t *outlen)
x509_basic_constraints_to_der	GmSSL/src/x509_ext.c	/^int x509_basic_constraints_to_der(int ca, int path_len_cons, uint8_t **out, size_t *outlen)$/;"	f	signature:(int ca, int path_len_cons, uint8_t **out, size_t *outlen)
x509_cert_from_der	GmSSL/include/gmssl/x509.h	/^int x509_cert_from_der(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen)
x509_cert_from_der	GmSSL/src/x509_cer.c	/^int x509_cert_from_der(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen)
x509_cert_from_pem	GmSSL/include/gmssl/x509.h	/^int x509_cert_from_pem(uint8_t *a, size_t *alen, size_t maxlen, FILE *fp);$/;"	p	signature:(uint8_t *a, size_t *alen, size_t maxlen, FILE *fp)
x509_cert_from_pem	GmSSL/src/x509_cer.c	/^int x509_cert_from_pem(uint8_t *a, size_t *alen, size_t maxlen, FILE *fp)$/;"	f	signature:(uint8_t *a, size_t *alen, size_t maxlen, FILE *fp)
x509_cert_from_pem_by_index	GmSSL/include/gmssl/x509.h	/^int x509_cert_from_pem_by_index(uint8_t *a, size_t *alen, size_t maxlen, int index, FILE *fp);$/;"	p	signature:(uint8_t *a, size_t *alen, size_t maxlen, int index, FILE *fp)
x509_cert_from_pem_by_index	GmSSL/src/x509_cer.c	/^int x509_cert_from_pem_by_index(uint8_t *a, size_t *alen, size_t maxlen, int index, FILE *fp)$/;"	f	signature:(uint8_t *a, size_t *alen, size_t maxlen, int index, FILE *fp)
x509_cert_from_pem_by_subject	GmSSL/include/gmssl/x509.h	/^int x509_cert_from_pem_by_subject(uint8_t *a, size_t *alen, size_t maxlen, const uint8_t *name, size_t namelen, FILE *fp);$/;"	p	signature:(uint8_t *a, size_t *alen, size_t maxlen, const uint8_t *name, size_t namelen, FILE *fp)
x509_cert_from_pem_by_subject	GmSSL/src/x509_cer.c	/^int x509_cert_from_pem_by_subject(uint8_t *a, size_t *alen, size_t maxlen, const uint8_t *name, size_t namelen, FILE *fp)$/;"	f	signature:(uint8_t *a, size_t *alen, size_t maxlen, const uint8_t *name, size_t namelen, FILE *fp)
x509_cert_get_details	GmSSL/include/gmssl/x509.h	/^int x509_cert_get_details(const uint8_t *a, size_t alen,$/;"	p	signature:(const uint8_t *a, size_t alen, int *version, const uint8_t **serial_number, size_t *serial_number_len, int *inner_signature_algor, const uint8_t **issuer, size_t *issuer_len, time_t *not_before, time_t *not_after, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **issuer_unique_id, size_t *issuer_unique_id_len, const uint8_t **subject_unique_id, size_t *subject_unique_id_len, const uint8_t **extensions, size_t *extensions_len, int *signature_algor, const uint8_t **signature, size_t *signature_len)
x509_cert_get_details	GmSSL/src/x509_cer.c	/^int x509_cert_get_details(const uint8_t *a, size_t alen,$/;"	f	signature:(const uint8_t *a, size_t alen, int *version, const uint8_t **serial_number, size_t *serial_number_len, int *inner_signature_algor, const uint8_t **issuer, size_t *issuer_len, time_t *not_before, time_t *not_after, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **issuer_unique_id, size_t *issuer_unique_id_len, const uint8_t **subject_unique_id, size_t *subject_unique_id_len, const uint8_t **extensions, size_t *extensions_len, int *signature_algor, const uint8_t **signature, size_t *signature_len)
x509_cert_get_issuer	GmSSL/include/gmssl/x509.h	/^int x509_cert_get_issuer(const uint8_t *a, size_t alen, const uint8_t **name, size_t *namelen);$/;"	p	signature:(const uint8_t *a, size_t alen, const uint8_t **name, size_t *namelen)
x509_cert_get_issuer	GmSSL/src/x509_cer.c	/^int x509_cert_get_issuer(const uint8_t *a, size_t alen, const uint8_t **d, size_t *dlen)$/;"	f	signature:(const uint8_t *a, size_t alen, const uint8_t **d, size_t *dlen)
x509_cert_get_issuer_and_serial_number	GmSSL/include/gmssl/x509.h	/^int x509_cert_get_issuer_and_serial_number(const uint8_t *a, size_t alen,$/;"	p	signature:(const uint8_t *a, size_t alen, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial_number, size_t *serial_number_len)
x509_cert_get_issuer_and_serial_number	GmSSL/src/x509_cer.c	/^int x509_cert_get_issuer_and_serial_number(const uint8_t *a, size_t alen,$/;"	f	signature:(const uint8_t *a, size_t alen, const uint8_t **issuer, size_t *issuer_len, const uint8_t **serial_number, size_t *serial_number_len)
x509_cert_get_subject	GmSSL/include/gmssl/x509.h	/^int x509_cert_get_subject(const uint8_t *a, size_t alen, const uint8_t **subj, size_t *subj_len);$/;"	p	signature:(const uint8_t *a, size_t alen, const uint8_t **subj, size_t *subj_len)
x509_cert_get_subject	GmSSL/src/x509_cer.c	/^int x509_cert_get_subject(const uint8_t *a, size_t alen, const uint8_t **d, size_t *dlen)$/;"	f	signature:(const uint8_t *a, size_t alen, const uint8_t **d, size_t *dlen)
x509_cert_get_subject_public_key	GmSSL/include/gmssl/x509.h	/^int x509_cert_get_subject_public_key(const uint8_t *a, size_t alen, SM2_KEY *public_key);$/;"	p	signature:(const uint8_t *a, size_t alen, SM2_KEY *public_key)
x509_cert_get_subject_public_key	GmSSL/src/x509_cer.c	/^int x509_cert_get_subject_public_key(const uint8_t *a, size_t alen, SM2_KEY *public_key)$/;"	f	signature:(const uint8_t *a, size_t alen, SM2_KEY *public_key)
x509_cert_list_from_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_cert_list_from_der(const uint8_t **tbs_crl, size_t *tbs_crl_len,$/;"	p	signature:(const uint8_t **tbs_crl, size_t *tbs_crl_len, int *signature_algor, const uint8_t **sig, size_t *siglen, const uint8_t **in, size_t *inlen)
x509_cert_list_from_der	GmSSL/src/x509_crl.c	/^int x509_cert_list_from_der(const uint8_t **tbs_crl, size_t *tbs_crl_len,$/;"	f	signature:(const uint8_t **tbs_crl, size_t *tbs_crl_len, int *signature_algor, const uint8_t **sig, size_t *siglen, const uint8_t **in, size_t *inlen)
x509_cert_list_print	GmSSL/include/gmssl/x509_crl.h	/^int x509_cert_list_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_cert_list_print	GmSSL/src/x509_crl.c	/^int x509_cert_list_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_cert_list_to_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_cert_list_to_der(const uint8_t *tbs_crl, size_t tbs_crl_len,$/;"	p	signature:(const uint8_t *tbs_crl, size_t tbs_crl_len, int signature_algor, const uint8_t *sig, size_t siglen, uint8_t **out, size_t *outlen)
x509_cert_list_to_der	GmSSL/src/x509_crl.c	/^int x509_cert_list_to_der(const uint8_t *tbs_crl, size_t tbs_crl_len,$/;"	f	signature:(const uint8_t *tbs_crl, size_t tbs_crl_len, int signature_algor, const uint8_t *sig, size_t siglen, uint8_t **out, size_t *outlen)
x509_cert_policy_id_from_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_cert_policy_id_from_der(int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen)
x509_cert_policy_id_from_der	GmSSL/src/x509_oid.c	/^int x509_cert_policy_id_from_der(int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen)
x509_cert_policy_id_from_name	GmSSL/include/gmssl/x509_oid.h	/^int x509_cert_policy_id_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_cert_policy_id_from_name	GmSSL/src/x509_oid.c	/^int x509_cert_policy_id_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_cert_policy_id_name	GmSSL/include/gmssl/x509_oid.h	/^char *x509_cert_policy_id_name(int oid);$/;"	p	signature:(int oid)
x509_cert_policy_id_name	GmSSL/src/x509_oid.c	/^char *x509_cert_policy_id_name(int oid)$/;"	f	signature:(int oid)
x509_cert_policy_id_to_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_cert_policy_id_to_der(int oid, const uint32_t *nodes, size_t nodes_cnt, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, const uint32_t *nodes, size_t nodes_cnt, uint8_t **out, size_t *outlen)
x509_cert_policy_id_to_der	GmSSL/src/x509_oid.c	/^int x509_cert_policy_id_to_der(int oid, const uint32_t *nodes, size_t nodes_cnt, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, const uint32_t *nodes, size_t nodes_cnt, uint8_t **out, size_t *outlen)
x509_cert_print	GmSSL/include/gmssl/x509.h	/^int x509_cert_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
x509_cert_print	GmSSL/src/x509_cer.c	/^int x509_cert_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
x509_cert_sign	GmSSL/include/gmssl/x509.h	/^int x509_cert_sign($/;"	p	signature:( uint8_t *cert, size_t *certlen, size_t maxlen, int version, const uint8_t *serial, size_t serial_len, int signature_algor, const uint8_t *issuer, size_t issuer_len, time_t not_before, time_t not_after, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *issuer_unique_id, size_t issuer_unique_id_len, const uint8_t *subject_unique_id, size_t subject_unique_id_len, const uint8_t *exts, size_t exts_len, const SM2_KEY *sign_key, const char *signer_id, size_t signer_id_len)
x509_cert_sign	GmSSL/src/x509_cer.c	/^int x509_cert_sign($/;"	f	signature:( uint8_t *cert, size_t *certlen, size_t maxlen, int version, const uint8_t *serial, size_t serial_len, int signature_algor, const uint8_t *issuer, size_t issuer_len, time_t not_before, time_t not_after, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *issuer_unique_id, size_t issuer_unique_id_len, const uint8_t *subject_unique_id, size_t subject_unique_id_len, const uint8_t *exts, size_t exts_len, const SM2_KEY *sign_key, const char *signer_id, size_t signer_id_len)
x509_cert_to_der	GmSSL/include/gmssl/x509.h	/^int x509_cert_to_der(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen);$/;"	p	signature:(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)
x509_cert_to_der	GmSSL/src/x509_cer.c	/^int x509_cert_to_der(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)$/;"	f	signature:(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)
x509_cert_to_pem	GmSSL/include/gmssl/x509.h	/^int x509_cert_to_pem(const uint8_t *a, size_t alen, FILE *fp);$/;"	p	signature:(const uint8_t *a, size_t alen, FILE *fp)
x509_cert_to_pem	GmSSL/src/x509_cer.c	/^int x509_cert_to_pem(const uint8_t *a, size_t alen, FILE *fp)$/;"	f	signature:(const uint8_t *a, size_t alen, FILE *fp)
x509_cert_verify	GmSSL/include/gmssl/x509.h	/^int x509_cert_verify(const uint8_t *a, size_t alen, const SM2_KEY *pub_key,$/;"	p	signature:(const uint8_t *a, size_t alen, const SM2_KEY *pub_key, const char *signer_id, size_t signer_id_len)
x509_cert_verify	GmSSL/src/x509_cer.c	/^int x509_cert_verify(const uint8_t *a, size_t alen,$/;"	f	signature:(const uint8_t *a, size_t alen, const SM2_KEY *pub_key, const char *signer_id, size_t signer_id_len)
x509_cert_verify_by_ca_cert	GmSSL/include/gmssl/x509.h	/^int x509_cert_verify_by_ca_cert(const uint8_t *a, size_t alen, const uint8_t *cacert, size_t cacertlen,$/;"	p	signature:(const uint8_t *a, size_t alen, const uint8_t *cacert, size_t cacertlen, const char *signer_id, size_t signer_id_len)
x509_cert_verify_by_ca_cert	GmSSL/src/x509_cer.c	/^int x509_cert_verify_by_ca_cert(const uint8_t *a, size_t alen,$/;"	f	signature:(const uint8_t *a, size_t alen, const uint8_t *cacert, size_t cacertlen, const char *signer_id, size_t signer_id_len)
x509_certificate_from_der	GmSSL/include/gmssl/x509.h	/^int x509_certificate_from_der($/;"	p	signature:( const uint8_t **tbs, size_t *tbslen, int *signature_algor, const uint8_t **sig, size_t *siglen, const uint8_t **in, size_t *inlen)
x509_certificate_from_der	GmSSL/src/x509_cer.c	/^int x509_certificate_from_der($/;"	f	signature:( const uint8_t **tbs, size_t *tbslen, int *signature_algor, const uint8_t **sig, size_t *siglen, const uint8_t **in, size_t *inlen)
x509_certificate_policies_add_policy_information	GmSSL/include/gmssl/x509_ext.h	/^int x509_certificate_policies_add_policy_information(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	p	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int policy_oid, const uint32_t *policy_nodes, size_t policy_nodes_cnt, const uint8_t *qualifiers, size_t qualifiers_len)
x509_certificate_policies_add_policy_information	GmSSL/src/x509_ext.c	/^int x509_certificate_policies_add_policy_information(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int policy_oid, const uint32_t *policy_nodes, size_t policy_nodes_cnt, const uint8_t *qualifiers, size_t qualifiers_len)
x509_certificate_policies_from_der	GmSSL/include/gmssl/x509_ext.h	326;"	d
x509_certificate_policies_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_certificate_policies_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_certificate_policies_print	GmSSL/src/x509_ext.c	/^int x509_certificate_policies_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_certificate_policies_to_der	GmSSL/include/gmssl/x509_ext.h	325;"	d
x509_certificate_print	GmSSL/include/gmssl/x509.h	/^int x509_certificate_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_certificate_print	GmSSL/src/x509_cer.c	/^int x509_certificate_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_certificate_to_der	GmSSL/include/gmssl/x509.h	/^int x509_certificate_to_der($/;"	p	signature:( const uint8_t *tbs, size_t tbslen, int signature_algor, const uint8_t *sig, size_t siglen, uint8_t **out, size_t *outlen)
x509_certificate_to_der	GmSSL/src/x509_cer.c	/^int x509_certificate_to_der($/;"	f	signature:( const uint8_t *tbs, size_t tbslen, int signature_algor, const uint8_t *sig, size_t siglen, uint8_t **out, size_t *outlen)
x509_certs_from_pem	GmSSL/include/gmssl/x509.h	/^int x509_certs_from_pem(const uint8_t *d, size_t *dlen, size_t maxlen, FILE *fp);$/;"	p	signature:(const uint8_t *d, size_t *dlen, size_t maxlen, FILE *fp)
x509_certs_from_pem	GmSSL/src/x509_cer.c	/^int x509_certs_from_pem(const uint8_t *d, size_t *dlen, size_t maxlen, FILE *fp)$/;"	f	signature:(const uint8_t *d, size_t *dlen, size_t maxlen, FILE *fp)
x509_certs_get_cert_by_index	GmSSL/include/gmssl/x509.h	/^int x509_certs_get_cert_by_index(const uint8_t *d, size_t dlen, int index, const uint8_t **cert, size_t *certlen);$/;"	p	signature:(const uint8_t *d, size_t dlen, int index, const uint8_t **cert, size_t *certlen)
x509_certs_get_cert_by_index	GmSSL/src/x509_cer.c	/^int x509_certs_get_cert_by_index(const uint8_t *d, size_t dlen, int index, const uint8_t **cert, size_t *certlen)$/;"	f	signature:(const uint8_t *d, size_t dlen, int index, const uint8_t **cert, size_t *certlen)
x509_certs_get_cert_by_issuer_and_serial_number	GmSSL/include/gmssl/x509.h	/^int x509_certs_get_cert_by_issuer_and_serial_number($/;"	p	signature:( const uint8_t *certs, size_t certs_len, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len, const uint8_t **cert, size_t *cert_len)
x509_certs_get_cert_by_issuer_and_serial_number	GmSSL/src/x509_cer.c	/^int x509_certs_get_cert_by_issuer_and_serial_number($/;"	f	signature:( const uint8_t *certs, size_t certs_len, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len, const uint8_t **cert, size_t *cert_len)
x509_certs_get_cert_by_subject	GmSSL/include/gmssl/x509.h	/^int x509_certs_get_cert_by_subject(const uint8_t *d, size_t dlen, const uint8_t *subject, size_t subject_len, const uint8_t **cert, size_t *certlen);$/;"	p	signature:(const uint8_t *d, size_t dlen, const uint8_t *subject, size_t subject_len, const uint8_t **cert, size_t *certlen)
x509_certs_get_cert_by_subject	GmSSL/src/x509_cer.c	/^int x509_certs_get_cert_by_subject(const uint8_t *d, size_t dlen,$/;"	f	signature:(const uint8_t *d, size_t dlen, const uint8_t *subject, size_t subject_len, const uint8_t **cert, size_t *certlen)
x509_certs_get_count	GmSSL/include/gmssl/x509.h	/^int x509_certs_get_count(const uint8_t *d, size_t dlen, size_t *cnt);$/;"	p	signature:(const uint8_t *d, size_t dlen, size_t *cnt)
x509_certs_get_count	GmSSL/src/x509_cer.c	/^int x509_certs_get_count(const uint8_t *d, size_t dlen, size_t *cnt)$/;"	f	signature:(const uint8_t *d, size_t dlen, size_t *cnt)
x509_certs_print	GmSSL/include/gmssl/x509.h	/^int x509_certs_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_certs_print	GmSSL/src/x509_cer.c	/^int x509_certs_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_certs_to_pem	GmSSL/include/gmssl/x509.h	/^int x509_certs_to_pem(const uint8_t *d, size_t dlen, FILE *fp);$/;"	p	signature:(const uint8_t *d, size_t dlen, FILE *fp)
x509_certs_to_pem	GmSSL/src/x509_cer.c	/^int x509_certs_to_pem(const uint8_t *d, size_t dlen, FILE *fp)$/;"	f	signature:(const uint8_t *d, size_t dlen, FILE *fp)
x509_crl_distribution_points_from_der	GmSSL/include/gmssl/x509_ext.h	539;"	d
x509_crl_distribution_points_print	GmSSL/include/gmssl/x509_ext.h	540;"	d
x509_crl_distribution_points_to_der	GmSSL/include/gmssl/x509_ext.h	538;"	d
x509_crl_entry_ext_id_from_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_entry_ext_id_from_der(int *oid, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_crl_entry_ext_id_from_der	GmSSL/src/x509_crl.c	/^int x509_crl_entry_ext_id_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_crl_entry_ext_id_from_name	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_entry_ext_id_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_crl_entry_ext_id_from_name	GmSSL/src/x509_crl.c	/^int x509_crl_entry_ext_id_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_crl_entry_ext_id_name	GmSSL/include/gmssl/x509_crl.h	/^const char *x509_crl_entry_ext_id_name(int oid);$/;"	p	signature:(int oid)
x509_crl_entry_ext_id_name	GmSSL/src/x509_crl.c	/^const char *x509_crl_entry_ext_id_name(int oid)$/;"	f	signature:(int oid)
x509_crl_entry_ext_id_to_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_entry_ext_id_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_crl_entry_ext_id_to_der	GmSSL/src/x509_crl.c	/^int x509_crl_entry_ext_id_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_crl_entry_ext_print	GmSSL/src/x509_crl.c	/^int x509_crl_entry_ext_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_crl_entry_exts	GmSSL/src/x509_crl.c	/^static const ASN1_OID_INFO x509_crl_entry_exts[] = {$/;"	v	file:
x509_crl_entry_exts_add_certificate_issuer	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_entry_exts_add_certificate_issuer($/;"	p	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_crl_entry_exts_add_certificate_issuer	GmSSL/src/x509_crl.c	/^int x509_crl_entry_exts_add_certificate_issuer(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_crl_entry_exts_add_invalidity_date	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_entry_exts_add_invalidity_date($/;"	p	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, time_t tv)
x509_crl_entry_exts_add_invalidity_date	GmSSL/src/x509_crl.c	/^int x509_crl_entry_exts_add_invalidity_date(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, time_t tv)
x509_crl_entry_exts_add_reason	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_entry_exts_add_reason($/;"	p	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int reason)
x509_crl_entry_exts_add_reason	GmSSL/src/x509_crl.c	/^int x509_crl_entry_exts_add_reason(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int reason)
x509_crl_entry_exts_count	GmSSL/src/x509_crl.c	/^static const int x509_crl_entry_exts_count =$/;"	v	file:
x509_crl_entry_exts_from_der	GmSSL/include/gmssl/x509_crl.h	104;"	d
x509_crl_entry_exts_print	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_entry_exts_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_crl_entry_exts_print	GmSSL/src/x509_crl.c	/^int x509_crl_entry_exts_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_crl_entry_exts_to_der	GmSSL/include/gmssl/x509_crl.h	103;"	d
x509_crl_ext_id_from_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_ext_id_from_der(int *oid, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_crl_ext_id_from_der	GmSSL/src/x509_crl.c	/^int x509_crl_ext_id_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_crl_ext_id_from_name	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_ext_id_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_crl_ext_id_from_name	GmSSL/src/x509_crl.c	/^int x509_crl_ext_id_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_crl_ext_id_name	GmSSL/include/gmssl/x509_crl.h	/^const char *x509_crl_ext_id_name(int oid);$/;"	p	signature:(int oid)
x509_crl_ext_id_name	GmSSL/src/x509_crl.c	/^const char *x509_crl_ext_id_name(int oid)$/;"	f	signature:(int oid)
x509_crl_ext_id_to_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_ext_id_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_crl_ext_id_to_der	GmSSL/src/x509_crl.c	/^int x509_crl_ext_id_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_crl_ext_print	GmSSL/src/x509_crl.c	/^int x509_crl_ext_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_crl_exts	GmSSL/src/x509_crl.c	/^static const ASN1_OID_INFO x509_crl_exts[] = {$/;"	v	file:
x509_crl_exts_add_authority_key_identifier	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_exts_add_authority_key_identifier($/;"	p	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *keyid, size_t keyid_len, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len)
x509_crl_exts_add_authority_key_identifier	GmSSL/src/x509_crl.c	/^int x509_crl_exts_add_authority_key_identifier($/;"	f	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *keyid, size_t keyid_len, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len)
x509_crl_exts_add_crl_number	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_exts_add_crl_number($/;"	p	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int num)
x509_crl_exts_add_crl_number	GmSSL/src/x509_crl.c	/^int x509_crl_exts_add_crl_number($/;"	f	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int num)
x509_crl_exts_add_delta_crl_indicator	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_exts_add_delta_crl_indicator($/;"	p	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int num)
x509_crl_exts_add_delta_crl_indicator	GmSSL/src/x509_crl.c	/^int x509_crl_exts_add_delta_crl_indicator($/;"	f	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int num)
x509_crl_exts_add_issuer_alt_name	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_exts_add_issuer_alt_name($/;"	p	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_crl_exts_add_issuer_alt_name	GmSSL/src/x509_crl.c	/^int x509_crl_exts_add_issuer_alt_name($/;"	f	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_crl_exts_add_issuing_distribution_point	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_exts_add_issuing_distribution_point($/;"	p	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *dist_point, size_t dist_point_len, int only_contains_user_certs, int only_contains_ca_certs, int only_some_reasons, int indirect_crl, int only_contains_attr_certs)
x509_crl_exts_add_issuing_distribution_point	GmSSL/src/x509_crl.c	/^int x509_crl_exts_add_issuing_distribution_point($/;"	f	signature:( uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *dist_point, size_t dist_point_len, int only_contains_user_certs, int only_contains_ca_certs, int only_some_reasons, int indirect_crl, int only_contains_attr_certs)
x509_crl_exts_count	GmSSL/src/x509_crl.c	/^static const int x509_crl_exts_count =$/;"	v	file:
x509_crl_exts_from_der	GmSSL/include/gmssl/x509_crl.h	210;"	d
x509_crl_exts_print	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_exts_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_crl_exts_print	GmSSL/src/x509_crl.c	/^int x509_crl_exts_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_crl_exts_to_der	GmSSL/include/gmssl/x509_crl.h	209;"	d
x509_crl_find_revoked_cert_by_serial_number	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_find_revoked_cert_by_serial_number(const uint8_t *a, size_t alen,$/;"	p	signature:(const uint8_t *a, size_t alen, const uint8_t *serial, size_t serial_len, time_t *revoke_date, const uint8_t **entry_exts, size_t *entry_exts_len)
x509_crl_find_revoked_cert_by_serial_number	GmSSL/src/x509_crl.c	/^int x509_crl_find_revoked_cert_by_serial_number(const uint8_t *a, size_t alen,$/;"	f	signature:(const uint8_t *a, size_t alen, const uint8_t *serial, size_t serial_len, time_t *revoke_date, const uint8_t **entry_exts, size_t *entry_exts_len)
x509_crl_from_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_from_der(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen)
x509_crl_from_der	GmSSL/src/x509_crl.c	/^int x509_crl_from_der(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(const uint8_t **a, size_t *alen, const uint8_t **in, size_t *inlen)
x509_crl_from_pem	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_from_pem(uint8_t *a, size_t *alen, size_t maxlen, FILE *fp);$/;"	p	signature:(uint8_t *a, size_t *alen, size_t maxlen, FILE *fp)
x509_crl_from_pem	GmSSL/src/x509_crl.c	/^int x509_crl_from_pem(uint8_t *a, size_t *alen, size_t maxlen, FILE *fp)$/;"	f	signature:(uint8_t *a, size_t *alen, size_t maxlen, FILE *fp)
x509_crl_get_details	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_get_details(const uint8_t *crl, size_t crl_len,$/;"	p	signature:(const uint8_t *crl, size_t crl_len, int *version, const uint8_t **issuer, size_t *issuer_len, time_t *this_update, time_t *next_update, const uint8_t **revoked_certs, size_t *revoked_certs_len, const uint8_t **exts, size_t *exts_len, int *signature_algor, const uint8_t **sig, size_t *siglen)
x509_crl_get_details	GmSSL/src/x509_crl.c	/^int x509_crl_get_details(const uint8_t *crl, size_t crl_len,$/;"	f	signature:(const uint8_t *crl, size_t crl_len, int *opt_version, const uint8_t **opt_issuer, size_t *opt_issuer_len, time_t *opt_this_update, time_t *opt_next_update, const uint8_t **opt_revoked_certs, size_t *opt_revoked_certs_len, const uint8_t **opt_exts, size_t *opt_exts_len, int *opt_signature_algor, const uint8_t **opt_sig, size_t *opt_siglen)
x509_crl_print	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
x509_crl_print	GmSSL/src/x509_crl.c	/^int x509_crl_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *a, size_t alen)
x509_crl_reason_from_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_reason_from_der(int *reason, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *reason, const uint8_t **in, size_t *inlen)
x509_crl_reason_from_der	GmSSL/src/x509_crl.c	/^int x509_crl_reason_from_der(int *reason, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *reason, const uint8_t **in, size_t *inlen)
x509_crl_reason_from_name	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_reason_from_name(int *reason, const char *name);$/;"	p	signature:(int *reason, const char *name)
x509_crl_reason_from_name	GmSSL/src/x509_crl.c	/^int x509_crl_reason_from_name(int *reason, const char *name)$/;"	f	signature:(int *reason, const char *name)
x509_crl_reason_name	GmSSL/include/gmssl/x509_crl.h	/^const char *x509_crl_reason_name(int reason);$/;"	p	signature:(int reason)
x509_crl_reason_name	GmSSL/src/x509_crl.c	/^const char *x509_crl_reason_name(int reason)$/;"	f	signature:(int reason)
x509_crl_reason_names	GmSSL/src/x509_crl.c	/^static const char *x509_crl_reason_names[] = {$/;"	v	file:
x509_crl_reason_names_count	GmSSL/src/x509_crl.c	/^static const size_t x509_crl_reason_names_count =$/;"	v	file:
x509_crl_reason_to_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_reason_to_der(int reason, uint8_t **out, size_t *outlen);$/;"	p	signature:(int reason, uint8_t **out, size_t *outlen)
x509_crl_reason_to_der	GmSSL/src/x509_crl.c	/^int x509_crl_reason_to_der(int reason, uint8_t **out, size_t *outlen)$/;"	f	signature:(int reason, uint8_t **out, size_t *outlen)
x509_crl_sign	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_sign(uint8_t *crl, size_t *crl_len,$/;"	p	signature:(uint8_t *crl, size_t *crl_len, int version, int signature_algor, const uint8_t *issuer, size_t issuer_len, time_t this_update, time_t next_update, const uint8_t *revoked_certs, size_t revoked_certs_len, const uint8_t *exts, size_t exts_len, const SM2_KEY *sign_key, const char *signer_id, size_t signer_id_len)
x509_crl_to_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_to_der(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen);$/;"	p	signature:(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)
x509_crl_to_der	GmSSL/src/x509_crl.c	/^int x509_crl_to_der(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)$/;"	f	signature:(const uint8_t *a, size_t alen, uint8_t **out, size_t *outlen)
x509_crl_to_pem	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_to_pem(const uint8_t *a, size_t alen, FILE *fp);$/;"	p	signature:(const uint8_t *a, size_t alen, FILE *fp)
x509_crl_to_pem	GmSSL/src/x509_crl.c	/^int x509_crl_to_pem(const uint8_t *a, size_t alen, FILE *fp)$/;"	f	signature:(const uint8_t *a, size_t alen, FILE *fp)
x509_crl_verify	GmSSL/include/gmssl/x509_crl.h	/^int x509_crl_verify(const uint8_t *a, size_t alen,$/;"	p	signature:(const uint8_t *a, size_t alen, const SM2_KEY *sign_pub_key, const char *signer_id, size_t signer_id_len)
x509_crl_verify	GmSSL/src/x509_crl.c	/^int x509_crl_verify(const uint8_t *a, size_t alen,$/;"	f	signature:(const uint8_t *a, size_t alen, const SM2_KEY *pub_key, const char *signer_id, size_t signer_id_len)
x509_crls_print	GmSSL/include/gmssl/x509_crl.h	/^int x509_crls_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_crls_print	GmSSL/src/x509_crl.c	/^int x509_crls_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_digest_algor_from_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_digest_algor_from_der(int *oid, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_digest_algor_from_der	GmSSL/src/x509_alg.c	/^int x509_digest_algor_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_digest_algor_from_name	GmSSL/include/gmssl/x509_alg.h	/^int x509_digest_algor_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_digest_algor_from_name	GmSSL/src/x509_alg.c	/^int x509_digest_algor_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_digest_algor_name	GmSSL/include/gmssl/x509_alg.h	/^const char *x509_digest_algor_name(int oid);$/;"	p	signature:(int oid)
x509_digest_algor_name	GmSSL/src/x509_alg.c	/^const char *x509_digest_algor_name(int oid)$/;"	f	signature:(int oid)
x509_digest_algor_print	GmSSL/include/gmssl/x509_alg.h	/^int x509_digest_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_digest_algor_print	GmSSL/src/x509_alg.c	/^int x509_digest_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_digest_algor_to_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_digest_algor_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_digest_algor_to_der	GmSSL/src/x509_alg.c	/^int x509_digest_algor_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_digest_algors	GmSSL/src/x509_alg.c	/^static const ASN1_OID_INFO x509_digest_algors[] = {$/;"	v	file:
x509_digest_algors_count	GmSSL/src/x509_alg.c	/^static const int x509_digest_algors_count =$/;"	v	file:
x509_directory_name_check	GmSSL/include/gmssl/x509_str.h	/^int x509_directory_name_check(int tag, const uint8_t *d, size_t dlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t dlen)
x509_directory_name_check	GmSSL/src/x509_str.c	/^int x509_directory_name_check(int tag, const uint8_t *d, size_t dlen)$/;"	f	signature:(int tag, const uint8_t *d, size_t dlen)
x509_directory_name_check_ex	GmSSL/include/gmssl/x509_str.h	/^int x509_directory_name_check_ex(int tag, const uint8_t *d, size_t dlen, size_t minlen, size_t maxlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t dlen, size_t minlen, size_t maxlen)
x509_directory_name_check_ex	GmSSL/src/x509_str.c	/^int x509_directory_name_check_ex(int tag, const uint8_t *d, size_t dlen, size_t minlen, size_t maxlen)$/;"	f	signature:(int tag, const uint8_t *d, size_t dlen, size_t minlen, size_t maxlen)
x509_directory_name_from_der	GmSSL/include/gmssl/x509_str.h	/^int x509_directory_name_from_der(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_directory_name_from_der	GmSSL/src/x509_str.c	/^int x509_directory_name_from_der(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_directory_name_print	GmSSL/include/gmssl/x509_str.h	/^int x509_directory_name_print(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)
x509_directory_name_print	GmSSL/src/x509_str.c	/^int x509_directory_name_print(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)
x509_directory_name_to_der	GmSSL/include/gmssl/x509_str.h	/^int x509_directory_name_to_der(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_directory_name_to_der	GmSSL/src/x509_str.c	/^int x509_directory_name_to_der(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_display_text_check	GmSSL/include/gmssl/x509_str.h	/^int x509_display_text_check(int tag, const uint8_t *d, size_t dlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t dlen)
x509_display_text_check	GmSSL/src/x509_str.c	/^int x509_display_text_check(int tag, const uint8_t *d, size_t dlen)$/;"	f	signature:(int tag, const uint8_t *d, size_t dlen)
x509_display_text_from_der	GmSSL/include/gmssl/x509_str.h	/^int x509_display_text_from_der(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_display_text_from_der	GmSSL/src/x509_str.c	/^int x509_display_text_from_der(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_display_text_print	GmSSL/include/gmssl/x509_str.h	/^int x509_display_text_print(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)
x509_display_text_print	GmSSL/src/x509_str.c	/^int x509_display_text_print(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, int tag, const uint8_t *d, size_t dlen)
x509_display_text_to_der	GmSSL/include/gmssl/x509_str.h	/^int x509_display_text_to_der(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_display_text_to_der	GmSSL/src/x509_str.c	/^int x509_display_text_to_der(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_distribution_point_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_distribution_point_from_der($/;"	p	signature:( int *dist_point_choice, const uint8_t **dist_point, size_t *dist_point_len, int *reasons, const uint8_t **crl_issuer, size_t *crl_issuer_len, const uint8_t **in, size_t *inlen)
x509_distribution_point_from_der	GmSSL/src/x509_ext.c	/^int x509_distribution_point_from_der($/;"	f	signature:( int *dist_point_choice, const uint8_t **dist_point, size_t *dist_point_len, int *reasons, const uint8_t **crl_issuer, size_t *crl_issuer_len, const uint8_t **in, size_t *inlen)
x509_distribution_point_name_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_distribution_point_name_from_der(int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_distribution_point_name_from_der	GmSSL/src/x509_ext.c	/^int x509_distribution_point_name_from_der(int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_distribution_point_name_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_distribution_point_name_print(FILE *fp, int fmt, int ind, const char *label, int choice, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, int choice, const uint8_t *d, size_t dlen)
x509_distribution_point_name_print	GmSSL/src/x509_ext.c	/^int x509_distribution_point_name_print(FILE *fp, int fmt, int ind, const char *label, int choice, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, int choice, const uint8_t *d, size_t dlen)
x509_distribution_point_name_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_distribution_point_name_to_der(int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_distribution_point_name_to_der	GmSSL/src/x509_ext.c	/^int x509_distribution_point_name_to_der(int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_distribution_point_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_distribution_point_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_distribution_point_print	GmSSL/src/x509_ext.c	/^int x509_distribution_point_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_distribution_point_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_distribution_point_to_der($/;"	p	signature:( int dist_point_choice, const uint8_t *dist_point, size_t dist_point_len, int reasons, const uint8_t *crl_issuer, size_t crl_issuer_len, uint8_t **out, size_t *outlen)
x509_distribution_point_to_der	GmSSL/src/x509_ext.c	/^int x509_distribution_point_to_der($/;"	f	signature:( int dist_point_choice, const uint8_t *dist_point, size_t dist_point_len, int reasons, const uint8_t *crl_issuer, size_t crl_issuer_len, uint8_t **out, size_t *outlen)
x509_distribution_points_add_distribution_point	GmSSL/include/gmssl/x509_ext.h	/^int x509_distribution_points_add_distribution_point(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	p	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int dist_point_choice, const uint8_t *dist_point, size_t dist_point_len, int reasons, const uint8_t *crl_issuer, size_t crl_issuer_len)
x509_distribution_points_add_distribution_point	GmSSL/src/x509_ext.c	/^int x509_distribution_points_add_distribution_point(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int dist_point_choice, const uint8_t *dist_point, size_t dist_point_len, int reasons, const uint8_t *crl_issuer, size_t crl_issuer_len)
x509_distribution_points_from_der	GmSSL/include/gmssl/x509_ext.h	533;"	d
x509_distribution_points_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_distribution_points_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_distribution_points_print	GmSSL/src/x509_ext.c	/^int x509_distribution_points_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_distribution_points_to_der	GmSSL/include/gmssl/x509_ext.h	532;"	d
x509_edi_party_name_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_edi_party_name_from_der($/;"	p	signature:( int *assigner_tag, const uint8_t **assigner, size_t *assigner_len, int *party_name_tag, const uint8_t **party_name, size_t *party_name_len, const uint8_t **in, size_t *inlen)
x509_edi_party_name_from_der	GmSSL/src/x509_ext.c	/^int x509_edi_party_name_from_der($/;"	f	signature:( int *assigner_choice, const uint8_t **assigner, size_t *assigner_len, int *party_name_choice, const uint8_t **party_name, size_t *party_name_len, const uint8_t **in, size_t *inlen)
x509_edi_party_name_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_edi_party_name_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_edi_party_name_print	GmSSL/src/x509_ext.c	/^int x509_edi_party_name_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_edi_party_name_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_edi_party_name_to_der($/;"	p	signature:( int assigner_tag, const uint8_t *assigner, size_t assigner_len, int party_name_tag, const uint8_t *party_name, size_t party_name_len, uint8_t **out, size_t *outlen)
x509_edi_party_name_to_der	GmSSL/src/x509_ext.c	/^int x509_edi_party_name_to_der($/;"	f	signature:( int assigner_choice, const uint8_t *assigner, size_t assigner_len, int party_name_choice, const uint8_t *party_name, size_t party_name_len, uint8_t **out, size_t *outlen)
x509_enc_algors	GmSSL/src/x509_alg.c	/^static const ASN1_OID_INFO x509_enc_algors[] = {$/;"	v	file:
x509_enc_algors_count	GmSSL/src/x509_alg.c	/^static const int x509_enc_algors_count =$/;"	v	file:
x509_encryption_algor_from_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_encryption_algor_from_der(int *oid, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)
x509_encryption_algor_from_der	GmSSL/src/x509_alg.c	/^int x509_encryption_algor_from_der(int *oid, const uint8_t **iv, size_t *ivlen,$/;"	f	signature:(int *oid, const uint8_t **iv, size_t *ivlen, const uint8_t **in, size_t *inlen)
x509_encryption_algor_from_name	GmSSL/include/gmssl/x509_alg.h	/^int x509_encryption_algor_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_encryption_algor_from_name	GmSSL/src/x509_alg.c	/^int x509_encryption_algor_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_encryption_algor_name	GmSSL/include/gmssl/x509_alg.h	/^const char *x509_encryption_algor_name(int oid);$/;"	p	signature:(int oid)
x509_encryption_algor_name	GmSSL/src/x509_alg.c	/^const char *x509_encryption_algor_name(int oid)$/;"	f	signature:(int oid)
x509_encryption_algor_print	GmSSL/include/gmssl/x509_alg.h	/^int x509_encryption_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_encryption_algor_print	GmSSL/src/x509_alg.c	/^int x509_encryption_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_encryption_algor_to_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_encryption_algor_to_der(int oid, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)
x509_encryption_algor_to_der	GmSSL/src/x509_alg.c	/^int x509_encryption_algor_to_der(int oid, const uint8_t *iv, size_t ivlen,$/;"	f	signature:(int oid, const uint8_t *iv, size_t ivlen, uint8_t **out, size_t *outlen)
x509_explicit_directory_name_from_der	GmSSL/include/gmssl/x509_str.h	/^int x509_explicit_directory_name_from_der(int index, int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int index, int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_explicit_directory_name_from_der	GmSSL/src/x509_str.c	/^int x509_explicit_directory_name_from_der(int index, int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int index, int *tag, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_explicit_directory_name_to_der	GmSSL/include/gmssl/x509_str.h	/^int x509_explicit_directory_name_to_der(int index, int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int index, int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_explicit_directory_name_to_der	GmSSL/src/x509_str.c	/^int x509_explicit_directory_name_to_der(int index, int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int index, int tag, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_explicit_distribution_point_name_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_explicit_distribution_point_name_from_der(int index, int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int index, int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_explicit_distribution_point_name_from_der	GmSSL/src/x509_ext.c	/^int x509_explicit_distribution_point_name_from_der(int index, int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int index, int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_explicit_distribution_point_name_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_explicit_distribution_point_name_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_explicit_distribution_point_name_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_explicit_distribution_point_name_to_der(int index, int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int index, int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_explicit_distribution_point_name_to_der	GmSSL/src/x509_ext.c	/^int x509_explicit_distribution_point_name_to_der(int index, int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int index, int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_explicit_exts_from_der	GmSSL/include/gmssl/x509.h	/^int x509_explicit_exts_from_der(int index, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int index, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_explicit_exts_from_der	GmSSL/src/x509_cer.c	/^int x509_explicit_exts_from_der(int index, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int index, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_explicit_exts_to_der	GmSSL/include/gmssl/x509.h	/^int x509_explicit_exts_to_der(int index, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int index, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_explicit_exts_to_der	GmSSL/src/x509_cer.c	/^int x509_explicit_exts_to_der(int index, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int index, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_explicit_version_from_der	GmSSL/include/gmssl/x509.h	/^int x509_explicit_version_from_der(int index, int *version, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int index, int *version, const uint8_t **in, size_t *inlen)
x509_explicit_version_from_der	GmSSL/src/x509_cer.c	/^int x509_explicit_version_from_der(int index, int *version, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int index, int *version, const uint8_t **in, size_t *inlen)
x509_explicit_version_to_der	GmSSL/include/gmssl/x509.h	/^int x509_explicit_version_to_der(int index, int version, uint8_t **out, size_t *outlen);$/;"	p	signature:(int index, int version, uint8_t **out, size_t *outlen)
x509_explicit_version_to_der	GmSSL/src/x509_cer.c	/^int x509_explicit_version_to_der(int index, int version, uint8_t **out, size_t *outlen)$/;"	f	signature:(int index, int version, uint8_t **out, size_t *outlen)
x509_ext_from_der	GmSSL/include/gmssl/x509.h	/^int x509_ext_from_der(int *oid, uint32_t *nodes, size_t *nodes_cnt, int *critical, const uint8_t **val, size_t *vlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, uint32_t *nodes, size_t *nodes_cnt, int *critical, const uint8_t **val, size_t *vlen, const uint8_t **in, size_t *inlen)
x509_ext_from_der	GmSSL/src/x509_cer.c	/^int x509_ext_from_der(int *oid, uint32_t *nodes, size_t *nodes_cnt,$/;"	f	signature:(int *oid, uint32_t *nodes, size_t *nodes_cnt, int *critical, const uint8_t **val, size_t *vlen, const uint8_t **in, size_t *inlen)
x509_ext_id_from_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_ext_id_from_der(int *oid, uint32_t *nodes, size_t *nodes_count, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, uint32_t *nodes, size_t *nodes_count, const uint8_t **in, size_t *inlen)
x509_ext_id_from_der	GmSSL/src/x509_oid.c	/^int x509_ext_id_from_der(int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **in, size_t *inlen)
x509_ext_id_from_name	GmSSL/include/gmssl/x509_oid.h	/^int x509_ext_id_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_ext_id_from_name	GmSSL/src/x509_oid.c	/^int x509_ext_id_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_ext_id_name	GmSSL/include/gmssl/x509_oid.h	/^const char *x509_ext_id_name(int oid);$/;"	p	signature:(int oid)
x509_ext_id_name	GmSSL/src/x509_oid.c	/^const char *x509_ext_id_name(int oid)$/;"	f	signature:(int oid)
x509_ext_id_to_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_ext_id_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_ext_id_to_der	GmSSL/src/x509_oid.c	/^int x509_ext_id_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_ext_ids	GmSSL/src/x509_oid.c	/^static const ASN1_OID_INFO x509_ext_ids[] = {$/;"	v	file:
x509_ext_ids_count	GmSSL/src/x509_oid.c	/^static const int x509_ext_ids_count =$/;"	v	file:
x509_ext_key_usage_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_ext_key_usage_from_der(int *oids, size_t *oids_cnt, size_t max_cnt, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oids, size_t *oids_cnt, size_t max_cnt, const uint8_t **in, size_t *inlen)
x509_ext_key_usage_from_der	GmSSL/src/x509_ext.c	/^int x509_ext_key_usage_from_der(int *oids, size_t *oids_cnt, size_t max_cnt, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oids, size_t *oids_cnt, size_t max_cnt, const uint8_t **in, size_t *inlen)
x509_ext_key_usage_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_ext_key_usage_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_ext_key_usage_print	GmSSL/src/x509_ext.c	/^int x509_ext_key_usage_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_ext_key_usage_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_ext_key_usage_to_der(const int *oids, size_t oids_cnt, uint8_t **out, size_t *outlen);$/;"	p	signature:(const int *oids, size_t oids_cnt, uint8_t **out, size_t *outlen)
x509_ext_key_usage_to_der	GmSSL/src/x509_ext.c	/^int x509_ext_key_usage_to_der(const int *oids, size_t oids_cnt, uint8_t **out, size_t *outlen)$/;"	f	signature:(const int *oids, size_t oids_cnt, uint8_t **out, size_t *outlen)
x509_ext_print	GmSSL/include/gmssl/x509.h	/^int x509_ext_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_ext_print	GmSSL/src/x509_cer.c	/^int x509_ext_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_ext_to_der	GmSSL/include/gmssl/x509.h	/^int x509_ext_to_der(int oid, int critical, const uint8_t *val, size_t vlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, int critical, const uint8_t *val, size_t vlen, uint8_t **out, size_t *outlen)
x509_ext_to_der	GmSSL/src/x509_cer.c	/^int x509_ext_to_der(int oid, int critical, const uint8_t *val, size_t vlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, int critical, const uint8_t *val, size_t vlen, uint8_t **out, size_t *outlen)
x509_exts_add_authority_key_identifier	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_authority_key_identifier(uint8_t *exts, size_t *extslen, size_t maxlen, int critical,$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *keyid, size_t keyid_len, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len)
x509_exts_add_authority_key_identifier	GmSSL/src/x509_ext.c	/^int x509_exts_add_authority_key_identifier(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *keyid, size_t keyid_len, const uint8_t *issuer, size_t issuer_len, const uint8_t *serial, size_t serial_len)
x509_exts_add_basic_constraints	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_basic_constraints(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int ca, int path_len_constraint);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int ca, int path_len_constraint)
x509_exts_add_basic_constraints	GmSSL/src/x509_ext.c	/^int x509_exts_add_basic_constraints(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int ca, int path_len_constraint)
x509_exts_add_certificate_policies	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_certificate_policies(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_certificate_policies	GmSSL/src/x509_ext.c	/^int x509_exts_add_certificate_policies(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_crl_distribution_points	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_crl_distribution_points(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_crl_distribution_points	GmSSL/src/x509_ext.c	/^int x509_exts_add_crl_distribution_points(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_ext_key_usage	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_ext_key_usage(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const int *key_purposes, size_t key_purposes_cnt);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const int *key_purposes, size_t key_purposes_cnt)
x509_exts_add_ext_key_usage	GmSSL/src/x509_ext.c	/^int x509_exts_add_ext_key_usage(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const int *key_purposes, size_t key_purposes_cnt)
x509_exts_add_freshest_crl	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_freshest_crl(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_freshest_crl	GmSSL/src/x509_ext.c	/^int x509_exts_add_freshest_crl(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_inhibit_any_policy	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_inhibit_any_policy(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int skip_certs);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int skip_certs)
x509_exts_add_inhibit_any_policy	GmSSL/src/x509_ext.c	/^int x509_exts_add_inhibit_any_policy(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int skip_certs)
x509_exts_add_issuer_alt_name	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_issuer_alt_name(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_issuer_alt_name	GmSSL/src/x509_ext.c	/^int x509_exts_add_issuer_alt_name(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_key_usage	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_key_usage(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int bits);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int bits)
x509_exts_add_key_usage	GmSSL/src/x509_ext.c	/^int x509_exts_add_key_usage(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int bits)$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int bits)
x509_exts_add_name_constraints	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_name_constraints(uint8_t *exts, size_t *extslen, size_t maxlen, int critical,$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *permitted_subtrees, size_t permitted_subtrees_len, const uint8_t *excluded_subtrees, size_t excluded_subtrees_len)
x509_exts_add_name_constraints	GmSSL/src/x509_ext.c	/^int x509_exts_add_name_constraints(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *permitted_subtrees, size_t permitted_subtrees_len, const uint8_t *excluded_subtrees, size_t excluded_subtrees_len)
x509_exts_add_policy_constraints	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_policy_constraints(uint8_t *exts, size_t *extslen, size_t maxlen, int critical,$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int require_explicit_policy, int inhibit_policy_mapping)
x509_exts_add_policy_constraints	GmSSL/src/x509_ext.c	/^int x509_exts_add_policy_constraints(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, int require_explicit_policy, int inhibit_policy_mapping)
x509_exts_add_policy_mappings	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_policy_mappings(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_policy_mappings	GmSSL/src/x509_ext.c	/^int x509_exts_add_policy_mappings(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_sequence	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_sequence(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int oid, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_sequence	GmSSL/src/x509_ext.c	/^int x509_exts_add_sequence(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int oid, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_subject_alt_name	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_subject_alt_name(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_subject_alt_name	GmSSL/src/x509_ext.c	/^int x509_exts_add_subject_alt_name(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_subject_directory_attributes	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_subject_directory_attributes(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_subject_directory_attributes	GmSSL/src/x509_ext.c	/^int x509_exts_add_subject_directory_attributes(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_subject_key_identifier	GmSSL/include/gmssl/x509_ext.h	/^int x509_exts_add_subject_key_identifier(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen);$/;"	p	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_add_subject_key_identifier	GmSSL/src/x509_ext.c	/^int x509_exts_add_subject_key_identifier(uint8_t *exts, size_t *extslen, size_t maxlen,$/;"	f	signature:(uint8_t *exts, size_t *extslen, size_t maxlen, int critical, const uint8_t *d, size_t dlen)
x509_exts_from_der	GmSSL/include/gmssl/x509.h	193;"	d
x509_exts_get_count	GmSSL/include/gmssl/x509.h	/^int x509_exts_get_count(const uint8_t *d, size_t dlen, size_t *cnt);$/;"	p	signature:(const uint8_t *d, size_t dlen, size_t *cnt)
x509_exts_get_count	GmSSL/src/x509_cer.c	/^int x509_exts_get_count(const uint8_t *d, size_t dlen, size_t *cnt)$/;"	f	signature:(const uint8_t *d, size_t dlen, size_t *cnt)
x509_exts_get_ext_by_index	GmSSL/include/gmssl/x509.h	/^int x509_exts_get_ext_by_index(const uint8_t *d, size_t dlen, int index,$/;"	p	signature:(const uint8_t *d, size_t dlen, int index, int *oid, uint32_t *nodes, size_t *nodes_cnt, int *critical, const uint8_t **val, size_t *vlen)
x509_exts_get_ext_by_index	GmSSL/src/x509_cer.c	/^int x509_exts_get_ext_by_index(const uint8_t *d, size_t dlen, int index,$/;"	f	signature:(const uint8_t *d, size_t dlen, int index, int *oid, uint32_t *nodes, size_t *nodes_cnt, int *critical, const uint8_t **val, size_t *vlen)
x509_exts_get_ext_by_oid	GmSSL/include/gmssl/x509.h	/^int x509_exts_get_ext_by_oid(const uint8_t *d, size_t dlen, int oid,$/;"	p	signature:(const uint8_t *d, size_t dlen, int oid, int *critical, const uint8_t **val, size_t *vlen)
x509_exts_get_ext_by_oid	GmSSL/src/x509_cer.c	/^int x509_exts_get_ext_by_oid(const uint8_t *d, size_t dlen, int oid,$/;"	f	signature:(const uint8_t *d, size_t dlen, int oid, int *critical, const uint8_t **val, size_t *vlen)
x509_exts_print	GmSSL/include/gmssl/x509.h	/^int x509_exts_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_exts_print	GmSSL/src/x509_cer.c	/^int x509_exts_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_exts_to_der	GmSSL/include/gmssl/x509.h	192;"	d
x509_freshest_crl_from_der	GmSSL/include/gmssl/x509_ext.h	554;"	d
x509_freshest_crl_print	GmSSL/include/gmssl/x509_ext.h	555;"	d
x509_freshest_crl_to_der	GmSSL/include/gmssl/x509_ext.h	553;"	d
x509_general_name_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_name_from_der(int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_general_name_from_der	GmSSL/src/x509_ext.c	/^int x509_general_name_from_der(int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *choice, const uint8_t **d, size_t *dlen, const uint8_t **in, size_t *inlen)
x509_general_name_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_name_print(FILE *fp, int fmt, int ind, const char *label, int choice, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, int choice, const uint8_t *d, size_t dlen)
x509_general_name_print	GmSSL/src/x509_ext.c	/^int x509_general_name_print(FILE *fp, int fmt, int ind, const char *label, int choice, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, int choice, const uint8_t *d, size_t dlen)
x509_general_name_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_name_to_der(int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_general_name_to_der	GmSSL/src/x509_ext.c	/^int x509_general_name_to_der(int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)$/;"	f	signature:(int choice, const uint8_t *d, size_t dlen, uint8_t **out, size_t *outlen)
x509_general_names_add_directory_name	GmSSL/include/gmssl/x509_ext.h	183;"	d
x509_general_names_add_dns_name	GmSSL/include/gmssl/x509_ext.h	181;"	d
x509_general_names_add_edi_party_name	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_names_add_edi_party_name(uint8_t *gns, size_t *gnslen, size_t maxlen,$/;"	p	signature:(uint8_t *gns, size_t *gnslen, size_t maxlen, int assigner_tag, const uint8_t *assigner, size_t assigner_len, int party_name_tag, const uint8_t *party_name, size_t party_name_len)
x509_general_names_add_edi_party_name	GmSSL/src/x509_ext.c	/^int x509_general_names_add_edi_party_name(uint8_t *gns, size_t *gnslen, size_t maxlen,$/;"	f	signature:(uint8_t *gns, size_t *gnslen, size_t maxlen, int assigner_tag, const uint8_t *assigner, size_t assigner_len, int party_name_tag, const uint8_t *party_name, size_t party_name_len)
x509_general_names_add_general_name	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_names_add_general_name(uint8_t *gns, size_t *gnslen, size_t maxlen,$/;"	p	signature:(uint8_t *gns, size_t *gnslen, size_t maxlen, int choice, const uint8_t *d, size_t dlen)
x509_general_names_add_general_name	GmSSL/src/x509_ext.c	/^int x509_general_names_add_general_name(uint8_t *gns, size_t *gnslen, size_t maxlen,$/;"	f	signature:(uint8_t *gns, size_t *gnslen, size_t maxlen, int choice, const uint8_t *d, size_t dlen)
x509_general_names_add_ip_address	GmSSL/include/gmssl/x509_ext.h	188;"	d
x509_general_names_add_other_name	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_names_add_other_name(uint8_t *gns, size_t *gnslen, size_t maxlen,$/;"	p	signature:(uint8_t *gns, size_t *gnslen, size_t maxlen, const uint32_t *nodes, size_t nodes_count, const uint8_t *value, size_t value_len)
x509_general_names_add_other_name	GmSSL/src/x509_ext.c	/^int x509_general_names_add_other_name(uint8_t *gns, size_t *gnslen, size_t maxlen,$/;"	f	signature:(uint8_t *gns, size_t *gnslen, size_t maxlen, const uint32_t *nodes, size_t nodes_cnt, const uint8_t *value, size_t value_len)
x509_general_names_add_registered_id	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_names_add_registered_id(uint8_t *gns, size_t *gnslen, size_t maxlen,$/;"	p	signature:(uint8_t *gns, size_t *gnslen, size_t maxlen, const uint32_t *nodes, size_t nodes_cnt)
x509_general_names_add_registered_id	GmSSL/src/x509_ext.c	/^int x509_general_names_add_registered_id(uint8_t *gns, size_t *gnslen, size_t maxlen,$/;"	f	signature:(uint8_t *gns, size_t *gnslen, size_t maxlen, const uint32_t *nodes, size_t nodes_cnt)
x509_general_names_add_rfc822_name	GmSSL/include/gmssl/x509_ext.h	180;"	d
x509_general_names_add_uniform_resource_identifier	GmSSL/include/gmssl/x509_ext.h	187;"	d
x509_general_names_add_x400_address	GmSSL/include/gmssl/x509_ext.h	182;"	d
x509_general_names_from_der	GmSSL/include/gmssl/x509_ext.h	172;"	d
x509_general_names_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_names_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_general_names_print	GmSSL/src/x509_ext.c	/^int x509_general_names_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_general_names_to_der	GmSSL/include/gmssl/x509_ext.h	171;"	d
x509_general_subtree_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_subtree_from_der($/;"	p	signature:( int *base_choice, const uint8_t **base, size_t *base_len, int *minimum, int *maximum, const uint8_t **in, size_t *inlen)
x509_general_subtree_from_der	GmSSL/src/x509_ext.c	/^int x509_general_subtree_from_der($/;"	f	signature:( int *base_choice, const uint8_t **base, size_t *base_len, int *minimum, int *maximum, const uint8_t **in, size_t *inlen)
x509_general_subtree_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_subtree_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_general_subtree_print	GmSSL/src/x509_ext.c	/^int x509_general_subtree_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_general_subtree_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_subtree_to_der($/;"	p	signature:( int base_choice, const uint8_t *base, size_t base_len, int minimum, int maximum, uint8_t **out, size_t *outlen)
x509_general_subtree_to_der	GmSSL/src/x509_ext.c	/^int x509_general_subtree_to_der($/;"	f	signature:( int base_choice, const uint8_t *base, size_t base_len, int minimum, int maximum, uint8_t **out, size_t *outlen)
x509_general_subtrees_add_general_subtree	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_subtrees_add_general_subtree(uint8_t *d, size_t *dlen, size_t maxlen, \/\/ 这个功能和general_names很类似，只是多了一点点内容$/;"	p	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int base_choice, const uint8_t *base, size_t base_len, int minimum, int maximum)
x509_general_subtrees_add_general_subtree	GmSSL/src/x509_ext.c	/^int x509_general_subtrees_add_general_subtree(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int base_choice, const uint8_t *base, size_t base_len, int minimum, int maximum)
x509_general_subtrees_from_der	GmSSL/include/gmssl/x509_ext.h	423;"	d
x509_general_subtrees_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_general_subtrees_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_general_subtrees_print	GmSSL/src/x509_ext.c	/^int x509_general_subtrees_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_general_subtrees_to_der	GmSSL/include/gmssl/x509_ext.h	422;"	d
x509_inhibit_any_policy_from_der	GmSSL/include/gmssl/x509_ext.h	548;"	d
x509_inhibit_any_policy_to_der	GmSSL/include/gmssl/x509_ext.h	547;"	d
x509_issuer_alt_name_print	GmSSL/include/gmssl/x509_ext.h	361;"	d
x509_issuing_distribution_point_from_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_issuing_distribution_point_from_der($/;"	p	signature:( int *dist_point_choice, const uint8_t **dist_point, size_t *dist_point_len, int *only_contains_user_certs, int *only_contains_ca_certs, int *only_some_reasons, int *indirect_crl, int *only_contains_attr_certs, const uint8_t **in, size_t *inlen)
x509_issuing_distribution_point_from_der	GmSSL/src/x509_crl.c	/^int x509_issuing_distribution_point_from_der($/;"	f	signature:( int *dist_point_choice, const uint8_t **dist_point, size_t *dist_point_len, int *only_contains_user_certs, int *only_contains_ca_certs, int *only_some_reasons, int *indirect_crl, int *only_contains_attr_certs, const uint8_t **in, size_t *inlen)
x509_issuing_distribution_point_print	GmSSL/src/x509_crl.c	/^int x509_issuing_distribution_point_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_issuing_distribution_point_to_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_issuing_distribution_point_to_der($/;"	p	signature:( int dist_point_choice, const uint8_t *dist_point, size_t dist_point_len, int only_contains_user_certs, int only_contains_ca_certs, int only_some_reasons, int indirect_crl, int only_contains_attr_certs, uint8_t **out, size_t *outlen)
x509_issuing_distribution_point_to_der	GmSSL/src/x509_crl.c	/^int x509_issuing_distribution_point_to_der($/;"	f	signature:( int dist_point_choice, const uint8_t *dist_point, size_t dist_point_len, int only_contains_user_certs, int only_contains_ca_certs, int only_some_reasons, int indirect_crl, int only_contains_attr_certs, uint8_t **out, size_t *outlen)
x509_key_purpose_from_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_key_purpose_from_der(int *oid, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_key_purpose_from_der	GmSSL/src/x509_oid.c	/^int x509_key_purpose_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_key_purpose_from_name	GmSSL/include/gmssl/x509_oid.h	/^int x509_key_purpose_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_key_purpose_from_name	GmSSL/src/x509_oid.c	/^int x509_key_purpose_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_key_purpose_name	GmSSL/include/gmssl/x509_oid.h	/^const char *x509_key_purpose_name(int oid);$/;"	p	signature:(int oid)
x509_key_purpose_name	GmSSL/src/x509_oid.c	/^const char *x509_key_purpose_name(int oid)$/;"	f	signature:(int oid)
x509_key_purpose_text	GmSSL/include/gmssl/x509_oid.h	/^const char *x509_key_purpose_text(int oid);$/;"	p	signature:(int oid)
x509_key_purpose_text	GmSSL/src/x509_oid.c	/^const char *x509_key_purpose_text(int oid)$/;"	f	signature:(int oid)
x509_key_purpose_to_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_key_purpose_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_key_purpose_to_der	GmSSL/src/x509_oid.c	/^int x509_key_purpose_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_key_purposes	GmSSL/src/x509_oid.c	/^static const ASN1_OID_INFO x509_key_purposes[] = {$/;"	v	file:
x509_key_purposes_count	GmSSL/src/x509_oid.c	/^static const int x509_key_purposes_count =$/;"	v	file:
x509_key_usage_from_der	GmSSL/include/gmssl/x509_ext.h	241;"	d
x509_key_usage_from_name	GmSSL/include/gmssl/x509_ext.h	/^int x509_key_usage_from_name(int *flag, const char *name);$/;"	p	signature:(int *flag, const char *name)
x509_key_usage_from_name	GmSSL/src/x509_ext.c	/^int x509_key_usage_from_name(int *flag, const char *name)$/;"	f	signature:(int *flag, const char *name)
x509_key_usage_name	GmSSL/include/gmssl/x509_ext.h	/^const char *x509_key_usage_name(int flag);$/;"	p	signature:(int flag)
x509_key_usage_name	GmSSL/src/x509_ext.c	/^const char *x509_key_usage_name(int flag)$/;"	f	signature:(int flag)
x509_key_usage_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_key_usage_print(FILE *fp, int fmt, int ind, const char *label, int bits);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, int bits)
x509_key_usage_print	GmSSL/src/x509_ext.c	/^int x509_key_usage_print(FILE *fp, int fmt, int ind, const char *label, int bits)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, int bits)
x509_key_usage_to_der	GmSSL/include/gmssl/x509_ext.h	240;"	d
x509_key_usages	GmSSL/src/x509_ext.c	/^static const char *x509_key_usages[] = {$/;"	v	file:
x509_key_usages_count	GmSSL/src/x509_ext.c	/^static size_t x509_key_usages_count =$/;"	v	file:
x509_name_add_common_name	GmSSL/include/gmssl/x509.h	/^int x509_name_add_common_name(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen);$/;"	p	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_common_name	GmSSL/src/x509_cer.c	/^int x509_name_add_common_name(uint8_t *d, size_t *dlen, int maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_country_name	GmSSL/include/gmssl/x509.h	/^int x509_name_add_country_name(uint8_t *d, size_t *dlen, int maxlen, const char val[2] ); \/\/ val: PrintableString SIZE(2)$/;"	p	signature:(uint8_t *d, size_t *dlen, int maxlen, const char val[2] )
x509_name_add_country_name	GmSSL/src/x509_cer.c	/^int x509_name_add_country_name(uint8_t *d, size_t *dlen, int maxlen, const char val[2])$/;"	f	signature:(uint8_t *d, size_t *dlen, int maxlen, const char val[2])
x509_name_add_domain_component	GmSSL/include/gmssl/x509.h	/^int x509_name_add_domain_component(uint8_t *d, size_t *dlen, int maxlen, const char *val, size_t vlen); \/\/ val: IA5String$/;"	p	signature:(uint8_t *d, size_t *dlen, int maxlen, const char *val, size_t vlen)
x509_name_add_domain_component	GmSSL/src/x509_cer.c	/^int x509_name_add_domain_component(uint8_t *d, size_t *dlen, int maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, int maxlen, const char *val, size_t vlen)
x509_name_add_locality_name	GmSSL/include/gmssl/x509.h	/^int x509_name_add_locality_name(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen);$/;"	p	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_locality_name	GmSSL/src/x509_cer.c	/^int x509_name_add_locality_name(uint8_t *d, size_t *dlen, int maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_organization_name	GmSSL/include/gmssl/x509.h	/^int x509_name_add_organization_name(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen);$/;"	p	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_organization_name	GmSSL/src/x509_cer.c	/^int x509_name_add_organization_name(uint8_t *d, size_t *dlen, int maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_organizational_unit_name	GmSSL/include/gmssl/x509.h	/^int x509_name_add_organizational_unit_name(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen);$/;"	p	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_organizational_unit_name	GmSSL/src/x509_cer.c	/^int x509_name_add_organizational_unit_name(uint8_t *d, size_t *dlen, int maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_rdn	GmSSL/include/gmssl/x509.h	/^int x509_name_add_rdn(uint8_t *d, size_t *dlen, size_t maxlen, int oid, int tag, const uint8_t *val, size_t vlen, const uint8_t *more, size_t mlen);$/;"	p	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int oid, int tag, const uint8_t *val, size_t vlen, const uint8_t *more, size_t mlen)
x509_name_add_rdn	GmSSL/src/x509_cer.c	/^int x509_name_add_rdn(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int oid, int tag, const uint8_t *val, size_t vlen, const uint8_t *more, size_t morelen)
x509_name_add_state_or_province_name	GmSSL/include/gmssl/x509.h	/^int x509_name_add_state_or_province_name(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen);$/;"	p	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_add_state_or_province_name	GmSSL/src/x509_cer.c	/^int x509_name_add_state_or_province_name(uint8_t *d, size_t *dlen, int maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, int maxlen, int tag, const uint8_t *val, size_t vlen)
x509_name_constraints_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_name_constraints_from_der($/;"	p	signature:( const uint8_t **permitted_subtrees, size_t *permitted_subtrees_len, const uint8_t **excluded_subtrees, size_t *excluded_subtrees_len, const uint8_t **in, size_t *inlen)
x509_name_constraints_from_der	GmSSL/src/x509_ext.c	/^int x509_name_constraints_from_der($/;"	f	signature:( const uint8_t **permitted_subtrees, size_t *permitted_subtrees_len, const uint8_t **excluded_subtrees, size_t *excluded_subtrees_len, const uint8_t **in, size_t *inlen)
x509_name_constraints_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_name_constraints_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_name_constraints_print	GmSSL/src/x509_ext.c	/^int x509_name_constraints_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_name_constraints_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_name_constraints_to_der($/;"	p	signature:( const uint8_t *permitted_subtrees, size_t permitted_subtrees_len, const uint8_t *excluded_subtrees, size_t excluded_subtrees_len, uint8_t **out, size_t *outlen)
x509_name_constraints_to_der	GmSSL/src/x509_ext.c	/^int x509_name_constraints_to_der($/;"	f	signature:( const uint8_t *permitted_subtrees, size_t permitted_subtrees_len, const uint8_t *excluded_subtrees, size_t excluded_subtrees_len, uint8_t **out, size_t *outlen)
x509_name_from_der	GmSSL/include/gmssl/x509.h	158;"	d
x509_name_get_common_name	GmSSL/include/gmssl/x509.h	/^int x509_name_get_common_name(const uint8_t *d, size_t dlen, int *tag, const uint8_t **val, size_t *vlen);$/;"	p	signature:(const uint8_t *d, size_t dlen, int *tag, const uint8_t **val, size_t *vlen)
x509_name_get_common_name	GmSSL/src/x509_cer.c	/^int x509_name_get_common_name(const uint8_t *d, size_t dlen, int *tag, const uint8_t **val, size_t *vlen)$/;"	f	signature:(const uint8_t *d, size_t dlen, int *tag, const uint8_t **val, size_t *vlen)
x509_name_get_printable	GmSSL/include/gmssl/x509.h	/^int x509_name_get_printable(const uint8_t *d, size_t dlen, char *str, size_t maxlen);$/;"	p	signature:(const uint8_t *d, size_t dlen, char *str, size_t maxlen)
x509_name_get_printable	GmSSL/src/x509_cer.c	/^int x509_name_get_printable(const uint8_t *d, size_t dlen, char *str, size_t maxlen)$/;"	f	signature:(const uint8_t *d, size_t dlen, char *str, size_t maxlen)
x509_name_get_value_by_type	GmSSL/include/gmssl/x509.h	/^int x509_name_get_value_by_type(const uint8_t *d, size_t dlen, int oid, int *tag, const uint8_t **val, size_t *vlen);$/;"	p	signature:(const uint8_t *d, size_t dlen, int oid, int *tag, const uint8_t **val, size_t *vlen)
x509_name_get_value_by_type	GmSSL/src/x509_cer.c	/^int x509_name_get_value_by_type(const uint8_t *d, size_t dlen, int oid, int *tag, const uint8_t **val, size_t *vlen)$/;"	f	signature:(const uint8_t *d, size_t dlen, int oid, int *tag, const uint8_t **val, size_t *vlen)
x509_name_print	GmSSL/include/gmssl/x509.h	/^int x509_name_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_name_print	GmSSL/src/x509_cer.c	/^int x509_name_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_name_set	GmSSL/include/gmssl/x509.h	/^int x509_name_set(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	p	signature:(uint8_t *d, size_t *dlen, size_t maxlen, const char *country, const char *state, const char *locality, const char *org, const char *org_unit, const char *common_name)
x509_name_set	GmSSL/src/x509_cer.c	/^int x509_name_set(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, size_t maxlen, const char *country, const char *state, const char *locality, const char *org, const char *org_unit, const char *common_name)
x509_name_to_der	GmSSL/include/gmssl/x509.h	157;"	d
x509_name_type_from_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_name_type_from_der(int *oid, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_name_type_from_der	GmSSL/src/x509_oid.c	/^int x509_name_type_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_name_type_from_name	GmSSL/include/gmssl/x509_oid.h	/^int x509_name_type_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_name_type_from_name	GmSSL/src/x509_oid.c	/^int x509_name_type_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_name_type_name	GmSSL/include/gmssl/x509_oid.h	/^const char *x509_name_type_name(int oid);$/;"	p	signature:(int oid)
x509_name_type_name	GmSSL/src/x509_oid.c	/^const char *x509_name_type_name(int oid)$/;"	f	signature:(int oid)
x509_name_type_to_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_name_type_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_name_type_to_der	GmSSL/src/x509_oid.c	/^int x509_name_type_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_name_types	GmSSL/src/x509_cer.c	/^} x509_name_types[] = {$/;"	v	typeref:struct:__anon85	file:
x509_name_types	GmSSL/src/x509_oid.c	/^static const ASN1_OID_INFO x509_name_types[] = {$/;"	v	file:
x509_name_types_count	GmSSL/src/x509_cer.c	/^static const int x509_name_types_count$/;"	v	file:
x509_name_types_count	GmSSL/src/x509_oid.c	/^static const int x509_name_types_count$/;"	v	file:
x509_notice_reference_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_notice_reference_from_der($/;"	p	signature:( int *org_tag, const uint8_t **org, size_t *org_len, int *notice_numbers, size_t *notice_numbers_cnt, size_t max_notice_numbers, const uint8_t **in, size_t *inlen)
x509_notice_reference_from_der	GmSSL/src/x509_ext.c	/^int x509_notice_reference_from_der($/;"	f	signature:( int *org_tag, const uint8_t **org, size_t *org_len, int notice_numbers[X509_MAX_NOTICE_NUMBERS], size_t *notice_numbers_cnt, size_t max_notice_numbers, const uint8_t **in, size_t *inlen)
x509_notice_reference_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_notice_reference_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_notice_reference_print	GmSSL/src/x509_ext.c	/^int x509_notice_reference_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_notice_reference_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_notice_reference_to_der($/;"	p	signature:( int org_tag, const uint8_t *org, size_t org_len, const int *notice_numbers, size_t notice_numbers_cnt, uint8_t **out, size_t *outlen)
x509_notice_reference_to_der	GmSSL/src/x509_ext.c	/^int x509_notice_reference_to_der($/;"	f	signature:( int org_tag, const uint8_t *org, size_t org_len, const int *notice_numbers, size_t notice_numbers_cnt, uint8_t **out, size_t *outlen)
x509_other_name_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_other_name_from_der($/;"	p	signature:( uint32_t *nodes, size_t *nodes_count, const uint8_t **value, size_t *valuelen, const uint8_t **in, size_t *inlen)
x509_other_name_from_der	GmSSL/src/x509_ext.c	/^int x509_other_name_from_der($/;"	f	signature:( uint32_t *type_nodes, size_t *type_nodes_cnt, const uint8_t **value, size_t *value_len, const uint8_t **in, size_t *inlen)
x509_other_name_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_other_name_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_other_name_print	GmSSL/src/x509_ext.c	/^int x509_other_name_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_other_name_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_other_name_to_der($/;"	p	signature:( const uint32_t *nodes, size_t nodes_count, const uint8_t *value, size_t value_len, uint8_t **out, size_t *outlen)
x509_other_name_to_der	GmSSL/src/x509_ext.c	/^int x509_other_name_to_der($/;"	f	signature:( const uint32_t *type_nodes, size_t type_nodes_cnt, const uint8_t *value, size_t value_len, uint8_t **out, size_t *outlen)
x509_pke_algors	GmSSL/src/x509_alg.c	/^static const ASN1_OID_INFO x509_pke_algors[] = {$/;"	v	file:
x509_pke_algors_count	GmSSL/src/x509_alg.c	/^static const int x509_pke_algors_count =$/;"	v	file:
x509_policy_constraints_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_constraints_from_der(int *require_explicit_policy, int *inhibit_policy_mapping, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *require_explicit_policy, int *inhibit_policy_mapping, const uint8_t **in, size_t *inlen)
x509_policy_constraints_from_der	GmSSL/src/x509_ext.c	/^int x509_policy_constraints_from_der($/;"	f	signature:( int *require_explicit_policy, int *inhibit_policy_mapping, const uint8_t **in, size_t *inlen)
x509_policy_constraints_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_constraints_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_constraints_print	GmSSL/src/x509_ext.c	/^int x509_policy_constraints_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_constraints_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_constraints_to_der(int require_explicit_policy, int inhibit_policy_mapping, uint8_t **out, size_t *outlen);$/;"	p	signature:(int require_explicit_policy, int inhibit_policy_mapping, uint8_t **out, size_t *outlen)
x509_policy_constraints_to_der	GmSSL/src/x509_ext.c	/^int x509_policy_constraints_to_der($/;"	f	signature:( int require_explicit_policy, int inhibit_policy_mapping, uint8_t **out, size_t *outlen)
x509_policy_information_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_information_from_der($/;"	p	signature:( int *policy_oid, uint32_t *policy_nodes, size_t *policy_nodes_cnt, const uint8_t **qualifiers, size_t *qualifiers_len, const uint8_t **in, size_t *inlen)
x509_policy_information_from_der	GmSSL/src/x509_ext.c	/^int x509_policy_information_from_der($/;"	f	signature:( int *oid, uint32_t *nodes, size_t *nodes_cnt, const uint8_t **qualifiers, size_t *qualifiers_len, const uint8_t **in, size_t *inlen)
x509_policy_information_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_information_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_information_print	GmSSL/src/x509_ext.c	/^int x509_policy_information_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_information_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_information_to_der($/;"	p	signature:( int policy_oid, const uint32_t *policy_nodes, size_t policy_nodes_cnt, const uint8_t *qualifiers, size_t qualifiers_len, uint8_t **out, size_t *outlen)
x509_policy_information_to_der	GmSSL/src/x509_ext.c	/^int x509_policy_information_to_der($/;"	f	signature:( int oid, const uint32_t *nodes, size_t nodes_cnt, const uint8_t *qualifiers, size_t qualifiers_len, uint8_t **out, size_t *outlen)
x509_policy_mapping_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_mapping_from_der($/;"	p	signature:( int *issuer_policy_oid, uint32_t *issuer_policy_nodes, size_t *issuer_policy_nodes_cnt, int *subject_policy_oid, uint32_t *subject_policy_nodes, size_t *subject_policy_nodes_cnt, const uint8_t **in, size_t *inlen)
x509_policy_mapping_from_der	GmSSL/src/x509_ext.c	/^int x509_policy_mapping_from_der($/;"	f	signature:( int *issuer_policy_oid, uint32_t *issuer_policy_nodes, size_t *issuer_policy_nodes_cnt, int *subject_policy_oid, uint32_t *subject_policy_nodes, size_t *subject_policy_nodes_cnt, const uint8_t **in, size_t *inlen)
x509_policy_mapping_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_mapping_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_mapping_print	GmSSL/src/x509_ext.c	/^int x509_policy_mapping_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_mapping_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_mapping_to_der($/;"	p	signature:( int issuer_policy_oid, const uint32_t *issuer_policy_nodes, size_t issuer_policy_nodes_cnt, int subject_policy_oid, const uint32_t *subject_policy_nodes, size_t subject_policy_nodes_cnt, uint8_t **out, size_t *outlen)
x509_policy_mapping_to_der	GmSSL/src/x509_ext.c	/^int x509_policy_mapping_to_der($/;"	f	signature:( int issuer_policy_oid, const uint32_t *issuer_policy_nodes, size_t issuer_policy_nodes_cnt, int subject_policy_oid, const uint32_t *subject_policy_nodes, size_t subject_policy_nodes_cnt, uint8_t **out, size_t *outlen)
x509_policy_mappings_add_policy_mapping	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_mappings_add_policy_mapping(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	p	signature:(uint8_t *d, size_t *dlen, size_t maxlen, int issuer_policy_oid, const uint32_t *issuer_policy_nodes, size_t issuer_policy_nodes_cnt, int subject_policy_oid, const uint32_t *subject_policy_nodes, size_t subject_policy_nodes_cnt)
x509_policy_mappings_from_der	GmSSL/include/gmssl/x509_ext.h	351;"	d
x509_policy_mappings_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_mappings_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_mappings_print	GmSSL/src/x509_ext.c	/^int x509_policy_mappings_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_mappings_to_der	GmSSL/include/gmssl/x509_ext.h	350;"	d
x509_policy_qualifier_info_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_qualifier_info_from_der($/;"	p	signature:( int *oid, const uint8_t **qualifier, size_t *qualifier_len, const uint8_t **in, size_t *inlen)
x509_policy_qualifier_info_from_der	GmSSL/src/x509_ext.c	/^int x509_policy_qualifier_info_from_der(int *oid, const uint8_t **qualifier, size_t *qualifier_len, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **qualifier, size_t *qualifier_len, const uint8_t **in, size_t *inlen)
x509_policy_qualifier_info_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_qualifier_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_qualifier_info_print	GmSSL/src/x509_ext.c	/^int x509_policy_qualifier_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_qualifier_info_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_qualifier_info_to_der($/;"	p	signature:( int oid, const uint8_t *qualifier, size_t qualifier_len, uint8_t **out, size_t *outlen)
x509_policy_qualifier_info_to_der	GmSSL/src/x509_ext.c	/^int x509_policy_qualifier_info_to_der($/;"	f	signature:( int oid, const uint8_t *qualifier, size_t qualifier_len, uint8_t **out, size_t *outlen)
x509_policy_qualifier_infos_from_der	GmSSL/include/gmssl/x509_ext.h	297;"	d
x509_policy_qualifier_infos_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_policy_qualifier_infos_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_qualifier_infos_print	GmSSL/src/x509_ext.c	/^int x509_policy_qualifier_infos_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_policy_qualifier_infos_to_der	GmSSL/include/gmssl/x509_ext.h	296;"	d
x509_public_key_algor_from_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_public_key_algor_from_der(int *oid, int *curve_or_null, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, int *curve_or_null, const uint8_t **in, size_t *inlen)
x509_public_key_algor_from_der	GmSSL/src/x509_alg.c	/^int x509_public_key_algor_from_der(int *oid , int *curve_or_null, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid , int *curve_or_null, const uint8_t **in, size_t *inlen)
x509_public_key_algor_from_name	GmSSL/include/gmssl/x509_alg.h	/^int x509_public_key_algor_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_public_key_algor_from_name	GmSSL/src/x509_alg.c	/^int x509_public_key_algor_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_public_key_algor_name	GmSSL/include/gmssl/x509_alg.h	/^const char *x509_public_key_algor_name(int oid);$/;"	p	signature:(int oid)
x509_public_key_algor_name	GmSSL/src/x509_alg.c	/^const char *x509_public_key_algor_name(int oid)$/;"	f	signature:(int oid)
x509_public_key_algor_print	GmSSL/include/gmssl/x509_alg.h	/^int x509_public_key_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_public_key_algor_print	GmSSL/src/x509_alg.c	/^int x509_public_key_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_public_key_algor_to_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_public_key_algor_to_der(int oid, int curve, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, int curve, uint8_t **out, size_t *outlen)
x509_public_key_algor_to_der	GmSSL/src/x509_alg.c	/^int x509_public_key_algor_to_der(int oid, int curve_or_null, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, int curve_or_null, uint8_t **out, size_t *outlen)
x509_public_key_algors	GmSSL/src/x509_alg.c	/^static const ASN1_OID_INFO x509_public_key_algors[] = {$/;"	v	file:
x509_public_key_algors_count	GmSSL/src/x509_alg.c	/^static const int x509_public_key_algors_count =$/;"	v	file:
x509_public_key_encryption_algor_from_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_public_key_encryption_algor_from_der(int *oid, const uint8_t **params, size_t *params_len, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **params, size_t *params_len, const uint8_t **in, size_t *inlen)
x509_public_key_encryption_algor_from_der	GmSSL/src/x509_alg.c	/^int x509_public_key_encryption_algor_from_der(int *oid, const uint8_t **params, size_t *params_len,$/;"	f	signature:(int *oid, const uint8_t **params, size_t *params_len, const uint8_t **in, size_t *inlen)
x509_public_key_encryption_algor_from_name	GmSSL/include/gmssl/x509_alg.h	/^int x509_public_key_encryption_algor_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_public_key_encryption_algor_from_name	GmSSL/src/x509_alg.c	/^int x509_public_key_encryption_algor_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_public_key_encryption_algor_name	GmSSL/include/gmssl/x509_alg.h	/^const char *x509_public_key_encryption_algor_name(int oid);$/;"	p	signature:(int oid)
x509_public_key_encryption_algor_name	GmSSL/src/x509_alg.c	/^const char *x509_public_key_encryption_algor_name(int oid)$/;"	f	signature:(int oid)
x509_public_key_encryption_algor_print	GmSSL/include/gmssl/x509_alg.h	/^int x509_public_key_encryption_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_public_key_encryption_algor_print	GmSSL/src/x509_alg.c	/^int x509_public_key_encryption_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_public_key_encryption_algor_to_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_public_key_encryption_algor_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_public_key_encryption_algor_to_der	GmSSL/src/x509_alg.c	/^int x509_public_key_encryption_algor_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_public_key_info_from_der	GmSSL/include/gmssl/x509.h	174;"	d
x509_public_key_info_print	GmSSL/include/gmssl/x509.h	/^int x509_public_key_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_public_key_info_print	GmSSL/src/x509_cer.c	/^int x509_public_key_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_public_key_info_to_der	GmSSL/include/gmssl/x509.h	173;"	d
x509_qt_ids	GmSSL/src/x509_oid.c	/^static const ASN1_OID_INFO x509_qt_ids[] = {$/;"	v	file:
x509_qt_ids_count	GmSSL/src/x509_oid.c	/^static const int x509_qt_ids_count =$/;"	v	file:
x509_qualifier_id_from_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_qualifier_id_from_der(int *oid, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_qualifier_id_from_der	GmSSL/src/x509_oid.c	/^int x509_qualifier_id_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_qualifier_id_from_name	GmSSL/include/gmssl/x509_oid.h	/^int x509_qualifier_id_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_qualifier_id_from_name	GmSSL/src/x509_oid.c	/^int x509_qualifier_id_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_qualifier_id_name	GmSSL/include/gmssl/x509_oid.h	/^const char *x509_qualifier_id_name(int oid);$/;"	p	signature:(int oid)
x509_qualifier_id_name	GmSSL/src/x509_oid.c	/^const char *x509_qualifier_id_name(int oid)$/;"	f	signature:(int oid)
x509_qualifier_id_to_der	GmSSL/include/gmssl/x509_oid.h	/^int x509_qualifier_id_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_qualifier_id_to_der	GmSSL/src/x509_oid.c	/^int x509_qualifier_id_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_rdn_from_der	GmSSL/include/gmssl/x509.h	/^int x509_rdn_from_der(int *oid, int *tag, const uint8_t **val, size_t *vlen, const uint8_t **more, size_t *mlen, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, int *tag, const uint8_t **val, size_t *vlen, const uint8_t **more, size_t *mlen, const uint8_t **in, size_t *inlen)
x509_rdn_from_der	GmSSL/src/x509_cer.c	/^int x509_rdn_from_der(int *oid, int *tag, const uint8_t **val, size_t *vlen,$/;"	f	signature:(int *oid, int *tag, const uint8_t **val, size_t *vlen, const uint8_t **more, size_t *morelen, const uint8_t **in, size_t *inlen)
x509_rdn_print	GmSSL/include/gmssl/x509.h	/^int x509_rdn_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_rdn_print	GmSSL/src/x509_cer.c	/^int x509_rdn_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_rdn_to_der	GmSSL/include/gmssl/x509.h	/^int x509_rdn_to_der(int oid, int tag, const uint8_t *val, size_t vlen, const uint8_t *more, size_t mlen, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, int tag, const uint8_t *val, size_t vlen, const uint8_t *more, size_t mlen, uint8_t **out, size_t *outlen)
x509_rdn_to_der	GmSSL/src/x509_cer.c	/^int x509_rdn_to_der(int oid, int tag, const uint8_t *val, size_t vlen,$/;"	f	signature:(int oid, int tag, const uint8_t *val, size_t vlen, const uint8_t *more, size_t morelen, uint8_t **out, size_t *outlen)
x509_req_from_pem	GmSSL/include/gmssl/x509_req.h	/^int x509_req_from_pem(uint8_t *req, size_t *reqlen, size_t maxlen, FILE *fp);$/;"	p	signature:(uint8_t *req, size_t *reqlen, size_t maxlen, FILE *fp)
x509_req_from_pem	GmSSL/src/x509_req.c	/^int x509_req_from_pem(uint8_t *req, size_t *reqlen, size_t maxlen, FILE *fp)$/;"	f	signature:(uint8_t *req, size_t *reqlen, size_t maxlen, FILE *fp)
x509_req_get_details	GmSSL/include/gmssl/x509_req.h	/^int x509_req_get_details(const uint8_t *req, size_t reqlen,$/;"	p	signature:(const uint8_t *req, size_t reqlen, int *verison, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **attributes, size_t *attributes_len, int *signature_algor, const uint8_t **signature, size_t *signature_len)
x509_req_get_details	GmSSL/src/x509_req.c	/^int x509_req_get_details(const uint8_t *req, size_t reqlen,$/;"	f	signature:(const uint8_t *req, size_t reqlen, int *version, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **attributes, size_t *attributes_len, int *signature_algor, const uint8_t **signature, size_t *signature_len)
x509_req_print	GmSSL/include/gmssl/x509_req.h	/^int x509_req_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *req, size_t reqlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *req, size_t reqlen)
x509_req_print	GmSSL/src/x509_req.c	/^int x509_req_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *req, size_t reqlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *req, size_t reqlen)
x509_req_sign	GmSSL/include/gmssl/x509_req.h	/^int x509_req_sign(uint8_t *req, size_t *reqlen, size_t maxlen,$/;"	p	signature:(uint8_t *req, size_t *reqlen, size_t maxlen, int version, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *attrs, size_t attrs_len, int signature_algor, const SM2_KEY *sign_key, const char *signer_id, size_t signer_id_len)
x509_req_sign	GmSSL/src/x509_req.c	/^int x509_req_sign($/;"	f	signature:( uint8_t *req, size_t *reqlen, size_t maxlen, int version, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *attrs, size_t attrs_len, int signature_algor, const SM2_KEY *sign_key, const char *signer_id, size_t signer_id_len)
x509_req_to_pem	GmSSL/include/gmssl/x509_req.h	/^int x509_req_to_pem(const uint8_t *req, size_t reqlen, FILE *fp);$/;"	p	signature:(const uint8_t *req, size_t reqlen, FILE *fp)
x509_req_to_pem	GmSSL/src/x509_req.c	/^int x509_req_to_pem(const uint8_t *req, size_t reqlen, FILE *fp)$/;"	f	signature:(const uint8_t *req, size_t reqlen, FILE *fp)
x509_req_verify	GmSSL/include/gmssl/x509_req.h	/^int x509_req_verify(const uint8_t *req, size_t reqlen,$/;"	p	signature:(const uint8_t *req, size_t reqlen, const SM2_KEY *sign_pubkey, const char *signer_id, size_t signer_id_len)
x509_req_verify	GmSSL/src/x509_req.c	/^int x509_req_verify(const uint8_t *req, size_t reqlen, const SM2_KEY *sign_pubkey, const char *signer_id, size_t signer_id_len)$/;"	f	signature:(const uint8_t *req, size_t reqlen, const SM2_KEY *sign_pubkey, const char *signer_id, size_t signer_id_len)
x509_request_from_der	GmSSL/include/gmssl/x509_req.h	/^int x509_request_from_der($/;"	p	signature:( int *version, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **attrs, size_t *attrs_len, int *signature_algor, const uint8_t **sig, size_t *siglen, const uint8_t **in, size_t *inlen)
x509_request_from_der	GmSSL/src/x509_req.c	/^int x509_request_from_der($/;"	f	signature:( int *version, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **attrs, size_t *attrs_len, int *signature_algor, const uint8_t **sig, size_t *siglen, const uint8_t **in, size_t *inlen)
x509_request_info_from_der	GmSSL/include/gmssl/x509_req.h	/^int x509_request_info_from_der(int *version, const uint8_t **subject, size_t *subject_len,$/;"	p	signature:(int *version, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **attrs, size_t *attrs_len, const uint8_t **in, size_t *inlen)
x509_request_info_from_der	GmSSL/src/x509_req.c	/^int x509_request_info_from_der($/;"	f	signature:( int *version, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **attrs, size_t *attrs_len, const uint8_t **in, size_t *inlen)
x509_request_info_print	GmSSL/include/gmssl/x509_req.h	/^int x509_request_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_request_info_print	GmSSL/src/x509_req.c	/^int x509_request_info_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_request_info_to_der	GmSSL/include/gmssl/x509_req.h	/^int x509_request_info_to_der(int version, const uint8_t *subject, size_t subject_len,$/;"	p	signature:(int version, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *attrs, size_t attrs_len, uint8_t **out, size_t *outlen)
x509_request_info_to_der	GmSSL/src/x509_req.c	/^int x509_request_info_to_der($/;"	f	signature:( int version, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *attrs, size_t attrs_len, uint8_t **out, size_t *outlen)
x509_request_print	GmSSL/include/gmssl/x509_req.h	/^int x509_request_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_request_print	GmSSL/src/x509_req.c	/^int x509_request_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_request_to_der	GmSSL/include/gmssl/x509_req.h	/^int x509_request_to_der($/;"	p	signature:( int version, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *attrs, size_t attrs_len, int signature_algor, const uint8_t *sig, size_t siglen, uint8_t **out, size_t *outlen)
x509_request_to_der	GmSSL/src/x509_req.c	/^int x509_request_to_der($/;"	f	signature:( int version, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *attrs, size_t attrs_len, int signature_algor, const uint8_t *sig, size_t siglen, uint8_t **out, size_t *outlen)
x509_revoke_reason_from_name	GmSSL/include/gmssl/x509_ext.h	/^int x509_revoke_reason_from_name(int *flag, const char *name);$/;"	p	signature:(int *flag, const char *name)
x509_revoke_reason_from_name	GmSSL/src/x509_ext.c	/^int x509_revoke_reason_from_name(int *flag, const char *name)$/;"	f	signature:(int *flag, const char *name)
x509_revoke_reason_name	GmSSL/include/gmssl/x509_ext.h	/^const char *x509_revoke_reason_name(int flag);$/;"	p	signature:(int flag)
x509_revoke_reason_name	GmSSL/src/x509_ext.c	/^const char *x509_revoke_reason_name(int flag)$/;"	f	signature:(int flag)
x509_revoke_reasons	GmSSL/src/x509_ext.c	/^static const char *x509_revoke_reasons[] = {$/;"	v	file:
x509_revoke_reasons_count	GmSSL/src/x509_ext.c	/^static size_t x509_revoke_reasons_count =$/;"	v	file:
x509_revoke_reasons_from_der	GmSSL/include/gmssl/x509_ext.h	493;"	d
x509_revoke_reasons_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_revoke_reasons_print(FILE *fp, int fmt, int ind, const char *label, int bits);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, int bits)
x509_revoke_reasons_print	GmSSL/src/x509_ext.c	/^int x509_revoke_reasons_print(FILE *fp, int fmt, int ind, const char *label, int bits)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, int bits)
x509_revoke_reasons_to_der	GmSSL/include/gmssl/x509_ext.h	492;"	d
x509_revoked_cert_from_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_revoked_cert_from_der($/;"	p	signature:( const uint8_t **serial, size_t *serial_len, time_t *revoke_date, const uint8_t **entry_exts, size_t *entry_exts_len, const uint8_t **in, size_t *inlen)
x509_revoked_cert_from_der	GmSSL/src/x509_crl.c	/^int x509_revoked_cert_from_der($/;"	f	signature:( const uint8_t **serial, size_t *serial_len, time_t *revoke_date, const uint8_t **entry_exts, size_t *entry_exts_len, const uint8_t **in, size_t *inlen)
x509_revoked_cert_print	GmSSL/include/gmssl/x509_crl.h	/^int x509_revoked_cert_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_revoked_cert_print	GmSSL/src/x509_crl.c	/^int x509_revoked_cert_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_revoked_cert_to_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_revoked_cert_to_der($/;"	p	signature:( const uint8_t *serial, size_t serial_len, time_t revoke_date, const uint8_t *entry_exts, size_t entry_exts_len, uint8_t **out, size_t *outlen)
x509_revoked_cert_to_der	GmSSL/src/x509_crl.c	/^int x509_revoked_cert_to_der($/;"	f	signature:( const uint8_t *serial, size_t serial_len, time_t revoke_date, const uint8_t *entry_exts, size_t entry_exts_len, uint8_t **out, size_t *outlen)
x509_revoked_certs_add_revoked_cert	GmSSL/include/gmssl/x509_crl.h	/^int x509_revoked_certs_add_revoked_cert(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	p	signature:(uint8_t *d, size_t *dlen, size_t maxlen, const uint8_t *serial, size_t serial_len, time_t revoke_date, const uint8_t *entry_exts, size_t entry_exts_len)
x509_revoked_certs_add_revoked_cert	GmSSL/src/x509_crl.c	/^int x509_revoked_certs_add_revoked_cert(uint8_t *d, size_t *dlen, size_t maxlen,$/;"	f	signature:(uint8_t *d, size_t *dlen, size_t maxlen, const uint8_t *serial, size_t serial_len, time_t revoke_date, const uint8_t *entry_exts, size_t entry_exts_len)
x509_revoked_certs_from_der	GmSSL/include/gmssl/x509_crl.h	137;"	d
x509_revoked_certs_get_revoked_cert_by_serial_number	GmSSL/include/gmssl/x509_crl.h	/^int x509_revoked_certs_get_revoked_cert_by_serial_number(const uint8_t *d, size_t dlen,$/;"	p	signature:(const uint8_t *d, size_t dlen, const uint8_t *serial, size_t serial_len, time_t *revoke_date, const uint8_t **entry_exts, size_t *entry_exts_len)
x509_revoked_certs_get_revoked_cert_by_serial_number	GmSSL/src/x509_crl.c	/^int x509_revoked_certs_get_revoked_cert_by_serial_number(const uint8_t *d, size_t dlen,$/;"	f	signature:(const uint8_t *d, size_t dlen, const uint8_t *serial, size_t serial_len, time_t *revoke_date, const uint8_t **entry_exts, size_t *entry_exts_len)
x509_revoked_certs_print	GmSSL/include/gmssl/x509_crl.h	/^int x509_revoked_certs_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_revoked_certs_print	GmSSL/src/x509_crl.c	/^int x509_revoked_certs_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_revoked_certs_to_der	GmSSL/include/gmssl/x509_crl.h	136;"	d
x509_sign_algors	GmSSL/src/x509_alg.c	/^static const ASN1_OID_INFO x509_sign_algors[] = {$/;"	v	file:
x509_sign_algors_count	GmSSL/src/x509_alg.c	/^static const int x509_sign_algors_count =$/;"	v	file:
x509_signature_algor_from_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_signature_algor_from_der(int *oid, const uint8_t **in, size_t *inlen);$/;"	p	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_signature_algor_from_der	GmSSL/src/x509_alg.c	/^int x509_signature_algor_from_der(int *oid, const uint8_t **in, size_t *inlen)$/;"	f	signature:(int *oid, const uint8_t **in, size_t *inlen)
x509_signature_algor_from_name	GmSSL/include/gmssl/x509_alg.h	/^int x509_signature_algor_from_name(const char *name);$/;"	p	signature:(const char *name)
x509_signature_algor_from_name	GmSSL/src/x509_alg.c	/^int x509_signature_algor_from_name(const char *name)$/;"	f	signature:(const char *name)
x509_signature_algor_name	GmSSL/include/gmssl/x509_alg.h	/^const char *x509_signature_algor_name(int oid);$/;"	p	signature:(int oid)
x509_signature_algor_name	GmSSL/src/x509_alg.c	/^const char *x509_signature_algor_name(int oid)$/;"	f	signature:(int oid)
x509_signature_algor_print	GmSSL/include/gmssl/x509_alg.h	/^int x509_signature_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_signature_algor_print	GmSSL/src/x509_alg.c	/^int x509_signature_algor_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_signature_algor_to_der	GmSSL/include/gmssl/x509_alg.h	/^int x509_signature_algor_to_der(int oid, uint8_t **out, size_t *outlen);$/;"	p	signature:(int oid, uint8_t **out, size_t *outlen)
x509_signature_algor_to_der	GmSSL/src/x509_alg.c	/^int x509_signature_algor_to_der(int oid, uint8_t **out, size_t *outlen)$/;"	f	signature:(int oid, uint8_t **out, size_t *outlen)
x509_subject_alt_name_print	GmSSL/include/gmssl/x509_ext.h	356;"	d
x509_tbs_cert_from_der	GmSSL/include/gmssl/x509.h	/^int x509_tbs_cert_from_der($/;"	p	signature:( int *version, const uint8_t **serial, size_t *serial_len, int *signature_algor, const uint8_t **issuer, size_t *issuer_len, time_t *not_before, time_t *not_after, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **issuer_unique_id, size_t *issuer_unique_id_len, const uint8_t **subject_unique_id, size_t *subject_unique_id_len, const uint8_t **exts, size_t *exts_len, const uint8_t **in, size_t *inlen)
x509_tbs_cert_from_der	GmSSL/src/x509_cer.c	/^int x509_tbs_cert_from_der($/;"	f	signature:( int *version, const uint8_t **serial, size_t *serial_len, int *signature_algor, const uint8_t **issuer, size_t *issuer_len, time_t *not_before, time_t *not_after, const uint8_t **subject, size_t *subject_len, SM2_KEY *subject_public_key, const uint8_t **issuer_unique_id, size_t *issuer_unique_id_len, const uint8_t **subject_unique_id, size_t *subject_unique_id_len, const uint8_t **exts, size_t *exts_len, const uint8_t **in, size_t *inlen)
x509_tbs_cert_print	GmSSL/include/gmssl/x509.h	/^int x509_tbs_cert_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_tbs_cert_print	GmSSL/src/x509_cer.c	/^int x509_tbs_cert_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_tbs_cert_to_der	GmSSL/include/gmssl/x509.h	/^int x509_tbs_cert_to_der($/;"	p	signature:( int version, const uint8_t *serial, size_t serial_len, int signature_algor, const uint8_t *issuer, size_t issuer_len, time_t not_before, time_t not_after, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *issuer_unique_id, size_t issuer_unique_id_len, const uint8_t *subject_unique_id, size_t subject_unique_id_len, const uint8_t *exts, size_t exts_len, uint8_t **out, size_t *outlen)
x509_tbs_cert_to_der	GmSSL/src/x509_cer.c	/^int x509_tbs_cert_to_der($/;"	f	signature:( int version, const uint8_t *serial, size_t serial_len, int signature_algor, const uint8_t *issuer, size_t issuer_len, time_t not_before, time_t not_after, const uint8_t *subject, size_t subject_len, const SM2_KEY *subject_public_key, const uint8_t *issuer_unique_id, size_t issuer_unique_id_len, const uint8_t *subject_unique_id, size_t subject_unique_id_len, const uint8_t *exts, size_t exts_len, uint8_t **out, size_t *outlen)
x509_tbs_crl_from_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_tbs_crl_from_der($/;"	p	signature:( int *version, int *signature_algor, const uint8_t **issuer, size_t *issuer_len, time_t *this_update, time_t *next_update, const uint8_t **revoked_certs, size_t *revoked_certs_len, const uint8_t **exts, size_t *exts_len, const uint8_t **in, size_t *inlen)
x509_tbs_crl_from_der	GmSSL/src/x509_crl.c	/^int x509_tbs_crl_from_der($/;"	f	signature:( int *version, int *signature_algor, const uint8_t **issuer, size_t *issuer_len, time_t *this_update, time_t *next_update, const uint8_t **revoked_certs, size_t *revoked_certs_len, const uint8_t **exts, size_t *exts_len, const uint8_t **in, size_t *inlen)
x509_tbs_crl_print	GmSSL/include/gmssl/x509_crl.h	/^int x509_tbs_crl_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_tbs_crl_print	GmSSL/src/x509_crl.c	/^int x509_tbs_crl_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_tbs_crl_sign	GmSSL/src/x509_crl.c	/^int x509_tbs_crl_sign($/;"	f	signature:( int version, int signature_algor, const uint8_t *issuer, size_t issuer_len, time_t this_update, time_t next_update, const uint8_t *revoked_certs, size_t revoked_certs_len, const uint8_t *exts, size_t exts_len, const SM2_KEY *sign_key, const char *signer_id, size_t signer_id_len, uint8_t *crl, size_t *crl_len)
x509_tbs_crl_to_der	GmSSL/include/gmssl/x509_crl.h	/^int x509_tbs_crl_to_der($/;"	p	signature:( int version, int signature_algor, const uint8_t *issuer, size_t issuer_len, time_t this_update, time_t next_update, const uint8_t *revoked_certs, size_t revoked_certs_len, const uint8_t *exts, size_t exts_len, uint8_t **out, size_t *outlen)
x509_tbs_crl_to_der	GmSSL/src/x509_crl.c	/^int x509_tbs_crl_to_der($/;"	f	signature:( int version, int signature_algor, const uint8_t *issuer, size_t issuer_len, time_t this_update, time_t next_update, const uint8_t *revoked_certs, size_t revoked_certs_len, const uint8_t *exts, size_t exts_len, uint8_t **out, size_t *outlen)
x509_time_from_der	GmSSL/include/gmssl/x509.h	/^int x509_time_from_der(time_t *a, const uint8_t **in, size_t *inlen);$/;"	p	signature:(time_t *a, const uint8_t **in, size_t *inlen)
x509_time_from_der	GmSSL/src/x509_cer.c	/^int x509_time_from_der(time_t *tv, const uint8_t **in, size_t *inlen)$/;"	f	signature:(time_t *tv, const uint8_t **in, size_t *inlen)
x509_time_to_der	GmSSL/include/gmssl/x509.h	/^int x509_time_to_der(time_t a, uint8_t **out, size_t *outlen);$/;"	p	signature:(time_t a, uint8_t **out, size_t *outlen)
x509_time_to_der	GmSSL/src/x509_cer.c	/^int x509_time_to_der(time_t tv, uint8_t **out, size_t *outlen)$/;"	f	signature:(time_t tv, uint8_t **out, size_t *outlen)
x509_user_notice_from_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_user_notice_from_der($/;"	p	signature:( int *notice_ref_org_tag, const uint8_t **notice_ref_org, size_t *notice_ref_org_len, int *notice_ref_notice_numbers, size_t *notice_ref_notice_numbers_cnt, size_t max_notice_ref_notice_numbers, int *explicit_text_tag, const uint8_t **explicit_text, size_t *explicit_text_len, const uint8_t **in, size_t *inlen)
x509_user_notice_from_der	GmSSL/src/x509_ext.c	/^int x509_user_notice_from_der($/;"	f	signature:( int *notice_ref_org_tag, const uint8_t **notice_ref_org, size_t *notice_ref_org_len, int *notice_ref_notice_numbers, size_t *notice_ref_notice_numbers_cnt, size_t max_notice_ref_notice_numbers, int *explicit_text_tag, const uint8_t **explicit_text, size_t *explicit_text_len, const uint8_t **in, size_t *inlen)
x509_user_notice_print	GmSSL/include/gmssl/x509_ext.h	/^int x509_user_notice_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_user_notice_print	GmSSL/src/x509_ext.c	/^int x509_user_notice_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_user_notice_to_der	GmSSL/include/gmssl/x509_ext.h	/^int x509_user_notice_to_der($/;"	p	signature:( int notice_ref_org_tag, const uint8_t *notice_ref_org, size_t notice_ref_org_len, const int *notice_ref_notice_numbers, size_t notice_ref_notice_numbers_cnt, int explicit_text_tag, const uint8_t *explicit_text, size_t explicit_text_len, uint8_t **out, size_t *outlen)
x509_user_notice_to_der	GmSSL/src/x509_ext.c	/^int x509_user_notice_to_der($/;"	f	signature:( int notice_ref_org_tag, const uint8_t *notice_ref_org, size_t notice_ref_org_len, const int *notice_ref_notice_numbers, size_t notice_ref_notice_numbers_cnt, int explicit_text_tag, const uint8_t *explicit_text, size_t explicit_text_len, uint8_t **out, size_t *outlen)
x509_validity_add_days	GmSSL/include/gmssl/x509.h	/^int x509_validity_add_days(time_t *not_after, time_t not_before, int days);$/;"	p	signature:(time_t *not_after, time_t not_before, int days)
x509_validity_add_days	GmSSL/src/x509_cer.c	/^int x509_validity_add_days(time_t *not_after, time_t not_before, int days)$/;"	f	signature:(time_t *not_after, time_t not_before, int days)
x509_validity_from_der	GmSSL/include/gmssl/x509.h	/^int x509_validity_from_der(time_t *not_before, time_t *not_after, const uint8_t **in, size_t *inlen);$/;"	p	signature:(time_t *not_before, time_t *not_after, const uint8_t **in, size_t *inlen)
x509_validity_from_der	GmSSL/src/x509_cer.c	/^int x509_validity_from_der(time_t *not_before, time_t *not_after, const uint8_t **in, size_t *inlen)$/;"	f	signature:(time_t *not_before, time_t *not_after, const uint8_t **in, size_t *inlen)
x509_validity_print	GmSSL/include/gmssl/x509.h	/^int x509_validity_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen);$/;"	p	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_validity_print	GmSSL/src/x509_cer.c	/^int x509_validity_print(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)$/;"	f	signature:(FILE *fp, int fmt, int ind, const char *label, const uint8_t *d, size_t dlen)
x509_validity_to_der	GmSSL/include/gmssl/x509.h	/^int x509_validity_to_der(time_t not_before, time_t not_after, uint8_t **out, size_t *outlen);$/;"	p	signature:(time_t not_before, time_t not_after, uint8_t **out, size_t *outlen)
x509_validity_to_der	GmSSL/src/x509_cer.c	/^int x509_validity_to_der(time_t not_before, time_t not_after, uint8_t **out, size_t *outlen)$/;"	f	signature:(time_t not_before, time_t not_after, uint8_t **out, size_t *outlen)
x509_version_name	GmSSL/include/gmssl/x509.h	/^const char *x509_version_name(int version);$/;"	p	signature:(int version)
x509_version_name	GmSSL/src/x509_cer.c	/^const char *x509_version_name(int version)$/;"	f	signature:(int version)
x9	GmSSL/src/aes.c	/^static uint8_t x9(uint8_t a) {$/;"	f	file:	signature:(uint8_t a)
xb	GmSSL/src/aes.c	/^static uint8_t xb(uint8_t a) {$/;"	f	file:	signature:(uint8_t a)
xd	GmSSL/src/aes.c	/^static uint8_t xd(uint8_t a) {$/;"	f	file:	signature:(uint8_t a)
xe	GmSSL/src/aes.c	/^static uint8_t xe(uint8_t a) {$/;"	f	file:	signature:(uint8_t a)
xor_block	GmSSL/tests/sm4test.c	/^static void xor_block(unsigned char *out, const unsigned char *in)$/;"	f	file:	signature:(unsigned char *out, const unsigned char *in)
y	GmSSL/include/gmssl/sm2.h	/^	uint8_t y[32];$/;"	m	struct:__anon45	access:public
y	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char y[ECCref_MAX_LEN];$/;"	m	struct:ECCCipher_st	access:public
y	GmSSL/tools/sdfutil/sdf.h	/^	unsigned char y[ECCref_MAX_LEN];$/;"	m	struct:ECCrefPublicKey_st	access:public
y	GmSSL/tools/sdfutil/sdf_sansec.h	/^	unsigned char y[ECCref_MAX_LEN];$/;"	m	struct:__anon4	access:public
zuc256_generate_keystream	GmSSL/include/gmssl/zuc.h	117;"	d
zuc256_generate_keyword	GmSSL/include/gmssl/zuc.h	118;"	d
zuc256_init	GmSSL/include/gmssl/zuc.h	/^void zuc256_init(ZUC256_STATE *state, const uint8_t key[ZUC256_KEY_SIZE], const uint8_t iv[ZUC256_IV_SIZE]);$/;"	p	signature:(ZUC256_STATE *state, const uint8_t key[ZUC256_KEY_SIZE], const uint8_t iv[ZUC256_IV_SIZE])
zuc256_init	GmSSL/src/zuc.c	/^void zuc256_init(ZUC_STATE *key, const uint8_t K[32],$/;"	f	signature:(ZUC_STATE *key, const uint8_t K[32], const uint8_t IV[23])
zuc256_mac_finish	GmSSL/include/gmssl/zuc.h	/^void zuc256_mac_finish(ZUC256_MAC_CTX *ctx, const uint8_t *data, size_t nbits, uint8_t *mac);$/;"	p	signature:(ZUC256_MAC_CTX *ctx, const uint8_t *data, size_t nbits, uint8_t *mac)
zuc256_mac_finish	GmSSL/src/zuc.c	/^void zuc256_mac_finish(ZUC256_MAC_CTX *ctx, const uint8_t *data, size_t nbits, uint8_t *mac)$/;"	f	signature:(ZUC256_MAC_CTX *ctx, const uint8_t *data, size_t nbits, uint8_t *mac)
zuc256_mac_init	GmSSL/include/gmssl/zuc.h	/^void zuc256_mac_init(ZUC256_MAC_CTX *ctx, const uint8_t key[ZUC256_KEY_SIZE],$/;"	p	signature:(ZUC256_MAC_CTX *ctx, const uint8_t key[ZUC256_KEY_SIZE], const uint8_t iv[ZUC256_IV_SIZE], int macbits)
zuc256_mac_init	GmSSL/src/zuc.c	/^void zuc256_mac_init(ZUC256_MAC_CTX *ctx, const uint8_t key[32],$/;"	f	signature:(ZUC256_MAC_CTX *ctx, const uint8_t key[32], const uint8_t iv[23], int macbits)
zuc256_mac_test	GmSSL/tests/zuctest.c	/^int zuc256_mac_test(void)$/;"	f	signature:(void)
zuc256_mac_update	GmSSL/include/gmssl/zuc.h	/^void zuc256_mac_update(ZUC256_MAC_CTX *ctx, const uint8_t *data, size_t len);$/;"	p	signature:(ZUC256_MAC_CTX *ctx, const uint8_t *data, size_t len)
zuc256_mac_update	GmSSL/src/zuc.c	/^void zuc256_mac_update(ZUC256_MAC_CTX *ctx, const uint8_t *data, size_t len)$/;"	f	signature:(ZUC256_MAC_CTX *ctx, const uint8_t *data, size_t len)
zuc256_set_mac_key	GmSSL/src/zuc.c	/^static void zuc256_set_mac_key(ZUC_STATE *key, const uint8_t K[32],$/;"	f	file:	signature:(ZUC_STATE *key, const uint8_t K[32], const uint8_t IV[23], int macbits)
zuc256_test	GmSSL/tests/zuctest.c	/^int zuc256_test(void)$/;"	f	signature:(void)
zuc_decrypt_finish	GmSSL/include/gmssl/zuc.h	152;"	d
zuc_decrypt_init	GmSSL/include/gmssl/zuc.h	150;"	d
zuc_decrypt_update	GmSSL/include/gmssl/zuc.h	151;"	d
zuc_eea_encrypt	GmSSL/include/gmssl/zuc.h	/^void zuc_eea_encrypt(const ZUC_UINT32 *in, ZUC_UINT32 *out, size_t nbits,$/;"	p	signature:(const ZUC_UINT32 *in, ZUC_UINT32 *out, size_t nbits, const uint8_t key[ZUC_KEY_SIZE], ZUC_UINT32 count, ZUC_UINT5 bearer, ZUC_BIT direction)
zuc_eea_encrypt	GmSSL/src/zuc_modes.c	/^void zuc_eea_encrypt(const ZUC_UINT32 *in, ZUC_UINT32 *out, size_t nbits,$/;"	f	signature:(const ZUC_UINT32 *in, ZUC_UINT32 *out, size_t nbits, const uint8_t key[16], ZUC_UINT32 count, ZUC_UINT5 bearer, ZUC_BIT direction)
zuc_eea_test	GmSSL/tests/zuctest.c	/^static int zuc_eea_test(void)$/;"	f	file:	signature:(void)
zuc_eia_generate_mac	GmSSL/include/gmssl/zuc.h	/^ZUC_UINT32 zuc_eia_generate_mac(const ZUC_UINT32 *data, size_t nbits,$/;"	p	signature:(const ZUC_UINT32 *data, size_t nbits, const uint8_t key[ZUC_KEY_SIZE], ZUC_UINT32 count, ZUC_UINT5 bearer, ZUC_BIT direction)
zuc_eia_generate_mac	GmSSL/src/zuc_modes.c	/^ZUC_UINT32 zuc_eia_generate_mac(const ZUC_UINT32 *data, size_t nbits,$/;"	f	signature:(const ZUC_UINT32 *data, size_t nbits, const uint8_t key[16], ZUC_UINT32 count, ZUC_UINT5 bearer, ZUC_BIT direction)
zuc_eia_test	GmSSL/tests/zuctest.c	/^static int zuc_eia_test(void)$/;"	f	file:	signature:(void)
zuc_encrypt	GmSSL/include/gmssl/zuc.h	/^void zuc_encrypt(ZUC_STATE *state, const uint8_t *in, size_t inlen, uint8_t *out);$/;"	p	signature:(ZUC_STATE *state, const uint8_t *in, size_t inlen, uint8_t *out)
zuc_encrypt	GmSSL/src/zuc.c	/^void zuc_encrypt(ZUC_STATE *state, const uint8_t *in, size_t inlen, uint8_t *out)$/;"	f	signature:(ZUC_STATE *state, const uint8_t *in, size_t inlen, uint8_t *out)
zuc_encrypt_finish	GmSSL/include/gmssl/zuc.h	/^int zuc_encrypt_finish(ZUC_CTX *ctx, uint8_t *out, size_t *outlen);$/;"	p	signature:(ZUC_CTX *ctx, uint8_t *out, size_t *outlen)
zuc_encrypt_finish	GmSSL/src/zuc_modes.c	/^int zuc_encrypt_finish(ZUC_CTX *ctx, uint8_t *out, size_t *outlen)$/;"	f	signature:(ZUC_CTX *ctx, uint8_t *out, size_t *outlen)
zuc_encrypt_init	GmSSL/include/gmssl/zuc.h	/^int zuc_encrypt_init(ZUC_CTX *ctx, const uint8_t key[ZUC_KEY_SIZE], const uint8_t iv[ZUC_IV_SIZE]);$/;"	p	signature:(ZUC_CTX *ctx, const uint8_t key[ZUC_KEY_SIZE], const uint8_t iv[ZUC_IV_SIZE])
zuc_encrypt_init	GmSSL/src/zuc_modes.c	/^int zuc_encrypt_init(ZUC_CTX *ctx, const uint8_t key[ZUC_KEY_SIZE], const uint8_t iv[ZUC_IV_SIZE])$/;"	f	signature:(ZUC_CTX *ctx, const uint8_t key[ZUC_KEY_SIZE], const uint8_t iv[ZUC_IV_SIZE])
zuc_encrypt_update	GmSSL/include/gmssl/zuc.h	/^int zuc_encrypt_update(ZUC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen);$/;"	p	signature:(ZUC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
zuc_encrypt_update	GmSSL/src/zuc_modes.c	/^int zuc_encrypt_update(ZUC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)$/;"	f	signature:(ZUC_CTX *ctx, const uint8_t *in, size_t inlen, uint8_t *out, size_t *outlen)
zuc_generate_keystream	GmSSL/include/gmssl/zuc.h	/^void zuc_generate_keystream(ZUC_STATE *state, size_t nwords, ZUC_UINT32 *words);$/;"	p	signature:(ZUC_STATE *state, size_t nwords, ZUC_UINT32 *words)
zuc_generate_keystream	GmSSL/src/zuc.c	/^void zuc_generate_keystream(ZUC_STATE *state, size_t nwords, uint32_t *keystream)$/;"	f	signature:(ZUC_STATE *state, size_t nwords, uint32_t *keystream)
zuc_generate_keyword	GmSSL/include/gmssl/zuc.h	/^ZUC_UINT32 zuc_generate_keyword(ZUC_STATE *state);$/;"	p	signature:(ZUC_STATE *state)
zuc_generate_keyword	GmSSL/src/zuc.c	/^uint32_t zuc_generate_keyword(ZUC_STATE *state)$/;"	f	signature:(ZUC_STATE *state)
zuc_init	GmSSL/include/gmssl/zuc.h	/^void zuc_init(ZUC_STATE *state, const uint8_t key[ZUC_KEY_SIZE], const uint8_t iv[ZUC_IV_SIZE]);$/;"	p	signature:(ZUC_STATE *state, const uint8_t key[ZUC_KEY_SIZE], const uint8_t iv[ZUC_IV_SIZE])
zuc_init	GmSSL/src/zuc.c	/^void zuc_init(ZUC_STATE *state, const uint8_t *user_key, const uint8_t *iv)$/;"	f	signature:(ZUC_STATE *state, const uint8_t *user_key, const uint8_t *iv)
zuc_mac_finish	GmSSL/include/gmssl/zuc.h	/^void zuc_mac_finish(ZUC_MAC_CTX *ctx, const uint8_t *data, size_t nbits, uint8_t mac[ZUC_MAC_SIZE]);$/;"	p	signature:(ZUC_MAC_CTX *ctx, const uint8_t *data, size_t nbits, uint8_t mac[ZUC_MAC_SIZE])
zuc_mac_finish	GmSSL/src/zuc.c	/^void zuc_mac_finish(ZUC_MAC_CTX *ctx, const uint8_t *data, size_t nbits, uint8_t mac[4])$/;"	f	signature:(ZUC_MAC_CTX *ctx, const uint8_t *data, size_t nbits, uint8_t mac[4])
zuc_mac_init	GmSSL/include/gmssl/zuc.h	/^void zuc_mac_init(ZUC_MAC_CTX *ctx, const uint8_t key[ZUC_KEY_SIZE], const uint8_t iv[ZUC_IV_SIZE]);$/;"	p	signature:(ZUC_MAC_CTX *ctx, const uint8_t key[ZUC_KEY_SIZE], const uint8_t iv[ZUC_IV_SIZE])
zuc_mac_init	GmSSL/src/zuc.c	/^void zuc_mac_init(ZUC_MAC_CTX *ctx, const uint8_t key[16], const uint8_t iv[16])$/;"	f	signature:(ZUC_MAC_CTX *ctx, const uint8_t key[16], const uint8_t iv[16])
zuc_mac_update	GmSSL/include/gmssl/zuc.h	/^void zuc_mac_update(ZUC_MAC_CTX *ctx, const uint8_t *data, size_t len);$/;"	p	signature:(ZUC_MAC_CTX *ctx, const uint8_t *data, size_t len)
zuc_mac_update	GmSSL/src/zuc.c	/^void zuc_mac_update(ZUC_MAC_CTX *ctx, const uint8_t *data, size_t len)$/;"	f	signature:(ZUC_MAC_CTX *ctx, const uint8_t *data, size_t len)
zuc_main	GmSSL/tools/gmssl.c	/^extern int zuc_main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
zuc_main	GmSSL/tools/zuc.c	/^int zuc_main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
zuc_set_eea_key	GmSSL/src/zuc_modes.c	/^static void zuc_set_eea_key(ZUC_STATE *key, const uint8_t user_key[16],$/;"	f	file:	signature:(ZUC_STATE *key, const uint8_t user_key[16], ZUC_UINT32 count, ZUC_UINT5 bearer, ZUC_BIT direction)
zuc_set_eia_iv	GmSSL/src/zuc_modes.c	/^static void zuc_set_eia_iv(uint8_t iv[16], ZUC_UINT32 count, ZUC_UINT5 bearer,$/;"	f	file:	signature:(uint8_t iv[16], ZUC_UINT32 count, ZUC_UINT5 bearer, ZUC_BIT direction)
zuc_state	GmSSL/include/gmssl/zuc.h	/^	ZUC_STATE zuc_state;$/;"	m	struct:__anon35	access:public
zuc_test	GmSSL/tests/zuctest.c	/^int zuc_test(void)$/;"	f	signature:(void)
